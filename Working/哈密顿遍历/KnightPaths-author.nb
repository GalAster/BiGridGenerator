(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    233959,       5734]
NotebookOptionsPosition[    229467,       5595]
NotebookOutlinePosition[    231107,       5646]
CellTagsIndexPosition[    230771,       5634]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Knight Paths", "DemoTitle",
 CellChangeTimes->{{3.5830616467967205`*^9, 3.5830616492615643`*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pawnMemberTest", "[", 
    RowBox[{"knight_", ",", "pawns_"}], "]"}], ":=", 
   RowBox[{"FreeQ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"knight", ",", "#"}], "]"}], "&"}], "/@", "pawns"}], ",", 
     "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteKnightPaths", "[", 
    RowBox[{"knightpaths_", ",", "pawns_"}], "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{"knightpaths", ",", 
     RowBox[{
      RowBox[{"pawnMemberTest", "[", 
       RowBox[{"#", ",", "pawns"}], "]"}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"squareOnBoard", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_Integer", ",", "b_Integer"}], "}"}], ",", "n_", ",", "m_"}], 
    "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"0", "<", "a", "<=", "n"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<", "b", "<=", "m"}], ",", "True", ",", "False"}], "]"}],
      ",", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMoves", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", "pawns_", ",", "knightmoves_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Plus", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", "#"}], "]"}], "&"}], ",", 
       "knightmoves"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"squareOnBoard", "[", 
        RowBox[{"#", ",", "n", ",", "m"}], "]"}], "&&", "\[IndentingNewLine]", 
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"beenhere", ",", "#"}], "]"}]}]}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"recursiveCreateKnightNetwork", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], ",", "paths_", ",", "pawns_", ",", 
     "knightmoves_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newmoves", ",", "newpaths"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newmoves", "=", 
       RowBox[{"findMoves", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "pawns", ",", "knightmoves"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"beenhere", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"newmoves", "===", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "paths", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newpaths", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "\[UndirectedEdge]", "#"}], 
             "&"}], ",", "newmoves"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newpaths", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"paths", ",", "newpaths"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"recursiveCreateKnightNetwork", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "m"}], "}"}], ",", "#", ",", "newpaths", ",",
               "pawns", ",", "knightmoves"}], "]"}], "&"}], ",", "newmoves"}],
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createKnightNetwork", "[", 
    RowBox[{
    "x_", ",", "y_", ",", "boardsize_", ",", "pawns_", ",", "knightmoves_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"beenhere", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"recursiveCreateKnightNetwork", "[", 
        RowBox[{"boardsize", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", "pawns", ",", "knightmoves"}], "]"}], "]"}],
       "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"recursiveRandomPawnSquares", "[", 
    RowBox[{"_", ",", "0"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recursiveRandomPawnSquares", "[", 
   RowBox[{"boardsize_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"temppawns", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"boardsize", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"boardsize", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}], "]"}]}], 
       "}"}]}], "]"}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", "temppawns", "]"}], "]"}], "==", "n"}], ",", 
      "temppawns", ",", 
      RowBox[{"recursiveRandomPawnSquares", "[", 
       RowBox[{"boardsize", ",", "n"}], "]"}], ",", 
      RowBox[{"recursiveRandomPawnSquares", "[", 
       RowBox[{"boardsize", ",", "n"}], "]"}]}], "]"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomPawnSquares", "[", 
    RowBox[{"boardsize_", ",", " ", "n_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temppawns", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"recursiveRandomPawnSquares", "[", 
      RowBox[{"boardsize", ",", "n"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simpleBoard", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_Integer", ",", "m_Integer"}], "}"}], ",", "pawns_", ",", 
     "text_", ",", "x1_", ",", "y1_", ",", "x2_", ",", "y2_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "y1"}], "}"}]}], ",", "Pink", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{"x2", ",", "y2"}], "}"}]}], ",", "Pink", ",", 
             RowBox[{"EvenQ", "[", 
              RowBox[{"x", "+", "y"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"200", "/", "255"}], ",", 
               RowBox[{"255", "/", "255"}], ",", 
               RowBox[{"165", "/", "255"}]}], "]"}], ",", 
             RowBox[{"OddQ", "[", 
              RowBox[{"x", "+", "y"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"37", "/", "255"}], ",", 
               RowBox[{"93", "/", "255"}], ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "m"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[BlackPawn]\>\"", ",", "Large", ",", "Black"}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"8", "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "+", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}]}], "]"}], "&"}], 
          ",", "pawns"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"text", ",", 
            RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[BlackKnight]\>\"", ",", "Large", ",", "Black"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"8", "-", "y1"}]}], "}"}], "+", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"board", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_Integer", ",", "m_Integer"}], "}"}], ",", "pawns_", ",", 
     "moves_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"moves", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", "Pink", ",", 
             RowBox[{"EvenQ", "[", 
              RowBox[{"x", "+", "y"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"200", "/", "255"}], ",", 
               RowBox[{"255", "/", "255"}], ",", 
               RowBox[{"165", "/", "255"}]}], "]"}], ",", 
             RowBox[{"OddQ", "[", 
              RowBox[{"x", "+", "y"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"37", "/", "255"}], ",", 
               RowBox[{"93", "/", "255"}], ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "m"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<X\>\"", ",", "Large", ",", "Bold", ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"169", "/", "255"}], ",", 
              RowBox[{"15", "/", "255"}], ",", 
              RowBox[{"13", "/", "255"}]}], "]"}], ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"8", "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "&"}], "@", 
           RowBox[{"moves", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Thick", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"8", "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "&"}], ",", 
           "moves"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[BlackPawn]\>\"", ",", "Large", ",", "Black"}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"8", "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "+", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}]}], "]"}], "&"}], 
          ",", "pawns"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[BlackKnight]\>\"", ",", "Large", ",", "Black"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"8", "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "&"}], "@", 
           RowBox[{"moves", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"knightPathFinder", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"currentX_", ",", "currentY_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"targetX_", ",", "targetY_"}], "}"}]}], "}"}], ",", 
     "boardsize_", ",", "pawns_", ",", "knightmoves_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"deleteKnightPaths", "[", 
       RowBox[{
        RowBox[{"createKnightNetwork", "[", 
         RowBox[{
         "currentX", ",", "currentY", ",", "boardsize", ",", "pawns", ",", 
          "knightmoves"}], "]"}], ",", "pawns"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vert", "=", 
      RowBox[{"Union", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"g", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_"}], "}"}], ",", "\[Infinity]"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"pawns", ",", 
          RowBox[{"{", 
           RowBox[{"currentX", ",", "currentY"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FreeQ", "[", 
            RowBox[{"g", ",", 
             RowBox[{"{", 
              RowBox[{"currentX", ",", "currentY"}], "}"}]}], "]"}]}], "&&", 
          RowBox[{"!", 
           RowBox[{"FreeQ", "[", 
            RowBox[{"g", ",", 
             RowBox[{"{", 
              RowBox[{"targetX", ",", "targetY"}], "}"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"g", "=", 
             RowBox[{"Graph", "[", 
              RowBox[{"vert", ",", "g"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"VertexComponent", "[", 
               RowBox[{"g", ",", 
                RowBox[{"{", 
                 RowBox[{"currentX", ",", "currentY"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"targetX", ",", "targetY"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"board", "[", 
            RowBox[{"boardsize", ",", "pawns", ",", 
             RowBox[{"FindShortestPath", "[", 
              RowBox[{"g", ",", 
               RowBox[{"{", 
                RowBox[{"currentX", ",", "currentY"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"targetX", ",", "targetY"}], "}"}]}], "]"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"simpleBoard", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"8", ",", "8"}], "}"}], ",", "pawns", ",", 
             "\"\<No path exists\>\"", ",", "currentX", ",", "currentY", ",", 
             "targetX", ",", "targetY"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"simpleBoard", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"8", ",", "8"}], "}"}], ",", "pawns", ",", 
           "\"\<No path exists\>\"", ",", "currentX", ",", "currentY", ",", 
           "targetX", ",", "targetY"}], "]"}]}], "\[IndentingNewLine]", "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"simpleBoard", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], ",", "pawns", ",", 
         "\"\<Not a valid starting square\>\"", ",", "currentX", ",", 
         "currentY", ",", "targetX", ",", "targetY"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.5824567557195024`*^9, 3.5824567910119977`*^9}, 
   3.582885830464587*^9, {3.5830592768739743`*^9, 3.5830593212564435`*^9}, {
   3.583060273647005*^9, 3.583060273943434*^9}, {3.5830619055722847`*^9, 
   3.583061915712392*^9}, {3.583068491895088*^9, 3.583068502664912*^9}, 
   3.583068553147015*^9, {3.583072729048907*^9, 3.583072747020308*^9}, {
   3.5830729510034847`*^9, 3.5830729569003563`*^9}},
 CellID->173234154],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"boardsize", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8"}], "}"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5830878108975773`*^9, 3.5830878219186797`*^9}},
 CellID->581163151]
}, Closed]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "k", "]"}], ";", "\[IndentingNewLine]", " ", 
    RowBox[{"DynamicModule", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"knightMoves", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{"ClickPane", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pts", "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"pts", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"oldA", "\[NotEqual]", "a"}], "||", 
              RowBox[{"oldK", "\[NotEqual]", "k"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"pawns", "=", 
              RowBox[{"randomPawnSquares", "[", 
               RowBox[{"boardsize", ",", "a"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "The", " ", "Dynamic", " ", "keeps", " ", "the", " ", 
              "ClickPane", " ", "active"}], ",", " ", 
             RowBox[{
             "so", " ", "we", " ", "make", " ", "sure", " ", "to", " ", 
              "only", " ", "call", " ", "knightPathFinder", " ", "when", " ", 
              "there", " ", "was", " ", "a", " ", "change"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"oldA", "\[NotEqual]", "a"}], "||", 
                  RowBox[{"oldpts", "=!=", "pts"}], "||", "oldpawns"}], "=!=",
                  "pawns"}], "||", 
                RowBox[{"oldK", "\[NotEqual]", "k"}]}], ",", 
               RowBox[{"gr", "=", 
                RowBox[{"knightPathFinder", "[", 
                 RowBox[{
                 "pts", ",", "boardsize", ",", "pawns", ",", "knightMoves"}], 
                 "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"oldA", "=", "a"}], ";", "\[IndentingNewLine]", 
             RowBox[{"oldpts", "=", "pts"}], ";", "\[IndentingNewLine]", 
             RowBox[{"oldpawns", "=", "pawns"}], ";", "\[IndentingNewLine]", 
             "gr"}], "\[IndentingNewLine]", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "pts", "]"}], "<", "2"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"pts", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                   RowBox[{"9", "-", 
                    RowBox[{"Ceiling", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "]"}], ",", 
               RowBox[{"pts", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pts", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Ceiling", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"9", "-", 
                    RowBox[{"Ceiling", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "}"}]}]}], 
              "]"}], ";"}], ")"}], "&"}]}], "\[IndentingNewLine]", "]"}], ",",
         ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"400", ",", "400"}], "}"}]}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Text", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Click to move the X. The knight will be placed at the current \
X.\>\"", ",", "14"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"Style", "[", "\"\<random seed\>\"", "]"}]}], "}"}], ",", "0", 
     ",", "1000", ",", "1", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{"Style", "[", "\"\<number of pawns\>\"", "]"}]}], "}"}], ",", 
     "0", ",", "48", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"pawns", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"pts", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"gr", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"oldA", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"oldK", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"oldpawns", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"oldpts", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"430", ",", "430"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.582645598268156*^9, 3.582645612665984*^9}, {
   3.582645915485385*^9, 3.582645959309602*^9}, {3.5826473646008415`*^9, 
   3.5826473708896503`*^9}, {3.5827429386152983`*^9, 
   3.5827429511734333`*^9}, {3.5827430366311483`*^9, 3.582743037676358*^9}, {
   3.582743606897232*^9, 3.5827436161793547`*^9}, {3.5827438606127577`*^9, 
   3.582743871798078*^9}, {3.58274398333926*^9, 3.5827439936665983`*^9}, {
   3.582744026224147*^9, 3.582744101198535*^9}, {3.5827442990710735`*^9, 
   3.582744310724394*^9}, {3.5827443504424047`*^9, 3.5827443711906147`*^9}, 
   3.5827469178276405`*^9, {3.582747067916849*^9, 3.5827470697732677`*^9}, {
   3.582747116792184*^9, 3.5827471299743385`*^9}, {3.5828307905897913`*^9, 
   3.5828308238337374`*^9}, {3.5828308828491774`*^9, 
   3.5828309250008235`*^9}, {3.582831142872754*^9, 3.58283116787984*^9}, 
   3.582831313117402*^9, {3.5828313451333275`*^9, 3.582831357941059*^9}, {
   3.5828314971413507`*^9, 3.582831515081541*^9}, {3.5828315688241167`*^9, 
   3.582831583067072*^9}, {3.582831619041057*^9, 3.582831646466148*^9}, 
   3.5828317068387947`*^9, {3.5828318775670366`*^9, 3.5828318857727365`*^9}, {
   3.5828322258875575`*^9, 3.5828322374628887`*^9}, {3.5828322782573147`*^9, 
   3.582832324262207*^9}, {3.582832354822936*^9, 3.5828323554781437`*^9}, {
   3.5828324393446426`*^9, 3.582832457440833*^9}, {3.5828327741554346`*^9, 
   3.5828328172118893`*^9}, {3.582832954524569*^9, 3.5828330926640368`*^9}, {
   3.5828331369061103`*^9, 3.5828331373897257`*^9}, {3.582833278493226*^9, 
   3.5828333036563215`*^9}, {3.58283344588302*^9, 3.5828334611867824`*^9}, {
   3.582833501747218*^9, 3.5828335068640785`*^9}, {3.582833553914178*^9, 
   3.5828335541481867`*^9}, {3.5828354345937786`*^9, 
   3.5828354415826554`*^9}, {3.5828355337640667`*^9, 
   3.5828355566650953`*^9}, {3.5828361806717777`*^9, 
   3.5828361840570183`*^9}, {3.5828363767814693`*^9, 
   3.5828364683856497`*^9}, {3.5828365284462914`*^9, 3.582836546074484*^9}, {
   3.582836637507063*^9, 3.582836660548509*^9}, 3.582837413908001*^9, {
   3.5828374723516216`*^9, 3.5828374728196406`*^9}, {3.5828375750439205`*^9, 
   3.5828375764167433`*^9}, {3.582837677899825*^9, 3.5828377174774723`*^9}, {
   3.5828377880702205`*^9, 3.5828378318130703`*^9}, {3.582886436125475*^9, 
   3.5828864378259077`*^9}, {3.582974327914975*^9, 3.582974352421042*^9}, {
   3.582974391168898*^9, 3.5829743915050983`*^9}, {3.582974521107644*^9, 
   3.582974522828006*^9}, {3.582974574011344*^9, 3.5829745809492292`*^9}, {
   3.582974651754994*^9, 3.582974651881936*^9}, {3.58297548865067*^9, 
   3.5829754965611067`*^9}, {3.582975662639429*^9, 3.582975670803318*^9}, {
   3.5829757032532*^9, 3.582975703396059*^9}, {3.582976105272279*^9, 
   3.582976223651094*^9}, {3.582976268203409*^9, 3.5829762704757442`*^9}, 
   3.582976406630946*^9, 3.582976447010653*^9, {3.5830111304957657`*^9, 
   3.583011155402664*^9}, {3.583011335472293*^9, 3.58301133700712*^9}, {
   3.5830118206438627`*^9, 3.583011832969173*^9}, {3.583012031909932*^9, 
   3.5830120390866737`*^9}, {3.583012193887169*^9, 3.5830121960751753`*^9}, {
   3.583013011846513*^9, 3.583013013295471*^9}, {3.583013646764688*^9, 
   3.583013684295339*^9}, {3.5830137590286093`*^9, 3.58301376152603*^9}, 
   3.583013952954425*^9, {3.583013990213778*^9, 3.583014006524822*^9}, {
   3.5830140604756727`*^9, 3.583014065332329*^9}, {3.5830142275327473`*^9, 
   3.58301429021729*^9}, {3.583014336152*^9, 3.5830143622905703`*^9}, {
   3.583014561958867*^9, 3.583014587390196*^9}, {3.5830146200506077`*^9, 
   3.583014621546131*^9}, {3.583014741492288*^9, 3.5830148617135897`*^9}, {
   3.58301493196915*^9, 3.583015015921769*^9}, {3.583015462384542*^9, 
   3.5830154676413403`*^9}, {3.58301554311446*^9, 3.583015558646962*^9}, {
   3.583015616238387*^9, 3.583015625386961*^9}, {3.5830158239864063`*^9, 
   3.583015838409281*^9}, {3.583016270214199*^9, 3.5830162804256363`*^9}, {
   3.5830195930010967`*^9, 3.5830196134977016`*^9}, {3.583019664685287*^9, 
   3.58301973997418*^9}, {3.583019798015106*^9, 3.583019925143465*^9}, 
   3.583020205042515*^9, {3.5830202534136887`*^9, 3.5830203869960737`*^9}, {
   3.58302044214179*^9, 3.5830204423941317`*^9}, {3.583021464224174*^9, 
   3.583021486109989*^9}, {3.583023029002076*^9, 3.583023060213208*^9}, {
   3.583023178380653*^9, 3.583023336532879*^9}, {3.5830233842394447`*^9, 
   3.5830234150593443`*^9}, {3.5830234518240013`*^9, 3.583023475676783*^9}, {
   3.5830235060736027`*^9, 3.5830235364502163`*^9}, {3.583058895761897*^9, 
   3.5830589015495563`*^9}, {3.583059488396631*^9, 3.5830594928738775`*^9}, {
   3.583068918256358*^9, 3.583068958394459*^9}, {3.583068988990234*^9, 
   3.583069020423912*^9}, {3.583072796441641*^9, 3.58307281530223*^9}, {
   3.583072905174793*^9, 3.5830729290540576`*^9}, {3.583073776169723*^9, 
   3.583073863983063*^9}, {3.5830781193201895`*^9, 3.583078161705855*^9}, {
   3.583079782081276*^9, 3.5830798311282034`*^9}, {3.5830798744810576`*^9, 
   3.5830799021557655`*^9}, {3.5830799366477284`*^9, 3.5830799415461745`*^9}, 
   3.583087314127906*^9, {3.5830874114546375`*^9, 3.5830874254680386`*^9}, {
   3.5830876149289827`*^9, 3.5830876523227215`*^9}, {3.583087746351124*^9, 
   3.583087784938982*^9}, {3.583087922600747*^9, 3.5830879476092477`*^9}, {
   3.5830880424877343`*^9, 3.5830880590983953`*^9}, {3.583150480607504*^9, 
   3.583150638142789*^9}},
 CellID->753933074],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, $CellContext`gr$$ = Graphics[{
      Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvVDxZ20Dn8YH0I/gNMDFf643DNcw3+opH9c8TJQ/hoq6QSXegDvz+q1

       "], {{0, 0}, {8, 8}}, {0, 1}], {
       Text[
        Style["X", Large, Bold, 
         RGBColor[
          Rational[169, 255], 
          Rational[1, 17], 
          Rational[13, 255]], FontFamily -> "Arial"], {3.5, 3.5}], 
       Thickness[Large], 
       Dashing[{Small, Small}], 
       Arrow[{{0.5, 7.5}, {2.5, 6.5}, {1.5, 4.5}, {3.5, 3.5}}], {}, 
       Text[
        Style["\[BlackKnight]", Large, 
         GrayLevel[0]], {0.5, 7.5}]}}, {
     Frame -> True, FrameLabel -> {None, None}, 
      FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
    0, $CellContext`oldA$$ = 
    0, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {}, \
$CellContext`oldpts$$ = {{1, 1}, {4, 
    5}}, $CellContext`pawns$$ = {}, $CellContext`pts$$ = {{1, 1}, {4, 5}}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Text[
        Style[
        "Click to move the X. The knight will be placed at the current X.", 
         14]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`k$$], 0, 
       Style["random seed"]}, 0, 1000, 1}, {{
       Hold[$CellContext`a$$], 0, 
       Style["number of pawns"]}, 0, 48, 1}, {
      Hold[$CellContext`pawns$$], {}}, {{
       Hold[$CellContext`pts$$], {{1, 1}, {4, 5}}}, {}}, {{
       Hold[$CellContext`gr$$], 
       Graphics[{
         Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvVDxZ20Dn8YH0I/gNMDFf643DNcw3+opH9c8TJQ/hoq6QSXegDvz+q1

          "], {{0, 0}, {8, 8}}, {0, 1}], {
          Text[
           Style["X", Large, Bold, 
            RGBColor[
             Rational[169, 255], 
             Rational[1, 17], 
             Rational[13, 255]], FontFamily -> "Arial"], {3.5, 3.5}], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          Arrow[{{0.5, 7.5}, {2.5, 6.5}, {1.5, 4.5}, {3.5, 3.5}}], {}, 
          Text[
           Style["\[BlackKnight]", Large, 
            GrayLevel[0]], {0.5, 7.5}]}}, {
        Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}}]}, {}}, {
      Hold[$CellContext`oldA$$], 0}, {
      Hold[$CellContext`oldK$$], -1}, {
      Hold[$CellContext`oldpawns$$], {}}, {{
       Hold[$CellContext`oldpts$$], {{1, 1}, {4, 5}}}, {}}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`k$1375757$$ = 0, $CellContext`a$1375758$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`gr$$ = Graphics[{
           Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvVDxZ20Dn8YH0I/gNMDFf643DNcw3+opH9c8TJQ/hoq6QSXegDvz+q1

            "], {{0, 0}, {8, 8}}, {0, 1}], {
            Text[
             Style["X", Large, Bold, 
              RGBColor[
               Rational[169, 255], 
               Rational[1, 17], 
               Rational[13, 255]], FontFamily -> "Arial"], {3.5, 3.5}], 
            Thickness[Large], 
            Dashing[{Small, Small}], 
            Arrow[{{0.5, 7.5}, {2.5, 6.5}, {1.5, 4.5}, {3.5, 3.5}}], {}, 
            Text[
             Style["\[BlackKnight]", Large, 
              GrayLevel[0]], {0.5, 7.5}]}}, {
          Frame -> True, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
        0, $CellContext`oldA$$ = 
        0, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {}, \
$CellContext`oldpts$$ = {{1, 1}, {4, 
         5}}, $CellContext`pawns$$ = {}, $CellContext`pts$$ = {{1, 1}, {4, 
         5}}}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1375757$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1375758$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`k$$]; 
       DynamicModule[{$CellContext`knightMoves = {{2, 1}, {2, -1}, {
           1, -2}, {-1, -2}, {-2, -1}, {-2, 1}, {-1, 2}, {1, 2}}}, 
         Pane[
          ClickPane[
          If[$CellContext`pts$$ === {}, $CellContext`pts$$ = {{1, 1}, {4, 
              5}}]; If[
             
             Or[$CellContext`oldA$$ != $CellContext`a$$, $CellContext`oldK$$ != \
$CellContext`k$$], $CellContext`pawns$$ = \
$CellContext`randomPawnSquares[$CellContext`boardsize, $CellContext`a$$]]; 
           Dynamic[If[
               Or[
               Or[$CellContext`oldA$$ != $CellContext`a$$, \
$CellContext`oldpts$$ =!= $CellContext`pts$$, $CellContext`oldpawns$$] =!= \
$CellContext`pawns$$, $CellContext`oldK$$ != $CellContext`k$$], \
$CellContext`gr$$ = $CellContext`knightPathFinder[$CellContext`pts$$, \
$CellContext`boardsize, $CellContext`pawns$$, $CellContext`knightMoves]]; \
$CellContext`oldA$$ = $CellContext`a$$; $CellContext`oldpts$$ = \
$CellContext`pts$$; $CellContext`oldpawns$$ = $CellContext`pawns$$; \
$CellContext`gr$$], (If[Length[$CellContext`pts$$] < 2, 
             AppendTo[$CellContext`pts$$, {
               Ceiling[
                Part[#, 1]], 9 - Ceiling[
                Part[#, 2]]}], $CellContext`pts$$ = {
               Part[$CellContext`pts$$, 2], {
                Ceiling[
                 Part[#, 1]], 9 - Ceiling[
                 Part[#, 2]]}}]; Null)& ], Null, ImageSize -> {400, 400}, 
          Alignment -> Center]]), "Specifications" :> {
        Text[
         Style[
         "Click to move the X. The knight will be placed at the current X.", 
          14]], {{$CellContext`k$$, 0, 
          Style["random seed"]}, 0, 1000, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 0, 
          Style["number of pawns"]}, 0, 48, 1, Appearance -> 
         "Labeled"}, {$CellContext`pawns$$, {}, ControlType -> 
         None}, {{$CellContext`pts$$, {{1, 1}, {4, 5}}}, {}, ControlType -> 
         None}, {{$CellContext`gr$$, 
          Graphics[{
            Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvVDxZ20Dn8YH0I/gNMDFf643DNcw3+opH9c8TJQ/hoq6QSXegDvz+q1

             "], {{0, 0}, {8, 8}}, {0, 1}], {
             Text[
              Style["X", Large, Bold, 
               RGBColor[
                Rational[169, 255], 
                Rational[1, 17], 
                Rational[13, 255]], FontFamily -> "Arial"], {3.5, 3.5}], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             Arrow[{{0.5, 7.5}, {2.5, 6.5}, {1.5, 4.5}, {3.5, 3.5}}], {}, 
             Text[
              Style["\[BlackKnight]", Large, 
               GrayLevel[0]], {0.5, 7.5}]}}, {
           Frame -> True, FrameLabel -> {None, None}, 
            FrameTicks -> {{None, None}, {None, None}}}]}, {}, ControlType -> 
         None}, {$CellContext`oldA$$, 0, ControlType -> 
         None}, {$CellContext`oldK$$, -1, ControlType -> 
         None}, {$CellContext`oldpawns$$, {}, ControlType -> 
         None}, {{$CellContext`oldpts$$, {{1, 1}, {4, 5}}}, {}, ControlType -> 
         None}}, "Options" :> {
       ContentSize -> {430, 430}, AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{450., {271., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`randomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := Block[{$CellContext`temppawns = {}}, 
         $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]], $CellContext`boardsize = {8, 
        8}, $CellContext`recursiveRandomPawnSquares[
         Blank[], 0] = {}, $CellContext`recursiveRandomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := (AppendTo[$CellContext`temppawns, {
           RandomInteger[{1, 
             Part[$CellContext`boardsize, 1]}], 
           RandomInteger[{2, Part[$CellContext`boardsize, 2] - 1}]}]; 
        If[Length[
            
            Union[$CellContext`temppawns]] == $CellContext`n, \
$CellContext`temppawns, 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n], 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]]), $CellContext`recursiveRandomPawnSquares[
         Blank[], 0, 
         Blank[]] = {}, $CellContext`knightPathFinder[{{
           Pattern[$CellContext`currentX, 
            Blank[]], 
           Pattern[$CellContext`currentY, 
            Blank[]]}, {
           Pattern[$CellContext`targetX, 
            Blank[]], 
           Pattern[$CellContext`targetY, 
            Blank[]]}}, 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := ($CellContext`g = $CellContext`deleteKnightPaths[
           $CellContext`createKnightNetwork[$CellContext`currentX, \
$CellContext`currentY, $CellContext`boardsize, $CellContext`pawns, \
$CellContext`knightmoves], $CellContext`pawns]; $CellContext`vert = Union[
           Cases[$CellContext`g, {
             Blank[], 
             Blank[]}, Infinity]]; If[
          Not[
           
           MemberQ[$CellContext`pawns, {$CellContext`currentX, \
$CellContext`currentY}]], 
          If[
           And[
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}]], 
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`targetX, \
$CellContext`targetY}]]], 
           
           If[$CellContext`g = Graph[$CellContext`vert, $CellContext`g]; 
            MemberQ[
              
              VertexComponent[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}], {$CellContext`targetX, $CellContext`targetY}], 
            $CellContext`board[$CellContext`boardsize, $CellContext`pawns, 
             
             FindShortestPath[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}, {$CellContext`targetX, $CellContext`targetY}]], 
            $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
             "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
           $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
            "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
          $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
           "Not a valid starting square", $CellContext`currentX, \
$CellContext`currentY, $CellContext`targetX, $CellContext`targetY]]), \
$CellContext`g = 
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
         8}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
         3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 
         1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {
         5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 
         2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {
         7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 
         3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}}, {
          UndirectedEdge[{1, 2}, {2, 4}], 
          UndirectedEdge[{1, 2}, {3, 3}], 
          UndirectedEdge[{1, 3}, {2, 5}], 
          UndirectedEdge[{1, 3}, {3, 4}], 
          UndirectedEdge[{1, 4}, {2, 6}], 
          UndirectedEdge[{1, 5}, {2, 7}], 
          UndirectedEdge[{1, 5}, {3, 6}], 
          UndirectedEdge[{1, 6}, {3, 7}], 
          UndirectedEdge[{1, 7}, {3, 8}], 
          UndirectedEdge[{2, 1}, {1, 3}], 
          UndirectedEdge[{2, 2}, {1, 4}], 
          UndirectedEdge[{2, 2}, {4, 1}], 
          UndirectedEdge[{2, 3}, {1, 1}], 
          UndirectedEdge[{2, 3}, {1, 5}], 
          UndirectedEdge[{2, 3}, {3, 5}], 
          UndirectedEdge[{2, 4}, {1, 6}], 
          UndirectedEdge[{2, 4}, {4, 3}], 
          UndirectedEdge[{2, 4}, {4, 5}], 
          UndirectedEdge[{2, 5}, {1, 7}], 
          UndirectedEdge[{2, 6}, {1, 8}], 
          UndirectedEdge[{2, 6}, {3, 8}], 
          UndirectedEdge[{2, 6}, {4, 7}], 
          UndirectedEdge[{2, 7}, {3, 5}], 
          UndirectedEdge[{2, 8}, {1, 6}], 
          UndirectedEdge[{3, 1}, {1, 2}], 
          UndirectedEdge[{3, 1}, {2, 3}], 
          UndirectedEdge[{3, 1}, {4, 3}], 
          UndirectedEdge[{3, 2}, {1, 1}], 
          UndirectedEdge[{3, 2}, {1, 3}], 
          UndirectedEdge[{3, 2}, {2, 4}], 
          UndirectedEdge[{3, 2}, {4, 4}], 
          UndirectedEdge[{3, 2}, {5, 3}], 
          UndirectedEdge[{3, 3}, {1, 4}], 
          UndirectedEdge[{3, 3}, {2, 1}], 
          UndirectedEdge[{3, 3}, {2, 5}], 
          UndirectedEdge[{3, 3}, {4, 1}], 
          UndirectedEdge[{3, 3}, {4, 5}], 
          UndirectedEdge[{3, 3}, {5, 4}], 
          UndirectedEdge[{3, 4}, {1, 5}], 
          UndirectedEdge[{3, 4}, {2, 2}], 
          UndirectedEdge[{3, 4}, {2, 6}], 
          UndirectedEdge[{3, 4}, {4, 6}], 
          UndirectedEdge[{3, 4}, {5, 5}], 
          UndirectedEdge[{3, 5}, {1, 4}], 
          UndirectedEdge[{3, 5}, {1, 6}], 
          UndirectedEdge[{3, 5}, {4, 3}], 
          UndirectedEdge[{3, 5}, {4, 7}], 
          UndirectedEdge[{3, 6}, {1, 7}], 
          UndirectedEdge[{3, 6}, {2, 4}], 
          UndirectedEdge[{3, 6}, {2, 8}], 
          UndirectedEdge[{3, 6}, {4, 8}], 
          UndirectedEdge[{3, 7}, {1, 8}], 
          UndirectedEdge[{3, 7}, {2, 5}], 
          UndirectedEdge[{4, 2}, {2, 1}], 
          UndirectedEdge[{4, 2}, {2, 3}], 
          UndirectedEdge[{4, 2}, {3, 4}], 
          UndirectedEdge[{4, 3}, {2, 2}], 
          UndirectedEdge[{4, 4}, {2, 3}], 
          UndirectedEdge[{4, 4}, {2, 5}], 
          UndirectedEdge[{4, 4}, {3, 6}], 
          UndirectedEdge[{4, 4}, {5, 6}], 
          UndirectedEdge[{4, 5}, {2, 6}], 
          UndirectedEdge[{4, 5}, {3, 7}], 
          UndirectedEdge[{4, 5}, {6, 6}], 
          UndirectedEdge[{4, 6}, {2, 5}], 
          UndirectedEdge[{4, 6}, {2, 7}], 
          UndirectedEdge[{4, 6}, {3, 8}], 
          UndirectedEdge[{4, 6}, {6, 7}], 
          UndirectedEdge[{4, 7}, {2, 8}], 
          UndirectedEdge[{4, 8}, {2, 7}], 
          UndirectedEdge[{5, 1}, {3, 2}], 
          UndirectedEdge[{5, 1}, {4, 3}], 
          UndirectedEdge[{5, 2}, {3, 1}], 
          UndirectedEdge[{5, 2}, {3, 3}], 
          UndirectedEdge[{5, 2}, {4, 4}], 
          UndirectedEdge[{5, 3}, {3, 4}], 
          UndirectedEdge[{5, 3}, {4, 1}], 
          UndirectedEdge[{5, 3}, {4, 5}], 
          UndirectedEdge[{5, 3}, {6, 1}], 
          UndirectedEdge[{5, 3}, {6, 5}], 
          UndirectedEdge[{5, 3}, {7, 4}], 
          UndirectedEdge[{5, 4}, {3, 5}], 
          UndirectedEdge[{5, 4}, {4, 2}], 
          UndirectedEdge[{5, 4}, {4, 6}], 
          UndirectedEdge[{5, 4}, {6, 6}], 
          UndirectedEdge[{5, 4}, {7, 5}], 
          UndirectedEdge[{5, 5}, {3, 6}], 
          UndirectedEdge[{5, 5}, {4, 3}], 
          UndirectedEdge[{5, 5}, {4, 7}], 
          UndirectedEdge[{5, 5}, {6, 7}], 
          UndirectedEdge[{5, 5}, {7, 6}], 
          UndirectedEdge[{5, 6}, {3, 5}], 
          UndirectedEdge[{5, 6}, {3, 7}], 
          UndirectedEdge[{5, 6}, {4, 8}], 
          UndirectedEdge[{5, 6}, {7, 7}], 
          UndirectedEdge[{5, 7}, {3, 6}], 
          UndirectedEdge[{5, 7}, {3, 8}], 
          UndirectedEdge[{5, 7}, {4, 5}], 
          UndirectedEdge[{5, 7}, {6, 5}], 
          UndirectedEdge[{5, 7}, {7, 8}], 
          UndirectedEdge[{5, 8}, {3, 7}], 
          UndirectedEdge[{5, 8}, {4, 6}], 
          UndirectedEdge[{6, 1}, {4, 2}], 
          UndirectedEdge[{6, 2}, {4, 1}], 
          UndirectedEdge[{6, 2}, {4, 3}], 
          UndirectedEdge[{6, 2}, {5, 4}], 
          UndirectedEdge[{6, 2}, {7, 4}], 
          UndirectedEdge[{6, 2}, {8, 3}], 
          UndirectedEdge[{6, 3}, {4, 2}], 
          UndirectedEdge[{6, 3}, {4, 4}], 
          UndirectedEdge[{6, 3}, {5, 1}], 
          UndirectedEdge[{6, 3}, {5, 5}], 
          UndirectedEdge[{6, 3}, {8, 2}], 
          UndirectedEdge[{6, 3}, {8, 4}], 
          UndirectedEdge[{6, 4}, {4, 3}], 
          UndirectedEdge[{6, 4}, {4, 5}], 
          UndirectedEdge[{6, 4}, {5, 2}], 
          UndirectedEdge[{6, 4}, {5, 6}], 
          UndirectedEdge[{6, 4}, {7, 2}], 
          UndirectedEdge[{6, 4}, {7, 6}], 
          UndirectedEdge[{6, 4}, {8, 3}], 
          UndirectedEdge[{6, 4}, {8, 5}], 
          UndirectedEdge[{6, 5}, {4, 4}], 
          UndirectedEdge[{6, 5}, {4, 6}], 
          UndirectedEdge[{6, 5}, {7, 7}], 
          UndirectedEdge[{6, 6}, {4, 7}], 
          UndirectedEdge[{6, 6}, {5, 8}], 
          UndirectedEdge[{6, 6}, {8, 7}], 
          UndirectedEdge[{6, 7}, {4, 8}], 
          UndirectedEdge[{6, 7}, {8, 8}], 
          UndirectedEdge[{6, 8}, {4, 7}], 
          UndirectedEdge[{6, 8}, {5, 6}], 
          UndirectedEdge[{7, 1}, {5, 2}], 
          UndirectedEdge[{7, 1}, {6, 3}], 
          UndirectedEdge[{7, 2}, {5, 1}], 
          UndirectedEdge[{7, 2}, {5, 3}], 
          UndirectedEdge[{7, 3}, {5, 2}], 
          UndirectedEdge[{7, 3}, {5, 4}], 
          UndirectedEdge[{7, 3}, {6, 1}], 
          UndirectedEdge[{7, 3}, {6, 5}], 
          UndirectedEdge[{7, 3}, {8, 1}], 
          UndirectedEdge[{7, 4}, {5, 5}], 
          UndirectedEdge[{7, 4}, {6, 6}], 
          UndirectedEdge[{7, 4}, {8, 2}], 
          UndirectedEdge[{7, 4}, {8, 6}], 
          UndirectedEdge[{7, 5}, {5, 6}], 
          UndirectedEdge[{7, 5}, {6, 3}], 
          UndirectedEdge[{7, 5}, {6, 7}], 
          UndirectedEdge[{7, 5}, {8, 7}], 
          UndirectedEdge[{7, 6}, {5, 7}], 
          UndirectedEdge[{7, 6}, {6, 8}], 
          UndirectedEdge[{7, 6}, {8, 8}], 
          UndirectedEdge[{7, 7}, {5, 8}], 
          UndirectedEdge[{7, 8}, {6, 6}], 
          UndirectedEdge[{7, 8}, {8, 6}], 
          UndirectedEdge[{8, 1}, {6, 2}], 
          UndirectedEdge[{8, 2}, {6, 1}], 
          UndirectedEdge[{8, 3}, {7, 1}], 
          UndirectedEdge[{8, 3}, {7, 5}], 
          UndirectedEdge[{8, 4}, {6, 5}], 
          UndirectedEdge[{8, 4}, {7, 2}], 
          UndirectedEdge[{8, 4}, {7, 6}], 
          UndirectedEdge[{8, 5}, {6, 6}], 
          UndirectedEdge[{8, 5}, {7, 3}], 
          UndirectedEdge[{8, 5}, {7, 7}], 
          UndirectedEdge[{8, 6}, {6, 5}], 
          UndirectedEdge[{8, 6}, {6, 7}], 
          UndirectedEdge[{8, 7}, {6, 8}]}], $CellContext`deleteKnightPaths[
         Pattern[$CellContext`knightpaths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := 
       Select[$CellContext`knightpaths, $CellContext`pawnMemberTest[#, \
$CellContext`pawns]& ], $CellContext`pawnMemberTest[
         Pattern[$CellContext`knight, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := FreeQ[
         Map[FreeQ[$CellContext`knight, #]& , $CellContext`pawns], 
         False], $CellContext`createKnightNetwork[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]], 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Block[{$CellContext`beenhere = {}}, 
         Union[
          Flatten[
           $CellContext`recursiveCreateKnightNetwork[$CellContext`boardsize, \
{$CellContext`x, $CellContext`y}, {}, $CellContext`pawns, \
$CellContext`knightmoves]]]], $CellContext`recursiveCreateKnightNetwork[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := 
       Module[{$CellContext`newmoves, $CellContext`newpaths}, \
$CellContext`newmoves = $CellContext`findMoves[{$CellContext`n, \
$CellContext`m}, {$CellContext`x, $CellContext`y}, $CellContext`pawns, \
$CellContext`knightmoves]; 
         AppendTo[$CellContext`beenhere, {$CellContext`x, $CellContext`y}]; 
         If[$CellContext`newmoves === {}, $CellContext`paths, \
$CellContext`newpaths = 
            Map[UndirectedEdge[{$CellContext`x, $CellContext`y}, #]& , \
$CellContext`newmoves]; $CellContext`newpaths = 
            Join[$CellContext`paths, $CellContext`newpaths]; 
           Map[$CellContext`recursiveCreateKnightNetwork[{$CellContext`n, \
$CellContext`m}, #, $CellContext`newpaths, $CellContext`pawns, \
$CellContext`knightmoves]& , $CellContext`newmoves]]], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]]]& ], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]], 
          Not[
           MemberQ[
            $CellContext`deleteKnightPaths[$CellContext`paths, \
$CellContext`pawns], #]]]& ], $CellContext`squareOnBoard[{
          Pattern[$CellContext`a, 
           Blank[Integer]], 
          Pattern[$CellContext`b, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`m, 
          Blank[]]] := If[
         Inequality[0, Less, $CellContext`a, LessEqual, $CellContext`n], 
         If[
          Inequality[0, Less, $CellContext`b, LessEqual, $CellContext`m], 
          True, False], False], $CellContext`vert = {{1, 1}, {1, 2}, {1, 3}, {
        1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 1}, {2, 2}, {2, 3}, {2, 
        4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {
        3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 
        5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {
        5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 
        6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {
        7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 
        7}, {8, 8}}, $CellContext`board[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            Which[
             MemberQ[$CellContext`moves, {$CellContext`x, $CellContext`y}], 
             Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Text[
            Style["X", Large, Bold, 
             RGBColor[169/255, 15/255, 13/255], FontFamily -> "Arial"], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, -1]]], Thick, Dashed, 
           Arrow[
            Map[{
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}& , $CellContext`moves]], 
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style["\[BlackKnight]", Large, Black], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, 1]]]}]], $CellContext`simpleBoard[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`text, 
          Blank[]], 
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`y1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]], 
         Pattern[$CellContext`y2, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            
            Which[{$CellContext`x, $CellContext`y} === {$CellContext`x1, \
$CellContext`y1}, 
             Pink, {$CellContext`x, $CellContext`y} === {$CellContext`x2, \
$CellContext`y2}, Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style[$CellContext`text, FontSize -> 30], {4, 4}, Background -> 
            White], 
           Text[
            Style[
            "\[BlackKnight]", Large, 
             Black], {$CellContext`x1, 8 - $CellContext`y1} + {-0.5, 
             0.5}]}]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->535188881]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
The path displayed on the board is the shortest path for the knight to take \
from its starting square to the X, avoiding the pawns. When you click the \
board, the new path begins at the previous destination X and ends at the \
newly selected square. Although there may be other paths of the same length, \
there is never any path shorter than the displayed path.\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.5829924226452293`*^9, 3.5829924481202974`*^9}, {
  3.5829924785250397`*^9, 3.5829925121434*^9}, {3.582992548039384*^9, 
  3.5829926004559493`*^9}, {3.583073585722891*^9, 3.58307364664156*^9}, {
  3.5830737192291374`*^9, 3.5830737231915812`*^9}, {3.583150693858852*^9, 
  3.5831508074888153`*^9}},
 CellID->38289278]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 16, $CellContext`gr$$ = Graphics[{
      Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g009
tcyB8SH0AzhNa38NVHji8i+tw59a9g718B9N/6PhPxjUAwDkw+q1
       "], {{0, 0}, {8, 8}}, {0, 1}], {
       Text[
        Style["X", Large, Bold, 
         RGBColor[
          Rational[169, 255], 
          Rational[1, 17], 
          Rational[13, 255]], FontFamily -> "Arial"], {3.5, 5.5}], 
       Thickness[Large], 
       Dashing[{Small, Small}], 
       Arrow[{{5.5, 2.5}, {3.5, 1.5}, {2.5, 3.5}, {3.5, 5.5}}], {
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 4.5}]}, 
       Text[
        Style["\[BlackKnight]", Large, 
         GrayLevel[0]], {5.5, 2.5}]}}, {
     Frame -> True, FrameLabel -> {None, None}, 
      FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
    320, $CellContext`oldA$$ = 
    16, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{3, 7}, {8, 7}, {
    7, 7}, {7, 6}, {5, 5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3,
     2}, {1, 7}, {4, 5}, {5, 6}, {6, 2}, {8, 4}}, $CellContext`oldpts$$ = {{6,
     6}, {4, 3}}, $CellContext`pawns$$ = {{3, 7}, {8, 7}, {7, 7}, {7, 6}, {5, 
    5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 2}, {1, 7}, {4, 
    5}, {5, 6}, {6, 2}, {8, 4}}, $CellContext`pts$$ = {{6, 6}, {4, 3}}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Text[
        Style[
        "Click to move the X. The knight will be placed at the current X.", 
         14]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`k$$], 320, 
       Style["random seed"]}, 0, 1000, 1}, {{
       Hold[$CellContext`a$$], 16, 
       Style["number of pawns"]}, 0, 48, 1}, {{
       Hold[$CellContext`pawns$$], {{3, 7}, {8, 7}, {7, 7}, {7, 6}, {5, 5}, {
       3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 2}, {1, 7}, {4, 
       5}, {5, 6}, {6, 2}, {8, 4}}}, {}}, {{
       Hold[$CellContext`pts$$], {{6, 6}, {4, 3}}}, {}}, {{
       Hold[$CellContext`gr$$], 
       Graphics[{
         Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g009
tcyB8SH0AzhNa38NVHji8i+tw59a9g718B9N/6PhPxjUAwDkw+q1
          "], {{0, 0}, {8, 8}}, {0, 1}], {
          Text[
           Style["X", Large, Bold, 
            RGBColor[
             Rational[169, 255], 
             Rational[1, 17], 
             Rational[13, 255]], FontFamily -> "Arial"], {3.5, 5.5}], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          Arrow[{{5.5, 2.5}, {3.5, 1.5}, {2.5, 3.5}, {3.5, 5.5}}], {
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 4.5}]}, 
          Text[
           Style["\[BlackKnight]", Large, 
            GrayLevel[0]], {5.5, 2.5}]}}, {
        Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}}]}, {}}, {{
       Hold[$CellContext`oldA$$], 16}, 0}, {
      Hold[$CellContext`oldK$$], -1}, {{
       Hold[$CellContext`oldpawns$$], {{3, 7}, {8, 7}, {7, 7}, {7, 6}, {5, 
       5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 2}, {1, 7}, {4,
        5}, {5, 6}, {6, 2}, {8, 4}}}, {}}, {{
       Hold[$CellContext`oldpts$$], {{6, 6}, {4, 3}}}, {}}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`k$1375834$$ = 0, $CellContext`a$1375835$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 16, $CellContext`gr$$ = Graphics[{
           Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g009
tcyB8SH0AzhNa38NVHji8i+tw59a9g718B9N/6PhPxjUAwDkw+q1
            "], {{0, 0}, {8, 8}}, {0, 1}], {
            Text[
             Style["X", Large, Bold, 
              RGBColor[
               Rational[169, 255], 
               Rational[1, 17], 
               Rational[13, 255]], FontFamily -> "Arial"], {3.5, 5.5}], 
            Thickness[Large], 
            Dashing[{Small, Small}], 
            Arrow[{{5.5, 2.5}, {3.5, 1.5}, {2.5, 3.5}, {3.5, 5.5}}], {
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 4.5}]}, 
            Text[
             Style["\[BlackKnight]", Large, 
              GrayLevel[0]], {5.5, 2.5}]}}, {
          Frame -> True, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
        320, $CellContext`oldA$$ = 
        16, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{3, 7}, {8, 
         7}, {7, 7}, {7, 6}, {5, 5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {
         3, 4}, {3, 2}, {1, 7}, {4, 5}, {5, 6}, {6, 2}, {8, 
         4}}, $CellContext`oldpts$$ = {{6, 6}, {4, 
         3}}, $CellContext`pawns$$ = {{3, 7}, {8, 7}, {7, 7}, {7, 6}, {5, 
         5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 2}, {1, 7}, {
         4, 5}, {5, 6}, {6, 2}, {8, 4}}, $CellContext`pts$$ = {{6, 6}, {4, 
         3}}}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1375834$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1375835$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`k$$]; 
       DynamicModule[{$CellContext`knightMoves = {{2, 1}, {2, -1}, {
           1, -2}, {-1, -2}, {-2, -1}, {-2, 1}, {-1, 2}, {1, 2}}}, 
         Pane[
          ClickPane[
          If[$CellContext`pts$$ === {}, $CellContext`pts$$ = {{1, 1}, {4, 
              5}}]; If[
             
             Or[$CellContext`oldA$$ != $CellContext`a$$, $CellContext`oldK$$ != \
$CellContext`k$$], $CellContext`pawns$$ = \
$CellContext`randomPawnSquares[$CellContext`boardsize, $CellContext`a$$]]; 
           Dynamic[If[
               Or[
               Or[$CellContext`oldA$$ != $CellContext`a$$, \
$CellContext`oldpts$$ =!= $CellContext`pts$$, $CellContext`oldpawns$$] =!= \
$CellContext`pawns$$, $CellContext`oldK$$ != $CellContext`k$$], \
$CellContext`gr$$ = $CellContext`knightPathFinder[$CellContext`pts$$, \
$CellContext`boardsize, $CellContext`pawns$$, $CellContext`knightMoves]]; \
$CellContext`oldA$$ = $CellContext`a$$; $CellContext`oldpts$$ = \
$CellContext`pts$$; $CellContext`oldpawns$$ = $CellContext`pawns$$; \
$CellContext`gr$$], (If[Length[$CellContext`pts$$] < 2, 
             AppendTo[$CellContext`pts$$, {
               Ceiling[
                Part[#, 1]], 9 - Ceiling[
                Part[#, 2]]}], $CellContext`pts$$ = {
               Part[$CellContext`pts$$, 2], {
                Ceiling[
                 Part[#, 1]], 9 - Ceiling[
                 Part[#, 2]]}}]; Null)& ], Null, ImageSize -> {400, 400}, 
          Alignment -> Center]]), "Specifications" :> {
        Text[
         Style[
         "Click to move the X. The knight will be placed at the current X.", 
          14]], {{$CellContext`k$$, 320, 
          Style["random seed"]}, 0, 1000, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 16, 
          Style["number of pawns"]}, 0, 48, 1, Appearance -> 
         "Labeled"}, {{$CellContext`pawns$$, {{3, 7}, {8, 7}, {7, 7}, {7, 
          6}, {5, 5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 
          2}, {1, 7}, {4, 5}, {5, 6}, {6, 2}, {8, 4}}}, {}, ControlType -> 
         None}, {{$CellContext`pts$$, {{6, 6}, {4, 3}}}, {}, ControlType -> 
         None}, {{$CellContext`gr$$, 
          Graphics[{
            Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g009
tcyB8SH0AzhNa38NVHji8i+tw59a9g718B9N/6PhPxjUAwDkw+q1
             "], {{0, 0}, {8, 8}}, {0, 1}], {
             Text[
              Style["X", Large, Bold, 
               RGBColor[
                Rational[169, 255], 
                Rational[1, 17], 
                Rational[13, 255]], FontFamily -> "Arial"], {3.5, 5.5}], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             Arrow[{{5.5, 2.5}, {3.5, 1.5}, {2.5, 3.5}, {3.5, 5.5}}], {
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 4.5}]}, 
             Text[
              Style["\[BlackKnight]", Large, 
               GrayLevel[0]], {5.5, 2.5}]}}, {
           Frame -> True, FrameLabel -> {None, None}, 
            FrameTicks -> {{None, None}, {None, None}}}]}, {}, ControlType -> 
         None}, {{$CellContext`oldA$$, 16}, 0, ControlType -> 
         None}, {$CellContext`oldK$$, -1, ControlType -> 
         None}, {{$CellContext`oldpawns$$, {{3, 7}, {8, 7}, {7, 7}, {7, 6}, {
          5, 5}, {3, 6}, {5, 3}, {7, 2}, {4, 5}, {6, 3}, {3, 4}, {3, 2}, {1, 
          7}, {4, 5}, {5, 6}, {6, 2}, {8, 4}}}, {}, ControlType -> 
         None}, {{$CellContext`oldpts$$, {{6, 6}, {4, 3}}}, {}, ControlType -> 
         None}}, "Options" :> {
       ContentSize -> {430, 430}, AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{450., {271., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`randomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := Block[{$CellContext`temppawns = {}}, 
         $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]], $CellContext`boardsize = {8, 
        8}, $CellContext`recursiveRandomPawnSquares[
         Blank[], 0] = {}, $CellContext`recursiveRandomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := (AppendTo[$CellContext`temppawns, {
           RandomInteger[{1, 
             Part[$CellContext`boardsize, 1]}], 
           RandomInteger[{2, Part[$CellContext`boardsize, 2] - 1}]}]; 
        If[Length[
            
            Union[$CellContext`temppawns]] == $CellContext`n, \
$CellContext`temppawns, 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n], 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]]), $CellContext`recursiveRandomPawnSquares[
         Blank[], 0, 
         Blank[]] = {}, $CellContext`knightPathFinder[{{
           Pattern[$CellContext`currentX, 
            Blank[]], 
           Pattern[$CellContext`currentY, 
            Blank[]]}, {
           Pattern[$CellContext`targetX, 
            Blank[]], 
           Pattern[$CellContext`targetY, 
            Blank[]]}}, 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := ($CellContext`g = $CellContext`deleteKnightPaths[
           $CellContext`createKnightNetwork[$CellContext`currentX, \
$CellContext`currentY, $CellContext`boardsize, $CellContext`pawns, \
$CellContext`knightmoves], $CellContext`pawns]; $CellContext`vert = Union[
           Cases[$CellContext`g, {
             Blank[], 
             Blank[]}, Infinity]]; If[
          Not[
           
           MemberQ[$CellContext`pawns, {$CellContext`currentX, \
$CellContext`currentY}]], 
          If[
           And[
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}]], 
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`targetX, \
$CellContext`targetY}]]], 
           
           If[$CellContext`g = Graph[$CellContext`vert, $CellContext`g]; 
            MemberQ[
              
              VertexComponent[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}], {$CellContext`targetX, $CellContext`targetY}], 
            $CellContext`board[$CellContext`boardsize, $CellContext`pawns, 
             
             FindShortestPath[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}, {$CellContext`targetX, $CellContext`targetY}]], 
            $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
             "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
           $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
            "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
          $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
           "Not a valid starting square", $CellContext`currentX, \
$CellContext`currentY, $CellContext`targetX, $CellContext`targetY]]), \
$CellContext`g = 
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
         8}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
         3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 
         1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {
         5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 
         2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {
         7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 
         3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}}, {
          UndirectedEdge[{1, 2}, {2, 4}], 
          UndirectedEdge[{1, 2}, {3, 3}], 
          UndirectedEdge[{1, 3}, {2, 5}], 
          UndirectedEdge[{1, 3}, {3, 4}], 
          UndirectedEdge[{1, 4}, {2, 6}], 
          UndirectedEdge[{1, 5}, {2, 7}], 
          UndirectedEdge[{1, 5}, {3, 6}], 
          UndirectedEdge[{1, 6}, {3, 7}], 
          UndirectedEdge[{1, 7}, {3, 8}], 
          UndirectedEdge[{2, 1}, {1, 3}], 
          UndirectedEdge[{2, 2}, {1, 4}], 
          UndirectedEdge[{2, 2}, {4, 1}], 
          UndirectedEdge[{2, 3}, {1, 1}], 
          UndirectedEdge[{2, 3}, {1, 5}], 
          UndirectedEdge[{2, 3}, {3, 5}], 
          UndirectedEdge[{2, 4}, {1, 6}], 
          UndirectedEdge[{2, 4}, {4, 3}], 
          UndirectedEdge[{2, 4}, {4, 5}], 
          UndirectedEdge[{2, 5}, {1, 7}], 
          UndirectedEdge[{2, 6}, {1, 8}], 
          UndirectedEdge[{2, 6}, {3, 8}], 
          UndirectedEdge[{2, 6}, {4, 7}], 
          UndirectedEdge[{2, 7}, {3, 5}], 
          UndirectedEdge[{2, 8}, {1, 6}], 
          UndirectedEdge[{3, 1}, {1, 2}], 
          UndirectedEdge[{3, 1}, {2, 3}], 
          UndirectedEdge[{3, 1}, {4, 3}], 
          UndirectedEdge[{3, 2}, {1, 1}], 
          UndirectedEdge[{3, 2}, {1, 3}], 
          UndirectedEdge[{3, 2}, {2, 4}], 
          UndirectedEdge[{3, 2}, {4, 4}], 
          UndirectedEdge[{3, 2}, {5, 3}], 
          UndirectedEdge[{3, 3}, {1, 4}], 
          UndirectedEdge[{3, 3}, {2, 1}], 
          UndirectedEdge[{3, 3}, {2, 5}], 
          UndirectedEdge[{3, 3}, {4, 1}], 
          UndirectedEdge[{3, 3}, {4, 5}], 
          UndirectedEdge[{3, 3}, {5, 4}], 
          UndirectedEdge[{3, 4}, {1, 5}], 
          UndirectedEdge[{3, 4}, {2, 2}], 
          UndirectedEdge[{3, 4}, {2, 6}], 
          UndirectedEdge[{3, 4}, {4, 6}], 
          UndirectedEdge[{3, 4}, {5, 5}], 
          UndirectedEdge[{3, 5}, {1, 4}], 
          UndirectedEdge[{3, 5}, {1, 6}], 
          UndirectedEdge[{3, 5}, {4, 3}], 
          UndirectedEdge[{3, 5}, {4, 7}], 
          UndirectedEdge[{3, 6}, {1, 7}], 
          UndirectedEdge[{3, 6}, {2, 4}], 
          UndirectedEdge[{3, 6}, {2, 8}], 
          UndirectedEdge[{3, 6}, {4, 8}], 
          UndirectedEdge[{3, 7}, {1, 8}], 
          UndirectedEdge[{3, 7}, {2, 5}], 
          UndirectedEdge[{4, 2}, {2, 1}], 
          UndirectedEdge[{4, 2}, {2, 3}], 
          UndirectedEdge[{4, 2}, {3, 4}], 
          UndirectedEdge[{4, 3}, {2, 2}], 
          UndirectedEdge[{4, 4}, {2, 3}], 
          UndirectedEdge[{4, 4}, {2, 5}], 
          UndirectedEdge[{4, 4}, {3, 6}], 
          UndirectedEdge[{4, 4}, {5, 6}], 
          UndirectedEdge[{4, 5}, {2, 6}], 
          UndirectedEdge[{4, 5}, {3, 7}], 
          UndirectedEdge[{4, 5}, {6, 6}], 
          UndirectedEdge[{4, 6}, {2, 5}], 
          UndirectedEdge[{4, 6}, {2, 7}], 
          UndirectedEdge[{4, 6}, {3, 8}], 
          UndirectedEdge[{4, 6}, {6, 7}], 
          UndirectedEdge[{4, 7}, {2, 8}], 
          UndirectedEdge[{4, 8}, {2, 7}], 
          UndirectedEdge[{5, 1}, {3, 2}], 
          UndirectedEdge[{5, 1}, {4, 3}], 
          UndirectedEdge[{5, 2}, {3, 1}], 
          UndirectedEdge[{5, 2}, {3, 3}], 
          UndirectedEdge[{5, 2}, {4, 4}], 
          UndirectedEdge[{5, 3}, {3, 4}], 
          UndirectedEdge[{5, 3}, {4, 1}], 
          UndirectedEdge[{5, 3}, {4, 5}], 
          UndirectedEdge[{5, 3}, {6, 1}], 
          UndirectedEdge[{5, 3}, {6, 5}], 
          UndirectedEdge[{5, 3}, {7, 4}], 
          UndirectedEdge[{5, 4}, {3, 5}], 
          UndirectedEdge[{5, 4}, {4, 2}], 
          UndirectedEdge[{5, 4}, {4, 6}], 
          UndirectedEdge[{5, 4}, {6, 6}], 
          UndirectedEdge[{5, 4}, {7, 5}], 
          UndirectedEdge[{5, 5}, {3, 6}], 
          UndirectedEdge[{5, 5}, {4, 3}], 
          UndirectedEdge[{5, 5}, {4, 7}], 
          UndirectedEdge[{5, 5}, {6, 7}], 
          UndirectedEdge[{5, 5}, {7, 6}], 
          UndirectedEdge[{5, 6}, {3, 5}], 
          UndirectedEdge[{5, 6}, {3, 7}], 
          UndirectedEdge[{5, 6}, {4, 8}], 
          UndirectedEdge[{5, 6}, {7, 7}], 
          UndirectedEdge[{5, 7}, {3, 6}], 
          UndirectedEdge[{5, 7}, {3, 8}], 
          UndirectedEdge[{5, 7}, {4, 5}], 
          UndirectedEdge[{5, 7}, {6, 5}], 
          UndirectedEdge[{5, 7}, {7, 8}], 
          UndirectedEdge[{5, 8}, {3, 7}], 
          UndirectedEdge[{5, 8}, {4, 6}], 
          UndirectedEdge[{6, 1}, {4, 2}], 
          UndirectedEdge[{6, 2}, {4, 1}], 
          UndirectedEdge[{6, 2}, {4, 3}], 
          UndirectedEdge[{6, 2}, {5, 4}], 
          UndirectedEdge[{6, 2}, {7, 4}], 
          UndirectedEdge[{6, 2}, {8, 3}], 
          UndirectedEdge[{6, 3}, {4, 2}], 
          UndirectedEdge[{6, 3}, {4, 4}], 
          UndirectedEdge[{6, 3}, {5, 1}], 
          UndirectedEdge[{6, 3}, {5, 5}], 
          UndirectedEdge[{6, 3}, {8, 2}], 
          UndirectedEdge[{6, 3}, {8, 4}], 
          UndirectedEdge[{6, 4}, {4, 3}], 
          UndirectedEdge[{6, 4}, {4, 5}], 
          UndirectedEdge[{6, 4}, {5, 2}], 
          UndirectedEdge[{6, 4}, {5, 6}], 
          UndirectedEdge[{6, 4}, {7, 2}], 
          UndirectedEdge[{6, 4}, {7, 6}], 
          UndirectedEdge[{6, 4}, {8, 3}], 
          UndirectedEdge[{6, 4}, {8, 5}], 
          UndirectedEdge[{6, 5}, {4, 4}], 
          UndirectedEdge[{6, 5}, {4, 6}], 
          UndirectedEdge[{6, 5}, {7, 7}], 
          UndirectedEdge[{6, 6}, {4, 7}], 
          UndirectedEdge[{6, 6}, {5, 8}], 
          UndirectedEdge[{6, 6}, {8, 7}], 
          UndirectedEdge[{6, 7}, {4, 8}], 
          UndirectedEdge[{6, 7}, {8, 8}], 
          UndirectedEdge[{6, 8}, {4, 7}], 
          UndirectedEdge[{6, 8}, {5, 6}], 
          UndirectedEdge[{7, 1}, {5, 2}], 
          UndirectedEdge[{7, 1}, {6, 3}], 
          UndirectedEdge[{7, 2}, {5, 1}], 
          UndirectedEdge[{7, 2}, {5, 3}], 
          UndirectedEdge[{7, 3}, {5, 2}], 
          UndirectedEdge[{7, 3}, {5, 4}], 
          UndirectedEdge[{7, 3}, {6, 1}], 
          UndirectedEdge[{7, 3}, {6, 5}], 
          UndirectedEdge[{7, 3}, {8, 1}], 
          UndirectedEdge[{7, 4}, {5, 5}], 
          UndirectedEdge[{7, 4}, {6, 6}], 
          UndirectedEdge[{7, 4}, {8, 2}], 
          UndirectedEdge[{7, 4}, {8, 6}], 
          UndirectedEdge[{7, 5}, {5, 6}], 
          UndirectedEdge[{7, 5}, {6, 3}], 
          UndirectedEdge[{7, 5}, {6, 7}], 
          UndirectedEdge[{7, 5}, {8, 7}], 
          UndirectedEdge[{7, 6}, {5, 7}], 
          UndirectedEdge[{7, 6}, {6, 8}], 
          UndirectedEdge[{7, 6}, {8, 8}], 
          UndirectedEdge[{7, 7}, {5, 8}], 
          UndirectedEdge[{7, 8}, {6, 6}], 
          UndirectedEdge[{7, 8}, {8, 6}], 
          UndirectedEdge[{8, 1}, {6, 2}], 
          UndirectedEdge[{8, 2}, {6, 1}], 
          UndirectedEdge[{8, 3}, {7, 1}], 
          UndirectedEdge[{8, 3}, {7, 5}], 
          UndirectedEdge[{8, 4}, {6, 5}], 
          UndirectedEdge[{8, 4}, {7, 2}], 
          UndirectedEdge[{8, 4}, {7, 6}], 
          UndirectedEdge[{8, 5}, {6, 6}], 
          UndirectedEdge[{8, 5}, {7, 3}], 
          UndirectedEdge[{8, 5}, {7, 7}], 
          UndirectedEdge[{8, 6}, {6, 5}], 
          UndirectedEdge[{8, 6}, {6, 7}], 
          UndirectedEdge[{8, 7}, {6, 8}]}], $CellContext`deleteKnightPaths[
         Pattern[$CellContext`knightpaths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := 
       Select[$CellContext`knightpaths, $CellContext`pawnMemberTest[#, \
$CellContext`pawns]& ], $CellContext`pawnMemberTest[
         Pattern[$CellContext`knight, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := FreeQ[
         Map[FreeQ[$CellContext`knight, #]& , $CellContext`pawns], 
         False], $CellContext`createKnightNetwork[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]], 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Block[{$CellContext`beenhere = {}}, 
         Union[
          Flatten[
           $CellContext`recursiveCreateKnightNetwork[$CellContext`boardsize, \
{$CellContext`x, $CellContext`y}, {}, $CellContext`pawns, \
$CellContext`knightmoves]]]], $CellContext`recursiveCreateKnightNetwork[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := 
       Module[{$CellContext`newmoves, $CellContext`newpaths}, \
$CellContext`newmoves = $CellContext`findMoves[{$CellContext`n, \
$CellContext`m}, {$CellContext`x, $CellContext`y}, $CellContext`pawns, \
$CellContext`knightmoves]; 
         AppendTo[$CellContext`beenhere, {$CellContext`x, $CellContext`y}]; 
         If[$CellContext`newmoves === {}, $CellContext`paths, \
$CellContext`newpaths = 
            Map[UndirectedEdge[{$CellContext`x, $CellContext`y}, #]& , \
$CellContext`newmoves]; $CellContext`newpaths = 
            Join[$CellContext`paths, $CellContext`newpaths]; 
           Map[$CellContext`recursiveCreateKnightNetwork[{$CellContext`n, \
$CellContext`m}, #, $CellContext`newpaths, $CellContext`pawns, \
$CellContext`knightmoves]& , $CellContext`newmoves]]], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]]]& ], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]], 
          Not[
           MemberQ[
            $CellContext`deleteKnightPaths[$CellContext`paths, \
$CellContext`pawns], #]]]& ], $CellContext`squareOnBoard[{
          Pattern[$CellContext`a, 
           Blank[Integer]], 
          Pattern[$CellContext`b, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`m, 
          Blank[]]] := If[
         Inequality[0, Less, $CellContext`a, LessEqual, $CellContext`n], 
         If[
          Inequality[0, Less, $CellContext`b, LessEqual, $CellContext`m], 
          True, False], False], $CellContext`vert = {{1, 1}, {1, 2}, {1, 3}, {
        1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 1}, {2, 2}, {2, 3}, {2, 
        4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {
        3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 
        5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {
        5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 
        6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {
        7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 
        7}, {8, 8}}, $CellContext`board[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            Which[
             MemberQ[$CellContext`moves, {$CellContext`x, $CellContext`y}], 
             Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Text[
            Style["X", Large, Bold, 
             RGBColor[169/255, 15/255, 13/255], FontFamily -> "Arial"], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, -1]]], Thick, Dashed, 
           Arrow[
            Map[{
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}& , $CellContext`moves]], 
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style["\[BlackKnight]", Large, Black], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, 1]]]}]], $CellContext`simpleBoard[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`text, 
          Blank[]], 
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`y1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]], 
         Pattern[$CellContext`y2, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            
            Which[{$CellContext`x, $CellContext`y} === {$CellContext`x1, \
$CellContext`y1}, 
             Pink, {$CellContext`x, $CellContext`y} === {$CellContext`x2, \
$CellContext`y2}, Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style[$CellContext`text, FontSize -> 30], {4, 4}, Background -> 
            White], 
           Text[
            Style[
            "\[BlackKnight]", Large, 
             Black], {$CellContext`x1, 8 - $CellContext`y1} + {-0.5, 
             0.5}]}]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1258009331]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, $CellContext`gr$$ = Graphics[{
      Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvWkmgPjQ+gHcHo0/Kkb/rjCmVr2Ust8aoUPLvcMtvQ/2NQPFXfiUg8A
FZ3qtQ==
       "], {{0, 0}, {8, 8}}, {0, 1}], {
       Text[
        Style["X", Large, Bold, 
         RGBColor[
          Rational[169, 255], 
          Rational[1, 17], 
          Rational[13, 255]], FontFamily -> "Arial"], {2.5, 2.5}], 
       Thickness[Large], 
       Dashing[{Small, Small}], 
       Arrow[{{5.5, 4.5}, {3.5, 5.5}, {1.5, 4.5}, {2.5, 2.5}}], {}, 
       Text[
        Style["\[BlackKnight]", Large, 
         GrayLevel[0]], {5.5, 4.5}]}}, {
     Frame -> True, FrameLabel -> {None, None}, 
      FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
    0, $CellContext`oldA$$ = 
    0, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {}, \
$CellContext`oldpts$$ = {{6, 4}, {3, 
    6}}, $CellContext`pawns$$ = {}, $CellContext`pts$$ = {{6, 4}, {3, 6}}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Text[
        Style[
        "Click to move the X. The knight will be placed at the current X.", 
         14]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`k$$], 0, 
       Style["random seed"]}, 0, 1000, 1}, {{
       Hold[$CellContext`a$$], 0, 
       Style["number of pawns"]}, 0, 48, 1}, {
      Hold[$CellContext`pawns$$], {}}, {{
       Hold[$CellContext`pts$$], {{6, 4}, {3, 6}}}, {}}, {{
       Hold[$CellContext`gr$$], 
       Graphics[{
         Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvWkmgPjQ+gHcHo0/Kkb/rjCmVr2Ust8aoUPLvcMtvQ/2NQPFXfiUg8A
FZ3qtQ==
          "], {{0, 0}, {8, 8}}, {0, 1}], {
          Text[
           Style["X", Large, Bold, 
            RGBColor[
             Rational[169, 255], 
             Rational[1, 17], 
             Rational[13, 255]], FontFamily -> "Arial"], {2.5, 2.5}], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          Arrow[{{5.5, 4.5}, {3.5, 5.5}, {1.5, 4.5}, {2.5, 2.5}}], {}, 
          Text[
           Style["\[BlackKnight]", Large, 
            GrayLevel[0]], {5.5, 4.5}]}}, {
        Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}}]}, {}}, {
      Hold[$CellContext`oldA$$], 0}, {
      Hold[$CellContext`oldK$$], -1}, {
      Hold[$CellContext`oldpawns$$], {}}, {{
       Hold[$CellContext`oldpts$$], {{6, 4}, {3, 6}}}, {}}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`k$1375911$$ = 0, $CellContext`a$1375912$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`gr$$ = Graphics[{
           Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvWkmgPjQ+gHcHo0/Kkb/rjCmVr2Ust8aoUPLvcMtvQ/2NQPFXfiUg8A
FZ3qtQ==
            "], {{0, 0}, {8, 8}}, {0, 1}], {
            Text[
             Style["X", Large, Bold, 
              RGBColor[
               Rational[169, 255], 
               Rational[1, 17], 
               Rational[13, 255]], FontFamily -> "Arial"], {2.5, 2.5}], 
            Thickness[Large], 
            Dashing[{Small, Small}], 
            Arrow[{{5.5, 4.5}, {3.5, 5.5}, {1.5, 4.5}, {2.5, 2.5}}], {}, 
            Text[
             Style["\[BlackKnight]", Large, 
              GrayLevel[0]], {5.5, 4.5}]}}, {
          Frame -> True, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
        0, $CellContext`oldA$$ = 
        0, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {}, \
$CellContext`oldpts$$ = {{6, 4}, {3, 
         6}}, $CellContext`pawns$$ = {}, $CellContext`pts$$ = {{6, 4}, {3, 
         6}}}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1375911$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1375912$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`k$$]; 
       DynamicModule[{$CellContext`knightMoves = {{2, 1}, {2, -1}, {
           1, -2}, {-1, -2}, {-2, -1}, {-2, 1}, {-1, 2}, {1, 2}}}, 
         Pane[
          ClickPane[
          If[$CellContext`pts$$ === {}, $CellContext`pts$$ = {{1, 1}, {4, 
              5}}]; If[
             
             Or[$CellContext`oldA$$ != $CellContext`a$$, $CellContext`oldK$$ != \
$CellContext`k$$], $CellContext`pawns$$ = \
$CellContext`randomPawnSquares[$CellContext`boardsize, $CellContext`a$$]]; 
           Dynamic[If[
               Or[
               Or[$CellContext`oldA$$ != $CellContext`a$$, \
$CellContext`oldpts$$ =!= $CellContext`pts$$, $CellContext`oldpawns$$] =!= \
$CellContext`pawns$$, $CellContext`oldK$$ != $CellContext`k$$], \
$CellContext`gr$$ = $CellContext`knightPathFinder[$CellContext`pts$$, \
$CellContext`boardsize, $CellContext`pawns$$, $CellContext`knightMoves]]; \
$CellContext`oldA$$ = $CellContext`a$$; $CellContext`oldpts$$ = \
$CellContext`pts$$; $CellContext`oldpawns$$ = $CellContext`pawns$$; \
$CellContext`gr$$], (If[Length[$CellContext`pts$$] < 2, 
             AppendTo[$CellContext`pts$$, {
               Ceiling[
                Part[#, 1]], 9 - Ceiling[
                Part[#, 2]]}], $CellContext`pts$$ = {
               Part[$CellContext`pts$$, 2], {
                Ceiling[
                 Part[#, 1]], 9 - Ceiling[
                 Part[#, 2]]}}]; Null)& ], Null, ImageSize -> {400, 400}, 
          Alignment -> Center]]), "Specifications" :> {
        Text[
         Style[
         "Click to move the X. The knight will be placed at the current X.", 
          14]], {{$CellContext`k$$, 0, 
          Style["random seed"]}, 0, 1000, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 0, 
          Style["number of pawns"]}, 0, 48, 1, Appearance -> 
         "Labeled"}, {$CellContext`pawns$$, {}, ControlType -> 
         None}, {{$CellContext`pts$$, {{6, 4}, {3, 6}}}, {}, ControlType -> 
         None}, {{$CellContext`gr$$, 
          Graphics[{
            Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvWkmgPjQ+gHcHo0/Kkb/rjCmVr2Ust8aoUPLvcMtvQ/2NQPFXfiUg8A
FZ3qtQ==
             "], {{0, 0}, {8, 8}}, {0, 1}], {
             Text[
              Style["X", Large, Bold, 
               RGBColor[
                Rational[169, 255], 
                Rational[1, 17], 
                Rational[13, 255]], FontFamily -> "Arial"], {2.5, 2.5}], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             Arrow[{{5.5, 4.5}, {3.5, 5.5}, {1.5, 4.5}, {2.5, 2.5}}], {}, 
             Text[
              Style["\[BlackKnight]", Large, 
               GrayLevel[0]], {5.5, 4.5}]}}, {
           Frame -> True, FrameLabel -> {None, None}, 
            FrameTicks -> {{None, None}, {None, None}}}]}, {}, ControlType -> 
         None}, {$CellContext`oldA$$, 0, ControlType -> 
         None}, {$CellContext`oldK$$, -1, ControlType -> 
         None}, {$CellContext`oldpawns$$, {}, ControlType -> 
         None}, {{$CellContext`oldpts$$, {{6, 4}, {3, 6}}}, {}, ControlType -> 
         None}}, "Options" :> {
       ContentSize -> {430, 430}, AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{450., {271., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`randomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := Block[{$CellContext`temppawns = {}}, 
         $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]], $CellContext`boardsize = {8, 
        8}, $CellContext`recursiveRandomPawnSquares[
         Blank[], 0] = {}, $CellContext`recursiveRandomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := (AppendTo[$CellContext`temppawns, {
           RandomInteger[{1, 
             Part[$CellContext`boardsize, 1]}], 
           RandomInteger[{2, Part[$CellContext`boardsize, 2] - 1}]}]; 
        If[Length[
            
            Union[$CellContext`temppawns]] == $CellContext`n, \
$CellContext`temppawns, 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n], 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]]), $CellContext`recursiveRandomPawnSquares[
         Blank[], 0, 
         Blank[]] = {}, $CellContext`knightPathFinder[{{
           Pattern[$CellContext`currentX, 
            Blank[]], 
           Pattern[$CellContext`currentY, 
            Blank[]]}, {
           Pattern[$CellContext`targetX, 
            Blank[]], 
           Pattern[$CellContext`targetY, 
            Blank[]]}}, 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := ($CellContext`g = $CellContext`deleteKnightPaths[
           $CellContext`createKnightNetwork[$CellContext`currentX, \
$CellContext`currentY, $CellContext`boardsize, $CellContext`pawns, \
$CellContext`knightmoves], $CellContext`pawns]; $CellContext`vert = Union[
           Cases[$CellContext`g, {
             Blank[], 
             Blank[]}, Infinity]]; If[
          Not[
           
           MemberQ[$CellContext`pawns, {$CellContext`currentX, \
$CellContext`currentY}]], 
          If[
           And[
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}]], 
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`targetX, \
$CellContext`targetY}]]], 
           
           If[$CellContext`g = Graph[$CellContext`vert, $CellContext`g]; 
            MemberQ[
              
              VertexComponent[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}], {$CellContext`targetX, $CellContext`targetY}], 
            $CellContext`board[$CellContext`boardsize, $CellContext`pawns, 
             
             FindShortestPath[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}, {$CellContext`targetX, $CellContext`targetY}]], 
            $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
             "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
           $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
            "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
          $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
           "Not a valid starting square", $CellContext`currentX, \
$CellContext`currentY, $CellContext`targetX, $CellContext`targetY]]), \
$CellContext`g = 
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
         8}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
         3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 
         1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {
         5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 
         2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {
         7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 
         3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}}, {
          UndirectedEdge[{1, 2}, {2, 4}], 
          UndirectedEdge[{1, 2}, {3, 3}], 
          UndirectedEdge[{1, 3}, {2, 5}], 
          UndirectedEdge[{1, 3}, {3, 4}], 
          UndirectedEdge[{1, 4}, {2, 6}], 
          UndirectedEdge[{1, 5}, {2, 7}], 
          UndirectedEdge[{1, 5}, {3, 6}], 
          UndirectedEdge[{1, 6}, {3, 7}], 
          UndirectedEdge[{1, 7}, {3, 8}], 
          UndirectedEdge[{2, 1}, {1, 3}], 
          UndirectedEdge[{2, 2}, {1, 4}], 
          UndirectedEdge[{2, 2}, {4, 1}], 
          UndirectedEdge[{2, 3}, {1, 1}], 
          UndirectedEdge[{2, 3}, {1, 5}], 
          UndirectedEdge[{2, 3}, {3, 5}], 
          UndirectedEdge[{2, 4}, {1, 6}], 
          UndirectedEdge[{2, 4}, {4, 3}], 
          UndirectedEdge[{2, 4}, {4, 5}], 
          UndirectedEdge[{2, 5}, {1, 7}], 
          UndirectedEdge[{2, 6}, {1, 8}], 
          UndirectedEdge[{2, 6}, {3, 8}], 
          UndirectedEdge[{2, 6}, {4, 7}], 
          UndirectedEdge[{2, 7}, {3, 5}], 
          UndirectedEdge[{2, 8}, {1, 6}], 
          UndirectedEdge[{3, 1}, {1, 2}], 
          UndirectedEdge[{3, 1}, {2, 3}], 
          UndirectedEdge[{3, 1}, {4, 3}], 
          UndirectedEdge[{3, 2}, {1, 1}], 
          UndirectedEdge[{3, 2}, {1, 3}], 
          UndirectedEdge[{3, 2}, {2, 4}], 
          UndirectedEdge[{3, 2}, {4, 4}], 
          UndirectedEdge[{3, 2}, {5, 3}], 
          UndirectedEdge[{3, 3}, {1, 4}], 
          UndirectedEdge[{3, 3}, {2, 1}], 
          UndirectedEdge[{3, 3}, {2, 5}], 
          UndirectedEdge[{3, 3}, {4, 1}], 
          UndirectedEdge[{3, 3}, {4, 5}], 
          UndirectedEdge[{3, 3}, {5, 4}], 
          UndirectedEdge[{3, 4}, {1, 5}], 
          UndirectedEdge[{3, 4}, {2, 2}], 
          UndirectedEdge[{3, 4}, {2, 6}], 
          UndirectedEdge[{3, 4}, {4, 6}], 
          UndirectedEdge[{3, 4}, {5, 5}], 
          UndirectedEdge[{3, 5}, {1, 4}], 
          UndirectedEdge[{3, 5}, {1, 6}], 
          UndirectedEdge[{3, 5}, {4, 3}], 
          UndirectedEdge[{3, 5}, {4, 7}], 
          UndirectedEdge[{3, 6}, {1, 7}], 
          UndirectedEdge[{3, 6}, {2, 4}], 
          UndirectedEdge[{3, 6}, {2, 8}], 
          UndirectedEdge[{3, 6}, {4, 8}], 
          UndirectedEdge[{3, 7}, {1, 8}], 
          UndirectedEdge[{3, 7}, {2, 5}], 
          UndirectedEdge[{4, 2}, {2, 1}], 
          UndirectedEdge[{4, 2}, {2, 3}], 
          UndirectedEdge[{4, 2}, {3, 4}], 
          UndirectedEdge[{4, 3}, {2, 2}], 
          UndirectedEdge[{4, 4}, {2, 3}], 
          UndirectedEdge[{4, 4}, {2, 5}], 
          UndirectedEdge[{4, 4}, {3, 6}], 
          UndirectedEdge[{4, 4}, {5, 6}], 
          UndirectedEdge[{4, 5}, {2, 6}], 
          UndirectedEdge[{4, 5}, {3, 7}], 
          UndirectedEdge[{4, 5}, {6, 6}], 
          UndirectedEdge[{4, 6}, {2, 5}], 
          UndirectedEdge[{4, 6}, {2, 7}], 
          UndirectedEdge[{4, 6}, {3, 8}], 
          UndirectedEdge[{4, 6}, {6, 7}], 
          UndirectedEdge[{4, 7}, {2, 8}], 
          UndirectedEdge[{4, 8}, {2, 7}], 
          UndirectedEdge[{5, 1}, {3, 2}], 
          UndirectedEdge[{5, 1}, {4, 3}], 
          UndirectedEdge[{5, 2}, {3, 1}], 
          UndirectedEdge[{5, 2}, {3, 3}], 
          UndirectedEdge[{5, 2}, {4, 4}], 
          UndirectedEdge[{5, 3}, {3, 4}], 
          UndirectedEdge[{5, 3}, {4, 1}], 
          UndirectedEdge[{5, 3}, {4, 5}], 
          UndirectedEdge[{5, 3}, {6, 1}], 
          UndirectedEdge[{5, 3}, {6, 5}], 
          UndirectedEdge[{5, 3}, {7, 4}], 
          UndirectedEdge[{5, 4}, {3, 5}], 
          UndirectedEdge[{5, 4}, {4, 2}], 
          UndirectedEdge[{5, 4}, {4, 6}], 
          UndirectedEdge[{5, 4}, {6, 6}], 
          UndirectedEdge[{5, 4}, {7, 5}], 
          UndirectedEdge[{5, 5}, {3, 6}], 
          UndirectedEdge[{5, 5}, {4, 3}], 
          UndirectedEdge[{5, 5}, {4, 7}], 
          UndirectedEdge[{5, 5}, {6, 7}], 
          UndirectedEdge[{5, 5}, {7, 6}], 
          UndirectedEdge[{5, 6}, {3, 5}], 
          UndirectedEdge[{5, 6}, {3, 7}], 
          UndirectedEdge[{5, 6}, {4, 8}], 
          UndirectedEdge[{5, 6}, {7, 7}], 
          UndirectedEdge[{5, 7}, {3, 6}], 
          UndirectedEdge[{5, 7}, {3, 8}], 
          UndirectedEdge[{5, 7}, {4, 5}], 
          UndirectedEdge[{5, 7}, {6, 5}], 
          UndirectedEdge[{5, 7}, {7, 8}], 
          UndirectedEdge[{5, 8}, {3, 7}], 
          UndirectedEdge[{5, 8}, {4, 6}], 
          UndirectedEdge[{6, 1}, {4, 2}], 
          UndirectedEdge[{6, 2}, {4, 1}], 
          UndirectedEdge[{6, 2}, {4, 3}], 
          UndirectedEdge[{6, 2}, {5, 4}], 
          UndirectedEdge[{6, 2}, {7, 4}], 
          UndirectedEdge[{6, 2}, {8, 3}], 
          UndirectedEdge[{6, 3}, {4, 2}], 
          UndirectedEdge[{6, 3}, {4, 4}], 
          UndirectedEdge[{6, 3}, {5, 1}], 
          UndirectedEdge[{6, 3}, {5, 5}], 
          UndirectedEdge[{6, 3}, {8, 2}], 
          UndirectedEdge[{6, 3}, {8, 4}], 
          UndirectedEdge[{6, 4}, {4, 3}], 
          UndirectedEdge[{6, 4}, {4, 5}], 
          UndirectedEdge[{6, 4}, {5, 2}], 
          UndirectedEdge[{6, 4}, {5, 6}], 
          UndirectedEdge[{6, 4}, {7, 2}], 
          UndirectedEdge[{6, 4}, {7, 6}], 
          UndirectedEdge[{6, 4}, {8, 3}], 
          UndirectedEdge[{6, 4}, {8, 5}], 
          UndirectedEdge[{6, 5}, {4, 4}], 
          UndirectedEdge[{6, 5}, {4, 6}], 
          UndirectedEdge[{6, 5}, {7, 7}], 
          UndirectedEdge[{6, 6}, {4, 7}], 
          UndirectedEdge[{6, 6}, {5, 8}], 
          UndirectedEdge[{6, 6}, {8, 7}], 
          UndirectedEdge[{6, 7}, {4, 8}], 
          UndirectedEdge[{6, 7}, {8, 8}], 
          UndirectedEdge[{6, 8}, {4, 7}], 
          UndirectedEdge[{6, 8}, {5, 6}], 
          UndirectedEdge[{7, 1}, {5, 2}], 
          UndirectedEdge[{7, 1}, {6, 3}], 
          UndirectedEdge[{7, 2}, {5, 1}], 
          UndirectedEdge[{7, 2}, {5, 3}], 
          UndirectedEdge[{7, 3}, {5, 2}], 
          UndirectedEdge[{7, 3}, {5, 4}], 
          UndirectedEdge[{7, 3}, {6, 1}], 
          UndirectedEdge[{7, 3}, {6, 5}], 
          UndirectedEdge[{7, 3}, {8, 1}], 
          UndirectedEdge[{7, 4}, {5, 5}], 
          UndirectedEdge[{7, 4}, {6, 6}], 
          UndirectedEdge[{7, 4}, {8, 2}], 
          UndirectedEdge[{7, 4}, {8, 6}], 
          UndirectedEdge[{7, 5}, {5, 6}], 
          UndirectedEdge[{7, 5}, {6, 3}], 
          UndirectedEdge[{7, 5}, {6, 7}], 
          UndirectedEdge[{7, 5}, {8, 7}], 
          UndirectedEdge[{7, 6}, {5, 7}], 
          UndirectedEdge[{7, 6}, {6, 8}], 
          UndirectedEdge[{7, 6}, {8, 8}], 
          UndirectedEdge[{7, 7}, {5, 8}], 
          UndirectedEdge[{7, 8}, {6, 6}], 
          UndirectedEdge[{7, 8}, {8, 6}], 
          UndirectedEdge[{8, 1}, {6, 2}], 
          UndirectedEdge[{8, 2}, {6, 1}], 
          UndirectedEdge[{8, 3}, {7, 1}], 
          UndirectedEdge[{8, 3}, {7, 5}], 
          UndirectedEdge[{8, 4}, {6, 5}], 
          UndirectedEdge[{8, 4}, {7, 2}], 
          UndirectedEdge[{8, 4}, {7, 6}], 
          UndirectedEdge[{8, 5}, {6, 6}], 
          UndirectedEdge[{8, 5}, {7, 3}], 
          UndirectedEdge[{8, 5}, {7, 7}], 
          UndirectedEdge[{8, 6}, {6, 5}], 
          UndirectedEdge[{8, 6}, {6, 7}], 
          UndirectedEdge[{8, 7}, {6, 8}]}], $CellContext`deleteKnightPaths[
         Pattern[$CellContext`knightpaths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := 
       Select[$CellContext`knightpaths, $CellContext`pawnMemberTest[#, \
$CellContext`pawns]& ], $CellContext`pawnMemberTest[
         Pattern[$CellContext`knight, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := FreeQ[
         Map[FreeQ[$CellContext`knight, #]& , $CellContext`pawns], 
         False], $CellContext`createKnightNetwork[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]], 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Block[{$CellContext`beenhere = {}}, 
         Union[
          Flatten[
           $CellContext`recursiveCreateKnightNetwork[$CellContext`boardsize, \
{$CellContext`x, $CellContext`y}, {}, $CellContext`pawns, \
$CellContext`knightmoves]]]], $CellContext`recursiveCreateKnightNetwork[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := 
       Module[{$CellContext`newmoves, $CellContext`newpaths}, \
$CellContext`newmoves = $CellContext`findMoves[{$CellContext`n, \
$CellContext`m}, {$CellContext`x, $CellContext`y}, $CellContext`pawns, \
$CellContext`knightmoves]; 
         AppendTo[$CellContext`beenhere, {$CellContext`x, $CellContext`y}]; 
         If[$CellContext`newmoves === {}, $CellContext`paths, \
$CellContext`newpaths = 
            Map[UndirectedEdge[{$CellContext`x, $CellContext`y}, #]& , \
$CellContext`newmoves]; $CellContext`newpaths = 
            Join[$CellContext`paths, $CellContext`newpaths]; 
           Map[$CellContext`recursiveCreateKnightNetwork[{$CellContext`n, \
$CellContext`m}, #, $CellContext`newpaths, $CellContext`pawns, \
$CellContext`knightmoves]& , $CellContext`newmoves]]], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]]]& ], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]], 
          Not[
           MemberQ[
            $CellContext`deleteKnightPaths[$CellContext`paths, \
$CellContext`pawns], #]]]& ], $CellContext`squareOnBoard[{
          Pattern[$CellContext`a, 
           Blank[Integer]], 
          Pattern[$CellContext`b, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`m, 
          Blank[]]] := If[
         Inequality[0, Less, $CellContext`a, LessEqual, $CellContext`n], 
         If[
          Inequality[0, Less, $CellContext`b, LessEqual, $CellContext`m], 
          True, False], False], $CellContext`vert = {{1, 1}, {1, 2}, {1, 3}, {
        1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 1}, {2, 2}, {2, 3}, {2, 
        4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {
        3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 
        5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {
        5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 
        6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {
        7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 
        7}, {8, 8}}, $CellContext`board[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            Which[
             MemberQ[$CellContext`moves, {$CellContext`x, $CellContext`y}], 
             Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Text[
            Style["X", Large, Bold, 
             RGBColor[169/255, 15/255, 13/255], FontFamily -> "Arial"], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, -1]]], Thick, Dashed, 
           Arrow[
            Map[{
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}& , $CellContext`moves]], 
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style["\[BlackKnight]", Large, Black], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, 1]]]}]], $CellContext`simpleBoard[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`text, 
          Blank[]], 
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`y1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]], 
         Pattern[$CellContext`y2, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            
            Which[{$CellContext`x, $CellContext`y} === {$CellContext`x1, \
$CellContext`y1}, 
             Pink, {$CellContext`x, $CellContext`y} === {$CellContext`x2, \
$CellContext`y2}, Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style[$CellContext`text, FontSize -> 30], {4, 4}, Background -> 
            White], 
           Text[
            Style[
            "\[BlackKnight]", Large, 
             Black], {$CellContext`x1, 8 - $CellContext`y1} + {-0.5, 
             0.5}]}]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1386321402],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 32, $CellContext`gr$$ = Graphics[{
      Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvW0thfGh9AP4PRo+NMn/EfTP/50ONjcOVzDH5d6ADTP9G0=
       "], {{0, 0}, {8, 8}}, {0, 1}], {{
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 6.5}]}, 
       Text[
        Style["No path exists", FontSize -> 30], {4, 4}, Background -> 
        GrayLevel[1]], 
       Text[
        Style["\[BlackKnight]", Large, 
         GrayLevel[0]], {7.5, 5.5}]}}, {
     Frame -> True, FrameLabel -> {None, None}, 
      FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
    214, $CellContext`oldA$$ = 
    32, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{5, 5}, {4, 4}, {
    1, 4}, {3, 6}, {5, 3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8,
     7}, {6, 6}, {7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 5}, {3, 
    2}, {6, 7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 7}, {5, 4}, {3, 
    7}, {1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 4}, {3, 6}, {8, 
    6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 
    2}}, $CellContext`oldpts$$ = {{8, 3}, {5, 6}}, $CellContext`pawns$$ = {{5,
     5}, {4, 4}, {1, 4}, {3, 6}, {5, 3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 
    6}, {7, 4}, {8, 7}, {6, 6}, {7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 
    3}, {6, 5}, {3, 2}, {6, 7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 
    7}, {5, 4}, {3, 7}, {1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 
    4}, {3, 6}, {8, 6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 
    2}}, $CellContext`pts$$ = {{8, 3}, {5, 6}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Text[
        Style[
        "Click to move the X. The knight will be placed at the current X.", 
         14]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`k$$], 214, 
       Style["random seed"]}, 0, 1000, 1}, {{
       Hold[$CellContext`a$$], 32, 
       Style["number of pawns"]}, 0, 48, 1}, {{
       Hold[$CellContext`pawns$$], {{5, 5}, {4, 4}, {1, 4}, {3, 6}, {5, 3}, {
       7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8, 7}, {6, 6}, {7, 
       7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 5}, {3, 2}, {6, 7}, {2,
        3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 7}, {5, 4}, {3, 7}, {1, 5}, {
       6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 4}, {3, 6}, {8, 6}, {2, 
       4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 2}}}, {}}, {{
       Hold[$CellContext`pts$$], {{8, 3}, {5, 6}}}, {}}, {{
       Hold[$CellContext`gr$$], 
       Graphics[{
         Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvW0thfGh9AP4PRo+NMn/EfTP/50ONjcOVzDH5d6ADTP9G0=
          "], {{0, 0}, {8, 8}}, {0, 1}], {{
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 6.5}]}, 
          Text[
           Style["No path exists", FontSize -> 30], {4, 4}, Background -> 
           GrayLevel[1]], 
          Text[
           Style["\[BlackKnight]", Large, 
            GrayLevel[0]], {7.5, 5.5}]}}, {
        Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}}]}, {}}, {{
       Hold[$CellContext`oldA$$], 32}, 0}, {
      Hold[$CellContext`oldK$$], -1}, {{
       Hold[$CellContext`oldpawns$$], {{5, 5}, {4, 4}, {1, 4}, {3, 6}, {5, 
       3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8, 7}, {6, 6}, {7,
        7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 5}, {3, 2}, {6, 7}, {
       2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 7}, {5, 4}, {3, 7}, {1, 
       5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 4}, {3, 6}, {8, 6}, {2,
        4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 2}}}, {}}, {{
       Hold[$CellContext`oldpts$$], {{8, 3}, {5, 6}}}, {}}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`k$1375988$$ = 0, $CellContext`a$1375989$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 32, $CellContext`gr$$ = Graphics[{
           Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvW0thfGh9AP4PRo+NMn/EfTP/50ONjcOVzDH5d6ADTP9G0=
            "], {{0, 0}, {8, 8}}, {0, 1}], {{
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 6.5}]}, 
            Text[
             Style["No path exists", FontSize -> 30], {4, 4}, Background -> 
             GrayLevel[1]], 
            Text[
             Style["\[BlackKnight]", Large, 
              GrayLevel[0]], {7.5, 5.5}]}}, {
          Frame -> True, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
        214, $CellContext`oldA$$ = 
        32, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{5, 5}, {4, 
         4}, {1, 4}, {3, 6}, {5, 3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {
         7, 4}, {8, 7}, {6, 6}, {7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 
         3}, {6, 5}, {3, 2}, {6, 7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {
         7, 7}, {5, 4}, {3, 7}, {1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 
         2}, {1, 4}, {3, 6}, {8, 6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {
         8, 2}}, $CellContext`oldpts$$ = {{8, 3}, {5, 
         6}}, $CellContext`pawns$$ = {{5, 5}, {4, 4}, {1, 4}, {3, 6}, {5, 
         3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8, 7}, {6, 6}, {
         7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 5}, {3, 2}, {6, 
         7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 7}, {5, 4}, {3, 7}, {
         1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 4}, {3, 6}, {8, 
         6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 
         2}}, $CellContext`pts$$ = {{8, 3}, {5, 6}}}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1375988$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1375989$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`k$$]; 
       DynamicModule[{$CellContext`knightMoves = {{2, 1}, {2, -1}, {
           1, -2}, {-1, -2}, {-2, -1}, {-2, 1}, {-1, 2}, {1, 2}}}, 
         Pane[
          ClickPane[
          If[$CellContext`pts$$ === {}, $CellContext`pts$$ = {{1, 1}, {4, 
              5}}]; If[
             
             Or[$CellContext`oldA$$ != $CellContext`a$$, $CellContext`oldK$$ != \
$CellContext`k$$], $CellContext`pawns$$ = \
$CellContext`randomPawnSquares[$CellContext`boardsize, $CellContext`a$$]]; 
           Dynamic[If[
               Or[
               Or[$CellContext`oldA$$ != $CellContext`a$$, \
$CellContext`oldpts$$ =!= $CellContext`pts$$, $CellContext`oldpawns$$] =!= \
$CellContext`pawns$$, $CellContext`oldK$$ != $CellContext`k$$], \
$CellContext`gr$$ = $CellContext`knightPathFinder[$CellContext`pts$$, \
$CellContext`boardsize, $CellContext`pawns$$, $CellContext`knightMoves]]; \
$CellContext`oldA$$ = $CellContext`a$$; $CellContext`oldpts$$ = \
$CellContext`pts$$; $CellContext`oldpawns$$ = $CellContext`pawns$$; \
$CellContext`gr$$], (If[Length[$CellContext`pts$$] < 2, 
             AppendTo[$CellContext`pts$$, {
               Ceiling[
                Part[#, 1]], 9 - Ceiling[
                Part[#, 2]]}], $CellContext`pts$$ = {
               Part[$CellContext`pts$$, 2], {
                Ceiling[
                 Part[#, 1]], 9 - Ceiling[
                 Part[#, 2]]}}]; Null)& ], Null, ImageSize -> {400, 400}, 
          Alignment -> Center]]), "Specifications" :> {
        Text[
         Style[
         "Click to move the X. The knight will be placed at the current X.", 
          14]], {{$CellContext`k$$, 214, 
          Style["random seed"]}, 0, 1000, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 32, 
          Style["number of pawns"]}, 0, 48, 1, Appearance -> 
         "Labeled"}, {{$CellContext`pawns$$, {{5, 5}, {4, 4}, {1, 4}, {3, 
          6}, {5, 3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8, 
          7}, {6, 6}, {7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 
          5}, {3, 2}, {6, 7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 
          7}, {5, 4}, {3, 7}, {1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 
          2}, {1, 4}, {3, 6}, {8, 6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 
          6}, {8, 2}}}, {}, ControlType -> 
         None}, {{$CellContext`pts$$, {{8, 3}, {5, 6}}}, {}, ControlType -> 
         None}, {{$CellContext`gr$$, 
          Graphics[{
            Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnLvW0thfGh9AP4PRo+NMn/EfTP/50ONjcOVzDH5d6ADTP9G0=
             "], {{0, 0}, {8, 8}}, {0, 1}], {{
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 6.5}]}, 
             Text[
              Style["No path exists", FontSize -> 30], {4, 4}, Background -> 
              GrayLevel[1]], 
             Text[
              Style["\[BlackKnight]", Large, 
               GrayLevel[0]], {7.5, 5.5}]}}, {
           Frame -> True, FrameLabel -> {None, None}, 
            FrameTicks -> {{None, None}, {None, None}}}]}, {}, ControlType -> 
         None}, {{$CellContext`oldA$$, 32}, 0, ControlType -> 
         None}, {$CellContext`oldK$$, -1, ControlType -> 
         None}, {{$CellContext`oldpawns$$, {{5, 5}, {4, 4}, {1, 4}, {3, 6}, {
          5, 3}, {7, 3}, {7, 3}, {1, 3}, {7, 4}, {2, 6}, {7, 4}, {8, 7}, {6, 
          6}, {7, 7}, {5, 3}, {7, 2}, {8, 4}, {5, 3}, {4, 3}, {6, 5}, {3, 
          2}, {6, 7}, {2, 3}, {7, 5}, {6, 6}, {5, 7}, {6, 4}, {7, 7}, {5, 
          4}, {3, 7}, {1, 5}, {6, 3}, {7, 7}, {1, 4}, {5, 2}, {4, 2}, {1, 
          4}, {3, 6}, {8, 6}, {2, 4}, {8, 4}, {7, 4}, {6, 6}, {4, 6}, {8, 
          2}}}, {}, ControlType -> 
         None}, {{$CellContext`oldpts$$, {{8, 3}, {5, 6}}}, {}, ControlType -> 
         None}}, 
      "Options" :> {ContentSize -> {430, 430}, AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{450., {271., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`randomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := Block[{$CellContext`temppawns = {}}, 
         $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]], $CellContext`boardsize = {8, 
        8}, $CellContext`recursiveRandomPawnSquares[
         Blank[], 0] = {}, $CellContext`recursiveRandomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := (AppendTo[$CellContext`temppawns, {
           RandomInteger[{1, 
             Part[$CellContext`boardsize, 1]}], 
           RandomInteger[{2, Part[$CellContext`boardsize, 2] - 1}]}]; 
        If[Length[
            
            Union[$CellContext`temppawns]] == $CellContext`n, \
$CellContext`temppawns, 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n], 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]]), $CellContext`recursiveRandomPawnSquares[
         Blank[], 0, 
         Blank[]] = {}, $CellContext`knightPathFinder[{{
           Pattern[$CellContext`currentX, 
            Blank[]], 
           Pattern[$CellContext`currentY, 
            Blank[]]}, {
           Pattern[$CellContext`targetX, 
            Blank[]], 
           Pattern[$CellContext`targetY, 
            Blank[]]}}, 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := ($CellContext`g = $CellContext`deleteKnightPaths[
           $CellContext`createKnightNetwork[$CellContext`currentX, \
$CellContext`currentY, $CellContext`boardsize, $CellContext`pawns, \
$CellContext`knightmoves], $CellContext`pawns]; $CellContext`vert = Union[
           Cases[$CellContext`g, {
             Blank[], 
             Blank[]}, Infinity]]; If[
          Not[
           
           MemberQ[$CellContext`pawns, {$CellContext`currentX, \
$CellContext`currentY}]], 
          If[
           And[
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}]], 
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`targetX, \
$CellContext`targetY}]]], 
           
           If[$CellContext`g = Graph[$CellContext`vert, $CellContext`g]; 
            MemberQ[
              
              VertexComponent[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}], {$CellContext`targetX, $CellContext`targetY}], 
            $CellContext`board[$CellContext`boardsize, $CellContext`pawns, 
             
             FindShortestPath[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}, {$CellContext`targetX, $CellContext`targetY}]], 
            $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
             "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
           $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
            "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
          $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
           "Not a valid starting square", $CellContext`currentX, \
$CellContext`currentY, $CellContext`targetX, $CellContext`targetY]]), \
$CellContext`g = 
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
         8}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
         3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 
         1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {
         5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 
         2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {
         7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 
         3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}}, {
          UndirectedEdge[{1, 2}, {2, 4}], 
          UndirectedEdge[{1, 2}, {3, 3}], 
          UndirectedEdge[{1, 3}, {2, 5}], 
          UndirectedEdge[{1, 3}, {3, 4}], 
          UndirectedEdge[{1, 4}, {2, 6}], 
          UndirectedEdge[{1, 5}, {2, 7}], 
          UndirectedEdge[{1, 5}, {3, 6}], 
          UndirectedEdge[{1, 6}, {3, 7}], 
          UndirectedEdge[{1, 7}, {3, 8}], 
          UndirectedEdge[{2, 1}, {1, 3}], 
          UndirectedEdge[{2, 2}, {1, 4}], 
          UndirectedEdge[{2, 2}, {4, 1}], 
          UndirectedEdge[{2, 3}, {1, 1}], 
          UndirectedEdge[{2, 3}, {1, 5}], 
          UndirectedEdge[{2, 3}, {3, 5}], 
          UndirectedEdge[{2, 4}, {1, 6}], 
          UndirectedEdge[{2, 4}, {4, 3}], 
          UndirectedEdge[{2, 4}, {4, 5}], 
          UndirectedEdge[{2, 5}, {1, 7}], 
          UndirectedEdge[{2, 6}, {1, 8}], 
          UndirectedEdge[{2, 6}, {3, 8}], 
          UndirectedEdge[{2, 6}, {4, 7}], 
          UndirectedEdge[{2, 7}, {3, 5}], 
          UndirectedEdge[{2, 8}, {1, 6}], 
          UndirectedEdge[{3, 1}, {1, 2}], 
          UndirectedEdge[{3, 1}, {2, 3}], 
          UndirectedEdge[{3, 1}, {4, 3}], 
          UndirectedEdge[{3, 2}, {1, 1}], 
          UndirectedEdge[{3, 2}, {1, 3}], 
          UndirectedEdge[{3, 2}, {2, 4}], 
          UndirectedEdge[{3, 2}, {4, 4}], 
          UndirectedEdge[{3, 2}, {5, 3}], 
          UndirectedEdge[{3, 3}, {1, 4}], 
          UndirectedEdge[{3, 3}, {2, 1}], 
          UndirectedEdge[{3, 3}, {2, 5}], 
          UndirectedEdge[{3, 3}, {4, 1}], 
          UndirectedEdge[{3, 3}, {4, 5}], 
          UndirectedEdge[{3, 3}, {5, 4}], 
          UndirectedEdge[{3, 4}, {1, 5}], 
          UndirectedEdge[{3, 4}, {2, 2}], 
          UndirectedEdge[{3, 4}, {2, 6}], 
          UndirectedEdge[{3, 4}, {4, 6}], 
          UndirectedEdge[{3, 4}, {5, 5}], 
          UndirectedEdge[{3, 5}, {1, 4}], 
          UndirectedEdge[{3, 5}, {1, 6}], 
          UndirectedEdge[{3, 5}, {4, 3}], 
          UndirectedEdge[{3, 5}, {4, 7}], 
          UndirectedEdge[{3, 6}, {1, 7}], 
          UndirectedEdge[{3, 6}, {2, 4}], 
          UndirectedEdge[{3, 6}, {2, 8}], 
          UndirectedEdge[{3, 6}, {4, 8}], 
          UndirectedEdge[{3, 7}, {1, 8}], 
          UndirectedEdge[{3, 7}, {2, 5}], 
          UndirectedEdge[{4, 2}, {2, 1}], 
          UndirectedEdge[{4, 2}, {2, 3}], 
          UndirectedEdge[{4, 2}, {3, 4}], 
          UndirectedEdge[{4, 3}, {2, 2}], 
          UndirectedEdge[{4, 4}, {2, 3}], 
          UndirectedEdge[{4, 4}, {2, 5}], 
          UndirectedEdge[{4, 4}, {3, 6}], 
          UndirectedEdge[{4, 4}, {5, 6}], 
          UndirectedEdge[{4, 5}, {2, 6}], 
          UndirectedEdge[{4, 5}, {3, 7}], 
          UndirectedEdge[{4, 5}, {6, 6}], 
          UndirectedEdge[{4, 6}, {2, 5}], 
          UndirectedEdge[{4, 6}, {2, 7}], 
          UndirectedEdge[{4, 6}, {3, 8}], 
          UndirectedEdge[{4, 6}, {6, 7}], 
          UndirectedEdge[{4, 7}, {2, 8}], 
          UndirectedEdge[{4, 8}, {2, 7}], 
          UndirectedEdge[{5, 1}, {3, 2}], 
          UndirectedEdge[{5, 1}, {4, 3}], 
          UndirectedEdge[{5, 2}, {3, 1}], 
          UndirectedEdge[{5, 2}, {3, 3}], 
          UndirectedEdge[{5, 2}, {4, 4}], 
          UndirectedEdge[{5, 3}, {3, 4}], 
          UndirectedEdge[{5, 3}, {4, 1}], 
          UndirectedEdge[{5, 3}, {4, 5}], 
          UndirectedEdge[{5, 3}, {6, 1}], 
          UndirectedEdge[{5, 3}, {6, 5}], 
          UndirectedEdge[{5, 3}, {7, 4}], 
          UndirectedEdge[{5, 4}, {3, 5}], 
          UndirectedEdge[{5, 4}, {4, 2}], 
          UndirectedEdge[{5, 4}, {4, 6}], 
          UndirectedEdge[{5, 4}, {6, 6}], 
          UndirectedEdge[{5, 4}, {7, 5}], 
          UndirectedEdge[{5, 5}, {3, 6}], 
          UndirectedEdge[{5, 5}, {4, 3}], 
          UndirectedEdge[{5, 5}, {4, 7}], 
          UndirectedEdge[{5, 5}, {6, 7}], 
          UndirectedEdge[{5, 5}, {7, 6}], 
          UndirectedEdge[{5, 6}, {3, 5}], 
          UndirectedEdge[{5, 6}, {3, 7}], 
          UndirectedEdge[{5, 6}, {4, 8}], 
          UndirectedEdge[{5, 6}, {7, 7}], 
          UndirectedEdge[{5, 7}, {3, 6}], 
          UndirectedEdge[{5, 7}, {3, 8}], 
          UndirectedEdge[{5, 7}, {4, 5}], 
          UndirectedEdge[{5, 7}, {6, 5}], 
          UndirectedEdge[{5, 7}, {7, 8}], 
          UndirectedEdge[{5, 8}, {3, 7}], 
          UndirectedEdge[{5, 8}, {4, 6}], 
          UndirectedEdge[{6, 1}, {4, 2}], 
          UndirectedEdge[{6, 2}, {4, 1}], 
          UndirectedEdge[{6, 2}, {4, 3}], 
          UndirectedEdge[{6, 2}, {5, 4}], 
          UndirectedEdge[{6, 2}, {7, 4}], 
          UndirectedEdge[{6, 2}, {8, 3}], 
          UndirectedEdge[{6, 3}, {4, 2}], 
          UndirectedEdge[{6, 3}, {4, 4}], 
          UndirectedEdge[{6, 3}, {5, 1}], 
          UndirectedEdge[{6, 3}, {5, 5}], 
          UndirectedEdge[{6, 3}, {8, 2}], 
          UndirectedEdge[{6, 3}, {8, 4}], 
          UndirectedEdge[{6, 4}, {4, 3}], 
          UndirectedEdge[{6, 4}, {4, 5}], 
          UndirectedEdge[{6, 4}, {5, 2}], 
          UndirectedEdge[{6, 4}, {5, 6}], 
          UndirectedEdge[{6, 4}, {7, 2}], 
          UndirectedEdge[{6, 4}, {7, 6}], 
          UndirectedEdge[{6, 4}, {8, 3}], 
          UndirectedEdge[{6, 4}, {8, 5}], 
          UndirectedEdge[{6, 5}, {4, 4}], 
          UndirectedEdge[{6, 5}, {4, 6}], 
          UndirectedEdge[{6, 5}, {7, 7}], 
          UndirectedEdge[{6, 6}, {4, 7}], 
          UndirectedEdge[{6, 6}, {5, 8}], 
          UndirectedEdge[{6, 6}, {8, 7}], 
          UndirectedEdge[{6, 7}, {4, 8}], 
          UndirectedEdge[{6, 7}, {8, 8}], 
          UndirectedEdge[{6, 8}, {4, 7}], 
          UndirectedEdge[{6, 8}, {5, 6}], 
          UndirectedEdge[{7, 1}, {5, 2}], 
          UndirectedEdge[{7, 1}, {6, 3}], 
          UndirectedEdge[{7, 2}, {5, 1}], 
          UndirectedEdge[{7, 2}, {5, 3}], 
          UndirectedEdge[{7, 3}, {5, 2}], 
          UndirectedEdge[{7, 3}, {5, 4}], 
          UndirectedEdge[{7, 3}, {6, 1}], 
          UndirectedEdge[{7, 3}, {6, 5}], 
          UndirectedEdge[{7, 3}, {8, 1}], 
          UndirectedEdge[{7, 4}, {5, 5}], 
          UndirectedEdge[{7, 4}, {6, 6}], 
          UndirectedEdge[{7, 4}, {8, 2}], 
          UndirectedEdge[{7, 4}, {8, 6}], 
          UndirectedEdge[{7, 5}, {5, 6}], 
          UndirectedEdge[{7, 5}, {6, 3}], 
          UndirectedEdge[{7, 5}, {6, 7}], 
          UndirectedEdge[{7, 5}, {8, 7}], 
          UndirectedEdge[{7, 6}, {5, 7}], 
          UndirectedEdge[{7, 6}, {6, 8}], 
          UndirectedEdge[{7, 6}, {8, 8}], 
          UndirectedEdge[{7, 7}, {5, 8}], 
          UndirectedEdge[{7, 8}, {6, 6}], 
          UndirectedEdge[{7, 8}, {8, 6}], 
          UndirectedEdge[{8, 1}, {6, 2}], 
          UndirectedEdge[{8, 2}, {6, 1}], 
          UndirectedEdge[{8, 3}, {7, 1}], 
          UndirectedEdge[{8, 3}, {7, 5}], 
          UndirectedEdge[{8, 4}, {6, 5}], 
          UndirectedEdge[{8, 4}, {7, 2}], 
          UndirectedEdge[{8, 4}, {7, 6}], 
          UndirectedEdge[{8, 5}, {6, 6}], 
          UndirectedEdge[{8, 5}, {7, 3}], 
          UndirectedEdge[{8, 5}, {7, 7}], 
          UndirectedEdge[{8, 6}, {6, 5}], 
          UndirectedEdge[{8, 6}, {6, 7}], 
          UndirectedEdge[{8, 7}, {6, 8}]}], $CellContext`deleteKnightPaths[
         Pattern[$CellContext`knightpaths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := 
       Select[$CellContext`knightpaths, $CellContext`pawnMemberTest[#, \
$CellContext`pawns]& ], $CellContext`pawnMemberTest[
         Pattern[$CellContext`knight, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := FreeQ[
         Map[FreeQ[$CellContext`knight, #]& , $CellContext`pawns], 
         False], $CellContext`createKnightNetwork[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]], 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Block[{$CellContext`beenhere = {}}, 
         Union[
          Flatten[
           $CellContext`recursiveCreateKnightNetwork[$CellContext`boardsize, \
{$CellContext`x, $CellContext`y}, {}, $CellContext`pawns, \
$CellContext`knightmoves]]]], $CellContext`recursiveCreateKnightNetwork[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := 
       Module[{$CellContext`newmoves, $CellContext`newpaths}, \
$CellContext`newmoves = $CellContext`findMoves[{$CellContext`n, \
$CellContext`m}, {$CellContext`x, $CellContext`y}, $CellContext`pawns, \
$CellContext`knightmoves]; 
         AppendTo[$CellContext`beenhere, {$CellContext`x, $CellContext`y}]; 
         If[$CellContext`newmoves === {}, $CellContext`paths, \
$CellContext`newpaths = 
            Map[UndirectedEdge[{$CellContext`x, $CellContext`y}, #]& , \
$CellContext`newmoves]; $CellContext`newpaths = 
            Join[$CellContext`paths, $CellContext`newpaths]; 
           Map[$CellContext`recursiveCreateKnightNetwork[{$CellContext`n, \
$CellContext`m}, #, $CellContext`newpaths, $CellContext`pawns, \
$CellContext`knightmoves]& , $CellContext`newmoves]]], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]]]& ], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]], 
          Not[
           MemberQ[
            $CellContext`deleteKnightPaths[$CellContext`paths, \
$CellContext`pawns], #]]]& ], $CellContext`squareOnBoard[{
          Pattern[$CellContext`a, 
           Blank[Integer]], 
          Pattern[$CellContext`b, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`m, 
          Blank[]]] := If[
         Inequality[0, Less, $CellContext`a, LessEqual, $CellContext`n], 
         If[
          Inequality[0, Less, $CellContext`b, LessEqual, $CellContext`m], 
          True, False], False], $CellContext`vert = {{1, 1}, {1, 2}, {1, 3}, {
        1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 1}, {2, 2}, {2, 3}, {2, 
        4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {
        3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 
        5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {
        5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 
        6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {
        7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 
        7}, {8, 8}}, $CellContext`board[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            Which[
             MemberQ[$CellContext`moves, {$CellContext`x, $CellContext`y}], 
             Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Text[
            Style["X", Large, Bold, 
             RGBColor[169/255, 15/255, 13/255], FontFamily -> "Arial"], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, -1]]], Thick, Dashed, 
           Arrow[
            Map[{
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}& , $CellContext`moves]], 
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style["\[BlackKnight]", Large, Black], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, 1]]]}]], $CellContext`simpleBoard[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`text, 
          Blank[]], 
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`y1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]], 
         Pattern[$CellContext`y2, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            
            Which[{$CellContext`x, $CellContext`y} === {$CellContext`x1, \
$CellContext`y1}, 
             Pink, {$CellContext`x, $CellContext`y} === {$CellContext`x2, \
$CellContext`y2}, Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style[$CellContext`text, FontSize -> 30], {4, 4}, Background -> 
            White], 
           Text[
            Style[
            "\[BlackKnight]", Large, 
             Black], {$CellContext`x1, 8 - $CellContext`y1} + {-0.5, 
             0.5}]}]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1853717111],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 30, $CellContext`gr$$ = Graphics[{
      Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnjA+hH8DpwebOoR7+pIbzQMX7aLoiL/xx+XegwoFU9wy28AcAK5TYuw==

       "], {{0, 0}, {8, 8}}, {0, 1}], {
       Text[
        Style["X", Large, Bold, 
         RGBColor[
          Rational[169, 255], 
          Rational[1, 17], 
          Rational[13, 255]], FontFamily -> "Arial"], {0.5, 7.5}], 
       Thickness[Large], 
       Dashing[{Small, Small}], 
       Arrow[{{7.5, 1.5}, {6.5, 3.5}, {4.5, 4.5}, {3.5, 6.5}, {1.5, 7.5}, {
        0.5, 5.5}, {2.5, 6.5}, {0.5, 7.5}}], {
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {6.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 3.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {2.5, 4.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 6.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {0.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {7.5, 2.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {3.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {1.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {5.5, 1.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 5.5}], 
        Text[
         Style["\[BlackPawn]", Large, 
          GrayLevel[0]], {4.5, 2.5}]}, 
       Text[
        Style["\[BlackKnight]", Large, 
         GrayLevel[0]], {7.5, 1.5}]}}, {
     Frame -> True, FrameLabel -> {None, None}, 
      FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
    860, $CellContext`oldA$$ = 
    30, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{1, 6}, {3, 7}, {
    7, 6}, {8, 5}, {1, 7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7,
     7}, {4, 5}, {4, 5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 
    6}, {3, 4}, {7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 7}, {3, 
    4}, {6, 2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 3}, {2, 3}, {6, 7}, {5, 
    3}, {5, 6}}, $CellContext`oldpts$$ = {{8, 7}, {1, 
    1}}, $CellContext`pawns$$ = {{1, 6}, {3, 7}, {7, 6}, {8, 5}, {1, 7}, {8, 
    5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 7}, {4, 5}, {4, 5}, {4, 
    3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 6}, {3, 4}, {7, 4}, {2, 
    2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 7}, {3, 4}, {6, 2}, {1, 6}, {6, 
    3}, {8, 6}, {4, 7}, {6, 3}, {2, 3}, {6, 7}, {5, 3}, {5, 
    6}}, $CellContext`pts$$ = {{8, 7}, {1, 1}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Text[
        Style[
        "Click to move the X. The knight will be placed at the current X.", 
         14]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`k$$], 860, 
       Style["random seed"]}, 0, 1000, 1}, {{
       Hold[$CellContext`a$$], 30, 
       Style["number of pawns"]}, 0, 48, 1}, {{
       Hold[$CellContext`pawns$$], {{1, 6}, {3, 7}, {7, 6}, {8, 5}, {1, 7}, {
       8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 7}, {4, 5}, {4, 
       5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 6}, {3, 4}, {7,
        4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 7}, {3, 4}, {6, 2}, {
       1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 3}, {2, 3}, {6, 7}, {5, 3}, {5, 
       6}}}, {}}, {{
       Hold[$CellContext`pts$$], {{8, 7}, {1, 1}}}, {}}, {{
       Hold[$CellContext`gr$$], 
       Graphics[{
         Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnjA+hH8DpwebOoR7+pIbzQMX7aLoiL/xx+XegwoFU9wy28AcAK5TYuw==

          "], {{0, 0}, {8, 8}}, {0, 1}], {
          Text[
           Style["X", Large, Bold, 
            RGBColor[
             Rational[169, 255], 
             Rational[1, 17], 
             Rational[13, 255]], FontFamily -> "Arial"], {0.5, 7.5}], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          
          Arrow[{{7.5, 1.5}, {6.5, 3.5}, {4.5, 4.5}, {3.5, 6.5}, {1.5, 7.5}, {
           0.5, 5.5}, {2.5, 6.5}, {0.5, 7.5}}], {
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {6.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 3.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {2.5, 4.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 6.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {0.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {7.5, 2.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {3.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {1.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {5.5, 1.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 5.5}], 
           Text[
            Style["\[BlackPawn]", Large, 
             GrayLevel[0]], {4.5, 2.5}]}, 
          Text[
           Style["\[BlackKnight]", Large, 
            GrayLevel[0]], {7.5, 1.5}]}}, {
        Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}}]}, {}}, {{
       Hold[$CellContext`oldA$$], 30}, 0}, {
      Hold[$CellContext`oldK$$], -1}, {{
       Hold[$CellContext`oldpawns$$], {{1, 6}, {3, 7}, {7, 6}, {8, 5}, {1, 
       7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 7}, {4, 5}, {4,
        5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 6}, {3, 4}, {
       7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 7}, {3, 4}, {6, 
       2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 3}, {2, 3}, {6, 7}, {5, 3}, {5,
        6}}}, {}}, {{
       Hold[$CellContext`oldpts$$], {{8, 7}, {1, 1}}}, {}}}, 
    Typeset`size$$ = {400., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`k$1376065$$ = 0, $CellContext`a$1376066$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 30, $CellContext`gr$$ = Graphics[{
           Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnjA+hH8DpwebOoR7+pIbzQMX7aLoiL/xx+XegwoFU9wy28AcAK5TYuw==

            "], {{0, 0}, {8, 8}}, {0, 1}], {
            Text[
             Style["X", Large, Bold, 
              RGBColor[
               Rational[169, 255], 
               Rational[1, 17], 
               Rational[13, 255]], FontFamily -> "Arial"], {0.5, 7.5}], 
            Thickness[Large], 
            Dashing[{Small, Small}], 
            
            Arrow[{{7.5, 1.5}, {6.5, 3.5}, {4.5, 4.5}, {3.5, 6.5}, {1.5, 
             7.5}, {0.5, 5.5}, {2.5, 6.5}, {0.5, 7.5}}], {
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {6.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 3.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {2.5, 4.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 6.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {0.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {7.5, 2.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {3.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {1.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {5.5, 1.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 5.5}], 
             Text[
              Style["\[BlackPawn]", Large, 
               GrayLevel[0]], {4.5, 2.5}]}, 
            Text[
             Style["\[BlackKnight]", Large, 
              GrayLevel[0]], {7.5, 1.5}]}}, {
          Frame -> True, FrameLabel -> {None, None}, 
           FrameTicks -> {{None, None}, {None, None}}}], $CellContext`k$$ = 
        860, $CellContext`oldA$$ = 
        30, $CellContext`oldK$$ = -1, $CellContext`oldpawns$$ = {{1, 6}, {3, 
         7}, {7, 6}, {8, 5}, {1, 7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {
         6, 4}, {7, 7}, {4, 5}, {4, 5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 
         5}, {3, 7}, {2, 6}, {3, 4}, {7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {
         5, 2}, {5, 7}, {3, 4}, {6, 2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 
         3}, {2, 3}, {6, 7}, {5, 3}, {5, 6}}, $CellContext`oldpts$$ = {{8, 
         7}, {1, 1}}, $CellContext`pawns$$ = {{1, 6}, {3, 7}, {7, 6}, {8, 
         5}, {1, 7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 7}, {
         4, 5}, {4, 5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 
         6}, {3, 4}, {7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 7}, {
         3, 4}, {6, 2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 3}, {2, 3}, {6, 
         7}, {5, 3}, {5, 6}}, $CellContext`pts$$ = {{8, 7}, {1, 1}}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1376065$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1376066$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`k$$]; 
       DynamicModule[{$CellContext`knightMoves = {{2, 1}, {2, -1}, {
           1, -2}, {-1, -2}, {-2, -1}, {-2, 1}, {-1, 2}, {1, 2}}}, 
         Pane[
          ClickPane[
          If[$CellContext`pts$$ === {}, $CellContext`pts$$ = {{1, 1}, {4, 
              5}}]; If[
             
             Or[$CellContext`oldA$$ != $CellContext`a$$, $CellContext`oldK$$ != \
$CellContext`k$$], $CellContext`pawns$$ = \
$CellContext`randomPawnSquares[$CellContext`boardsize, $CellContext`a$$]]; 
           Dynamic[If[
               Or[
               Or[$CellContext`oldA$$ != $CellContext`a$$, \
$CellContext`oldpts$$ =!= $CellContext`pts$$, $CellContext`oldpawns$$] =!= \
$CellContext`pawns$$, $CellContext`oldK$$ != $CellContext`k$$], \
$CellContext`gr$$ = $CellContext`knightPathFinder[$CellContext`pts$$, \
$CellContext`boardsize, $CellContext`pawns$$, $CellContext`knightMoves]]; \
$CellContext`oldA$$ = $CellContext`a$$; $CellContext`oldpts$$ = \
$CellContext`pts$$; $CellContext`oldpawns$$ = $CellContext`pawns$$; \
$CellContext`gr$$], (If[Length[$CellContext`pts$$] < 2, 
             AppendTo[$CellContext`pts$$, {
               Ceiling[
                Part[#, 1]], 9 - Ceiling[
                Part[#, 2]]}], $CellContext`pts$$ = {
               Part[$CellContext`pts$$, 2], {
                Ceiling[
                 Part[#, 1]], 9 - Ceiling[
                 Part[#, 2]]}}]; Null)& ], Null, ImageSize -> {400, 400}, 
          Alignment -> Center]]), "Specifications" :> {
        Text[
         Style[
         "Click to move the X. The knight will be placed at the current X.", 
          14]], {{$CellContext`k$$, 860, 
          Style["random seed"]}, 0, 1000, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 30, 
          Style["number of pawns"]}, 0, 48, 1, Appearance -> 
         "Labeled"}, {{$CellContext`pawns$$, {{1, 6}, {3, 7}, {7, 6}, {8, 
          5}, {1, 7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 
          7}, {4, 5}, {4, 5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 
          7}, {2, 6}, {3, 4}, {7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 
          2}, {5, 7}, {3, 4}, {6, 2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 
          3}, {2, 3}, {6, 7}, {5, 3}, {5, 6}}}, {}, ControlType -> 
         None}, {{$CellContext`pts$$, {{8, 7}, {1, 1}}}, {}, ControlType -> 
         None}, {{$CellContext`gr$$, 
          Graphics[{
            Raster[CompressedData["
1:eJxTTMoPSmVmYGDggGIQe/IkEDhkHw4G1+0ZoEASDF5C+R/st24BgSf2g039
UHEnjA+hH8DpwebOoR7+pIbzQMX7aLoiL/xx+XegwoFU9wy28AcAK5TYuw==

             "], {{0, 0}, {8, 8}}, {0, 1}], {
             Text[
              Style["X", Large, Bold, 
               RGBColor[
                Rational[169, 255], 
                Rational[1, 17], 
                Rational[13, 255]], FontFamily -> "Arial"], {0.5, 7.5}], 
             Thickness[Large], 
             Dashing[{Small, Small}], 
             
             Arrow[{{7.5, 1.5}, {6.5, 3.5}, {4.5, 4.5}, {3.5, 6.5}, {1.5, 
              7.5}, {0.5, 5.5}, {2.5, 6.5}, {0.5, 7.5}}], {
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {6.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 3.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {2.5, 4.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 6.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {0.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {7.5, 2.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {3.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {1.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {5.5, 1.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 5.5}], 
              Text[
               Style["\[BlackPawn]", Large, 
                GrayLevel[0]], {4.5, 2.5}]}, 
             Text[
              Style["\[BlackKnight]", Large, 
               GrayLevel[0]], {7.5, 1.5}]}}, {
           Frame -> True, FrameLabel -> {None, None}, 
            FrameTicks -> {{None, None}, {None, None}}}]}, {}, ControlType -> 
         None}, {{$CellContext`oldA$$, 30}, 0, ControlType -> 
         None}, {$CellContext`oldK$$, -1, ControlType -> 
         None}, {{$CellContext`oldpawns$$, {{1, 6}, {3, 7}, {7, 6}, {8, 5}, {
          1, 7}, {8, 5}, {1, 5}, {5, 7}, {7, 7}, {6, 5}, {6, 4}, {7, 7}, {4, 
          5}, {4, 5}, {4, 3}, {6, 7}, {3, 3}, {8, 3}, {1, 5}, {3, 7}, {2, 
          6}, {3, 4}, {7, 4}, {2, 2}, {6, 6}, {2, 5}, {8, 2}, {5, 2}, {5, 
          7}, {3, 4}, {6, 2}, {1, 6}, {6, 3}, {8, 6}, {4, 7}, {6, 3}, {2, 
          3}, {6, 7}, {5, 3}, {5, 6}}}, {}, ControlType -> 
         None}, {{$CellContext`oldpts$$, {{8, 7}, {1, 1}}}, {}, ControlType -> 
         None}}, "Options" :> {
       ContentSize -> {430, 430}, AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{450., {271., 276.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`randomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := Block[{$CellContext`temppawns = {}}, 
         $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]], $CellContext`boardsize = {8, 
        8}, $CellContext`recursiveRandomPawnSquares[
         Blank[], 0] = {}, $CellContext`recursiveRandomPawnSquares[
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]]] := (AppendTo[$CellContext`temppawns, {
           RandomInteger[{1, 
             Part[$CellContext`boardsize, 1]}], 
           RandomInteger[{2, Part[$CellContext`boardsize, 2] - 1}]}]; 
        If[Length[
            
            Union[$CellContext`temppawns]] == $CellContext`n, \
$CellContext`temppawns, 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n], 
          $CellContext`recursiveRandomPawnSquares[$CellContext`boardsize, \
$CellContext`n]]), $CellContext`recursiveRandomPawnSquares[
         Blank[], 0, 
         Blank[]] = {}, $CellContext`knightPathFinder[{{
           Pattern[$CellContext`currentX, 
            Blank[]], 
           Pattern[$CellContext`currentY, 
            Blank[]]}, {
           Pattern[$CellContext`targetX, 
            Blank[]], 
           Pattern[$CellContext`targetY, 
            Blank[]]}}, 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := ($CellContext`g = $CellContext`deleteKnightPaths[
           $CellContext`createKnightNetwork[$CellContext`currentX, \
$CellContext`currentY, $CellContext`boardsize, $CellContext`pawns, \
$CellContext`knightmoves], $CellContext`pawns]; $CellContext`vert = Union[
           Cases[$CellContext`g, {
             Blank[], 
             Blank[]}, Infinity]]; If[
          Not[
           
           MemberQ[$CellContext`pawns, {$CellContext`currentX, \
$CellContext`currentY}]], 
          If[
           And[
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}]], 
            Not[
             
             FreeQ[$CellContext`g, {$CellContext`targetX, \
$CellContext`targetY}]]], 
           
           If[$CellContext`g = Graph[$CellContext`vert, $CellContext`g]; 
            MemberQ[
              
              VertexComponent[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}], {$CellContext`targetX, $CellContext`targetY}], 
            $CellContext`board[$CellContext`boardsize, $CellContext`pawns, 
             
             FindShortestPath[$CellContext`g, {$CellContext`currentX, \
$CellContext`currentY}, {$CellContext`targetX, $CellContext`targetY}]], 
            $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
             "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
           $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
            "No path exists", $CellContext`currentX, $CellContext`currentY, \
$CellContext`targetX, $CellContext`targetY]], 
          $CellContext`simpleBoard[{8, 8}, $CellContext`pawns, 
           "Not a valid starting square", $CellContext`currentX, \
$CellContext`currentY, $CellContext`targetX, $CellContext`targetY]]), \
$CellContext`g = 
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 
         8}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
         3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 
         1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {
         5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 
         2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {
         7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 
         3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}}, {
          UndirectedEdge[{1, 2}, {2, 4}], 
          UndirectedEdge[{1, 2}, {3, 3}], 
          UndirectedEdge[{1, 3}, {2, 5}], 
          UndirectedEdge[{1, 3}, {3, 4}], 
          UndirectedEdge[{1, 4}, {2, 6}], 
          UndirectedEdge[{1, 5}, {2, 7}], 
          UndirectedEdge[{1, 5}, {3, 6}], 
          UndirectedEdge[{1, 6}, {3, 7}], 
          UndirectedEdge[{1, 7}, {3, 8}], 
          UndirectedEdge[{2, 1}, {1, 3}], 
          UndirectedEdge[{2, 2}, {1, 4}], 
          UndirectedEdge[{2, 2}, {4, 1}], 
          UndirectedEdge[{2, 3}, {1, 1}], 
          UndirectedEdge[{2, 3}, {1, 5}], 
          UndirectedEdge[{2, 3}, {3, 5}], 
          UndirectedEdge[{2, 4}, {1, 6}], 
          UndirectedEdge[{2, 4}, {4, 3}], 
          UndirectedEdge[{2, 4}, {4, 5}], 
          UndirectedEdge[{2, 5}, {1, 7}], 
          UndirectedEdge[{2, 6}, {1, 8}], 
          UndirectedEdge[{2, 6}, {3, 8}], 
          UndirectedEdge[{2, 6}, {4, 7}], 
          UndirectedEdge[{2, 7}, {3, 5}], 
          UndirectedEdge[{2, 8}, {1, 6}], 
          UndirectedEdge[{3, 1}, {1, 2}], 
          UndirectedEdge[{3, 1}, {2, 3}], 
          UndirectedEdge[{3, 1}, {4, 3}], 
          UndirectedEdge[{3, 2}, {1, 1}], 
          UndirectedEdge[{3, 2}, {1, 3}], 
          UndirectedEdge[{3, 2}, {2, 4}], 
          UndirectedEdge[{3, 2}, {4, 4}], 
          UndirectedEdge[{3, 2}, {5, 3}], 
          UndirectedEdge[{3, 3}, {1, 4}], 
          UndirectedEdge[{3, 3}, {2, 1}], 
          UndirectedEdge[{3, 3}, {2, 5}], 
          UndirectedEdge[{3, 3}, {4, 1}], 
          UndirectedEdge[{3, 3}, {4, 5}], 
          UndirectedEdge[{3, 3}, {5, 4}], 
          UndirectedEdge[{3, 4}, {1, 5}], 
          UndirectedEdge[{3, 4}, {2, 2}], 
          UndirectedEdge[{3, 4}, {2, 6}], 
          UndirectedEdge[{3, 4}, {4, 6}], 
          UndirectedEdge[{3, 4}, {5, 5}], 
          UndirectedEdge[{3, 5}, {1, 4}], 
          UndirectedEdge[{3, 5}, {1, 6}], 
          UndirectedEdge[{3, 5}, {4, 3}], 
          UndirectedEdge[{3, 5}, {4, 7}], 
          UndirectedEdge[{3, 6}, {1, 7}], 
          UndirectedEdge[{3, 6}, {2, 4}], 
          UndirectedEdge[{3, 6}, {2, 8}], 
          UndirectedEdge[{3, 6}, {4, 8}], 
          UndirectedEdge[{3, 7}, {1, 8}], 
          UndirectedEdge[{3, 7}, {2, 5}], 
          UndirectedEdge[{4, 2}, {2, 1}], 
          UndirectedEdge[{4, 2}, {2, 3}], 
          UndirectedEdge[{4, 2}, {3, 4}], 
          UndirectedEdge[{4, 3}, {2, 2}], 
          UndirectedEdge[{4, 4}, {2, 3}], 
          UndirectedEdge[{4, 4}, {2, 5}], 
          UndirectedEdge[{4, 4}, {3, 6}], 
          UndirectedEdge[{4, 4}, {5, 6}], 
          UndirectedEdge[{4, 5}, {2, 6}], 
          UndirectedEdge[{4, 5}, {3, 7}], 
          UndirectedEdge[{4, 5}, {6, 6}], 
          UndirectedEdge[{4, 6}, {2, 5}], 
          UndirectedEdge[{4, 6}, {2, 7}], 
          UndirectedEdge[{4, 6}, {3, 8}], 
          UndirectedEdge[{4, 6}, {6, 7}], 
          UndirectedEdge[{4, 7}, {2, 8}], 
          UndirectedEdge[{4, 8}, {2, 7}], 
          UndirectedEdge[{5, 1}, {3, 2}], 
          UndirectedEdge[{5, 1}, {4, 3}], 
          UndirectedEdge[{5, 2}, {3, 1}], 
          UndirectedEdge[{5, 2}, {3, 3}], 
          UndirectedEdge[{5, 2}, {4, 4}], 
          UndirectedEdge[{5, 3}, {3, 4}], 
          UndirectedEdge[{5, 3}, {4, 1}], 
          UndirectedEdge[{5, 3}, {4, 5}], 
          UndirectedEdge[{5, 3}, {6, 1}], 
          UndirectedEdge[{5, 3}, {6, 5}], 
          UndirectedEdge[{5, 3}, {7, 4}], 
          UndirectedEdge[{5, 4}, {3, 5}], 
          UndirectedEdge[{5, 4}, {4, 2}], 
          UndirectedEdge[{5, 4}, {4, 6}], 
          UndirectedEdge[{5, 4}, {6, 6}], 
          UndirectedEdge[{5, 4}, {7, 5}], 
          UndirectedEdge[{5, 5}, {3, 6}], 
          UndirectedEdge[{5, 5}, {4, 3}], 
          UndirectedEdge[{5, 5}, {4, 7}], 
          UndirectedEdge[{5, 5}, {6, 7}], 
          UndirectedEdge[{5, 5}, {7, 6}], 
          UndirectedEdge[{5, 6}, {3, 5}], 
          UndirectedEdge[{5, 6}, {3, 7}], 
          UndirectedEdge[{5, 6}, {4, 8}], 
          UndirectedEdge[{5, 6}, {7, 7}], 
          UndirectedEdge[{5, 7}, {3, 6}], 
          UndirectedEdge[{5, 7}, {3, 8}], 
          UndirectedEdge[{5, 7}, {4, 5}], 
          UndirectedEdge[{5, 7}, {6, 5}], 
          UndirectedEdge[{5, 7}, {7, 8}], 
          UndirectedEdge[{5, 8}, {3, 7}], 
          UndirectedEdge[{5, 8}, {4, 6}], 
          UndirectedEdge[{6, 1}, {4, 2}], 
          UndirectedEdge[{6, 2}, {4, 1}], 
          UndirectedEdge[{6, 2}, {4, 3}], 
          UndirectedEdge[{6, 2}, {5, 4}], 
          UndirectedEdge[{6, 2}, {7, 4}], 
          UndirectedEdge[{6, 2}, {8, 3}], 
          UndirectedEdge[{6, 3}, {4, 2}], 
          UndirectedEdge[{6, 3}, {4, 4}], 
          UndirectedEdge[{6, 3}, {5, 1}], 
          UndirectedEdge[{6, 3}, {5, 5}], 
          UndirectedEdge[{6, 3}, {8, 2}], 
          UndirectedEdge[{6, 3}, {8, 4}], 
          UndirectedEdge[{6, 4}, {4, 3}], 
          UndirectedEdge[{6, 4}, {4, 5}], 
          UndirectedEdge[{6, 4}, {5, 2}], 
          UndirectedEdge[{6, 4}, {5, 6}], 
          UndirectedEdge[{6, 4}, {7, 2}], 
          UndirectedEdge[{6, 4}, {7, 6}], 
          UndirectedEdge[{6, 4}, {8, 3}], 
          UndirectedEdge[{6, 4}, {8, 5}], 
          UndirectedEdge[{6, 5}, {4, 4}], 
          UndirectedEdge[{6, 5}, {4, 6}], 
          UndirectedEdge[{6, 5}, {7, 7}], 
          UndirectedEdge[{6, 6}, {4, 7}], 
          UndirectedEdge[{6, 6}, {5, 8}], 
          UndirectedEdge[{6, 6}, {8, 7}], 
          UndirectedEdge[{6, 7}, {4, 8}], 
          UndirectedEdge[{6, 7}, {8, 8}], 
          UndirectedEdge[{6, 8}, {4, 7}], 
          UndirectedEdge[{6, 8}, {5, 6}], 
          UndirectedEdge[{7, 1}, {5, 2}], 
          UndirectedEdge[{7, 1}, {6, 3}], 
          UndirectedEdge[{7, 2}, {5, 1}], 
          UndirectedEdge[{7, 2}, {5, 3}], 
          UndirectedEdge[{7, 3}, {5, 2}], 
          UndirectedEdge[{7, 3}, {5, 4}], 
          UndirectedEdge[{7, 3}, {6, 1}], 
          UndirectedEdge[{7, 3}, {6, 5}], 
          UndirectedEdge[{7, 3}, {8, 1}], 
          UndirectedEdge[{7, 4}, {5, 5}], 
          UndirectedEdge[{7, 4}, {6, 6}], 
          UndirectedEdge[{7, 4}, {8, 2}], 
          UndirectedEdge[{7, 4}, {8, 6}], 
          UndirectedEdge[{7, 5}, {5, 6}], 
          UndirectedEdge[{7, 5}, {6, 3}], 
          UndirectedEdge[{7, 5}, {6, 7}], 
          UndirectedEdge[{7, 5}, {8, 7}], 
          UndirectedEdge[{7, 6}, {5, 7}], 
          UndirectedEdge[{7, 6}, {6, 8}], 
          UndirectedEdge[{7, 6}, {8, 8}], 
          UndirectedEdge[{7, 7}, {5, 8}], 
          UndirectedEdge[{7, 8}, {6, 6}], 
          UndirectedEdge[{7, 8}, {8, 6}], 
          UndirectedEdge[{8, 1}, {6, 2}], 
          UndirectedEdge[{8, 2}, {6, 1}], 
          UndirectedEdge[{8, 3}, {7, 1}], 
          UndirectedEdge[{8, 3}, {7, 5}], 
          UndirectedEdge[{8, 4}, {6, 5}], 
          UndirectedEdge[{8, 4}, {7, 2}], 
          UndirectedEdge[{8, 4}, {7, 6}], 
          UndirectedEdge[{8, 5}, {6, 6}], 
          UndirectedEdge[{8, 5}, {7, 3}], 
          UndirectedEdge[{8, 5}, {7, 7}], 
          UndirectedEdge[{8, 6}, {6, 5}], 
          UndirectedEdge[{8, 6}, {6, 7}], 
          UndirectedEdge[{8, 7}, {6, 8}]}], $CellContext`deleteKnightPaths[
         Pattern[$CellContext`knightpaths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := 
       Select[$CellContext`knightpaths, $CellContext`pawnMemberTest[#, \
$CellContext`pawns]& ], $CellContext`pawnMemberTest[
         Pattern[$CellContext`knight, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]]] := FreeQ[
         Map[FreeQ[$CellContext`knight, #]& , $CellContext`pawns], 
         False], $CellContext`createKnightNetwork[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]], 
         Pattern[$CellContext`boardsize, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Block[{$CellContext`beenhere = {}}, 
         Union[
          Flatten[
           $CellContext`recursiveCreateKnightNetwork[$CellContext`boardsize, \
{$CellContext`x, $CellContext`y}, {}, $CellContext`pawns, \
$CellContext`knightmoves]]]], $CellContext`recursiveCreateKnightNetwork[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := 
       Module[{$CellContext`newmoves, $CellContext`newpaths}, \
$CellContext`newmoves = $CellContext`findMoves[{$CellContext`n, \
$CellContext`m}, {$CellContext`x, $CellContext`y}, $CellContext`pawns, \
$CellContext`knightmoves]; 
         AppendTo[$CellContext`beenhere, {$CellContext`x, $CellContext`y}]; 
         If[$CellContext`newmoves === {}, $CellContext`paths, \
$CellContext`newpaths = 
            Map[UndirectedEdge[{$CellContext`x, $CellContext`y}, #]& , \
$CellContext`newmoves]; $CellContext`newpaths = 
            Join[$CellContext`paths, $CellContext`newpaths]; 
           Map[$CellContext`recursiveCreateKnightNetwork[{$CellContext`n, \
$CellContext`m}, #, $CellContext`newpaths, $CellContext`pawns, \
$CellContext`knightmoves]& , $CellContext`newmoves]]], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]]]& ], $CellContext`findMoves[{
          Pattern[$CellContext`n, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]]}, {
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]]}, 
         Pattern[$CellContext`paths, 
          Blank[]], 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`knightmoves, 
          Blank[]]] := Select[
         Map[{$CellContext`x, $CellContext`y} + #& , \
$CellContext`knightmoves], And[
          $CellContext`squareOnBoard[#, $CellContext`n, $CellContext`m], 
          Not[
           MemberQ[$CellContext`beenhere, #]], 
          Not[
           MemberQ[
            $CellContext`deleteKnightPaths[$CellContext`paths, \
$CellContext`pawns], #]]]& ], $CellContext`squareOnBoard[{
          Pattern[$CellContext`a, 
           Blank[Integer]], 
          Pattern[$CellContext`b, 
           Blank[Integer]]}, 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`m, 
          Blank[]]] := If[
         Inequality[0, Less, $CellContext`a, LessEqual, $CellContext`n], 
         If[
          Inequality[0, Less, $CellContext`b, LessEqual, $CellContext`m], 
          True, False], False], $CellContext`vert = {{1, 1}, {1, 2}, {1, 3}, {
        1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {2, 1}, {2, 2}, {2, 3}, {2, 
        4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {
        3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 
        5}, {4, 6}, {4, 7}, {4, 8}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {
        5, 6}, {5, 7}, {5, 8}, {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 
        6}, {6, 7}, {6, 8}, {7, 1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {
        7, 7}, {7, 8}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 
        7}, {8, 8}}, $CellContext`board[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            Which[
             MemberQ[$CellContext`moves, {$CellContext`x, $CellContext`y}], 
             Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Text[
            Style["X", Large, Bold, 
             RGBColor[169/255, 15/255, 13/255], FontFamily -> "Arial"], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, -1]]], Thick, Dashed, 
           Arrow[
            Map[{
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}& , $CellContext`moves]], 
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style["\[BlackKnight]", Large, Black], 
            ({
              Part[#, 1], 8 - Part[#, 2]} + {-0.5, 0.5}& )[
             Part[$CellContext`moves, 1]]]}]], $CellContext`simpleBoard[{
          Pattern[$CellContext`n, 
           Blank[Integer]], 
          Pattern[$CellContext`m, 
           Blank[Integer]]}, 
         Pattern[$CellContext`pawns, 
          Blank[]], 
         Pattern[$CellContext`text, 
          Blank[]], 
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`y1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]], 
         Pattern[$CellContext`y2, 
          Blank[]]] := Show[
         MatrixPlot[
          Table[
           Table[
            
            Which[{$CellContext`x, $CellContext`y} === {$CellContext`x1, \
$CellContext`y1}, 
             Pink, {$CellContext`x, $CellContext`y} === {$CellContext`x2, \
$CellContext`y2}, Pink, 
             EvenQ[$CellContext`x + $CellContext`y], 
             RGBColor[200/255, 255/255, 165/255], 
             OddQ[$CellContext`x + $CellContext`y], 
             RGBColor[37/255, 93/255, 0]], {$CellContext`x, 
             1, $CellContext`n}], {$CellContext`y, 1, $CellContext`m}], 
          FrameTicks -> None], 
         Graphics[{
           Map[Text[
             Style["\[BlackPawn]", Large, Black], {
               Part[#, 1], 8 - Part[#, 2]} + {-0.5, 
              0.5}]& , $CellContext`pawns], 
           Text[
            Style[$CellContext`text, FontSize -> 30], {4, 4}, Background -> 
            White], 
           Text[
            Style[
            "\[BlackKnight]", Large, 
             Black], {$CellContext`x1, 8 - $CellContext`y1} + {-0.5, 
             0.5}]}]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1878217548]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "To find the shortest path, the Demonstration takes the square the knight is \
on and uses it to create a graph of all of the paths the knight can take, \
removing any paths that connect to squares containing pawns. Then the \
Demonstration calls ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built-in ",
 StyleBox["FindShortestPath", "MR"],
 " function to find the path the knight should take and finds those squares \
on the chessboard to output the highlighted path. The graph of the knight's \
paths changes every time a new pawn configuration is created."
}], "DetailNotes",
 CellChangeTimes->{{3.5830604057960205`*^9, 3.583060563092531*^9}, {
   3.5830606091910243`*^9, 3.583060629954847*^9}, {3.583074014571504*^9, 
   3.583074014805503*^9}, {3.583150852585267*^9, 3.583150864504401*^9}, {
   3.583509702971938*^9, 3.5835097234359384`*^9}, 3.5835097922189384`*^9},
 CellID->435365090]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["chess", "SearchTerms",
 CellChangeTimes->{{3.5830607099992876`*^9, 3.58306071432055*^9}},
 CellID->488608970],

Cell["knight", "SearchTerms",
 CellChangeTimes->{{3.5830607162549543`*^9, 3.5830607168945613`*^9}},
 CellID->915064353],

Cell["shortest path", "SearchTerms",
 CellChangeTimes->{{3.5830607206230187`*^9, 3.583060722807041*^9}},
 CellID->196031597],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Summer Camp"
}], "SearchTerms",
 CellID->664411987]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["The Knight's Tour",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/TheKnightsTour/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/TheKnightsTour/"]], "RelatedLinks",
 CellChangeTimes->{{3.5830608786858845`*^9, 3.583060901555731*^9}},
 CellID->971437205],

Cell[TextData[ButtonBox["Knight Graph",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/KnightGraph.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/KnightGraph.html"]], "RelatedLinks",\

 CellChangeTimes->{{3.5830610057960567`*^9, 3.583061015624151*^9}},
 CellID->1861396],

Cell[TextData[ButtonBox["Beautiful Designs Made from the Knight's Tour",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
BeautifulDesignsMadeFromTheKnightsTour/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/BeautifulDesignsMadeFromTheKnightsTour/"]\
], "RelatedLinks",
 CellChangeTimes->{{3.5830611567276716`*^9, 3.5830611635917377`*^9}},
 CellID->78061458]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Taylor McCreary",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Taylor+\
McCreary"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Taylor+McCreary"]
}], "Author",
 CellChangeTimes->{{3.583061505428025*^9, 3.5830615082204556`*^9}}],

Cell[TextData[{
 "(",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Summer Camp 2013)"
}], "Author",
 CellChangeTimes->{{3.583061552056926*^9, 3.583061559747789*^9}},
 CellID->15407165]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{834, 915},
WindowMargins->{{163, Automatic}, {Automatic, -11}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[221558, 5361, 312, 8, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[221873, 5371, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[222554, 5389, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[222897, 5402, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[223537, 5419, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[224384, 5442, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[224756, 5453, 1464, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[226223, 5486, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 229864, 5607},
 {"RotateAndZoomIn3D", 229974, 5610},
 {"DragLocators", 230085, 5613},
 {"CreateAndDeleteLocators", 230202, 5616},
 {"SliderZoom", 230317, 5619},
 {"GamepadControls", 230424, 5622},
 {"AutomaticAnimation", 230538, 5625},
 {"BookmarkAnimation", 230656, 5628}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 103, 1, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[707, 27, 33, 0, 287, "InitializationSection"],
Cell[743, 29, 19287, 511, 1886, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellID->173234154],
Cell[20033, 542, 272, 8, 24, "Input",
 InitializationCell->True,
 CellID->581163151]
}, Closed]],
Cell[CellGroupData[{
Cell[20342, 555, 29, 0, 194, "ManipulateSection"],
Cell[CellGroupData[{
Cell[20396, 559, 13407, 272, 1048, "Input",
 CellID->753933074],
Cell[33806, 833, 27422, 633, 559, "Output",
 CellID->535188881]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61274, 1472, 36, 0, 169, "ManipulateCaptionSection"],
Cell[61313, 1474, 739, 12, 67, "ManipulateCaption",
 CellID->38289278]
}, Open  ]],
Cell[CellGroupData[{
Cell[62089, 1491, 28, 0, 173, "ThumbnailSection"],
Cell[62120, 1493, 35616, 848, 559, "Output",
 CellID->1258009331]
}, Open  ]],
Cell[CellGroupData[{
Cell[97773, 2346, 28, 0, 143, "SnapshotsSection"],
Cell[97804, 2348, 27455, 633, 559, "Output",
 CellID->1386321402],
Cell[125262, 2983, 48206, 1187, 559, "Output",
 CellID->1853717111],
Cell[173471, 4172, 47025, 1158, 559, "Output",
 CellID->1878217548]
}, Open  ]],
Cell[CellGroupData[{
Cell[220533, 5335, 26, 0, 336, "DetailsSection"],
Cell[220562, 5337, 919, 17, 83, "DetailNotes",
 CellID->435365090]
}, Open  ]],
Cell[CellGroupData[{
Cell[221518, 5359, 37, 0, 126, "ControlSuggestionsSection"],
Cell[221558, 5361, 312, 8, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[221873, 5371, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[222554, 5389, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[222897, 5402, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[223537, 5419, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[224384, 5442, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[224756, 5453, 1464, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[226223, 5486, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227168, 5512, 30, 0, 155, "SearchTermsSection"],
Cell[227201, 5514, 115, 2, 22, "SearchTerms",
 CellID->488608970],
Cell[227319, 5518, 119, 2, 22, "SearchTerms",
 CellID->915064353],
Cell[227441, 5522, 124, 2, 22, "SearchTerms",
 CellID->196031597],
Cell[227568, 5526, 119, 5, 22, "SearchTerms",
 CellID->664411987]
}, Open  ]],
Cell[CellGroupData[{
Cell[227724, 5536, 31, 0, 141, "RelatedLinksSection"],
Cell[227758, 5538, 327, 7, 22, "RelatedLinks",
 CellID->971437205],
Cell[228088, 5547, 311, 7, 22, "RelatedLinks",
 CellID->1861396],
Cell[228402, 5556, 408, 9, 22, "RelatedLinks",
 CellID->78061458]
}, Open  ]],
Cell[CellGroupData[{
Cell[228847, 5570, 25, 0, 141, "AuthorSection"],
Cell[228875, 5572, 370, 10, 22, "Author"],
Cell[229248, 5584, 191, 7, 22, "Author",
 CellID->15407165]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
