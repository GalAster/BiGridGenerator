(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    211175,       4692]
NotebookOptionsPosition[    207090,       4552]
NotebookOutlinePosition[    207448,       4568]
CellTagsIndexPosition[    207405,       4565]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.699820208559021*^9, 3.699820209287758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Inner", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"100000", ",", "100"}], "}"}]}], "]"}], ",", 
     RowBox[{"1.", "/", 
      RowBox[{"Range", "[", "100", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{"data", ",", "40", ",", "\"\<Probability\>\"", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "60"}]}], "]"}], "\n", 
 RowBox[{"FindDistribution", "[", 
  RowBox[{"data", ",", 
   RowBox[{"TargetFunctions", "\[Rule]", 
    RowBox[{"{", "NormalDistribution", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.699651923140543*^9, 3.6996519742408113`*^9}, {
   3.6996520717366867`*^9, 3.6996520842026567`*^9}, 3.699676082881646*^9, {
   3.699676263615205*^9, 3.6996762686433716`*^9}, {3.69981984958856*^9, 
   3.69981985433354*^9}, {3.6998199682212543`*^9, 3.6998200577575865`*^9}, {
   3.6998200885497108`*^9, 3.6998201592250333`*^9}, {3.699820215561899*^9, 
   3.699820233094675*^9}, {3.699820347396434*^9, 3.6998203496777706`*^9}, {
   3.699823357195359*^9, 3.6998233702942305`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.413], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.413], Thickness[Small]}], 
     {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{-3.8, 0}, {-3.6, 0.00001},
       RoundingRadius->0]}, 
     {RGBColor[0.829938, 0.725154, 1], RectangleBox[{-3.6, 0}, {-3.4, 0.0001},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.511666, 0.141085], RectangleBox[{-3.4, 0}, {-3.2, 0.00033},
       RoundingRadius->0]}, 
     {RGBColor[0.566842, 0.967407, 1], RectangleBox[{-3.2, 0}, {-3., 0.00104},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.926772, 0.151904], RectangleBox[{-3., 0}, {-2.8, 0.00235},
       RoundingRadius->0]}, 
     {GrayLevel[1], RectangleBox[{-2.8, 0}, {-2.6, 0.00563},
       RoundingRadius->0]}, 
     {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{-2.6, 0}, {-2.4, 0.00992},
       RoundingRadius->0]}, 
     {RGBColor[0.4, 0.8, 1], RectangleBox[{-2.4, 0}, {-2.2, 0.01467},
       RoundingRadius->0]}, 
     {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{-2.2, 0}, {-2., 0.02221},
       RoundingRadius->0]}, 
     {RGBColor[0.790433, 0.450294, 1], RectangleBox[{-2., 0}, {-1.8, 0.02887},
       RoundingRadius->0]}, 
     {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{-1.8, 0}, {-1.6, 0.03523},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{-1.6, 0}, {-1.4, 0.04021},
       RoundingRadius->0]}, 
     {RGBColor[1, 1, 0.392157], RectangleBox[{-1.4, 0}, {-1.2, 0.04545},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{-1.2, 0}, {-1., 0.04861},
       RoundingRadius->0]}, 
     {RGBColor[0.545876, 1, 0.558755], RectangleBox[{-1., 0}, {-0.8, 0.04916},
       RoundingRadius->0]}, 
     {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{-0.8, 0}, {-0.6, 0.04911},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.8, 0.4], RectangleBox[{-0.6, 0}, {-0.4, 0.05035},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{-0.4, 0}, {-0.2, 0.05011},
       RoundingRadius->0]}, 
     {RGBColor[1, 0, 1], RectangleBox[{-0.2, 0}, {0., 0.04932},
       RoundingRadius->0]}, 
     {RGBColor[0.563638, 0.606256, 0.935851], RectangleBox[{0., 0}, {0.2, 0.05003},
       RoundingRadius->0]}, 
     {RGBColor[0.868772, 0.73959, 0.218616], RectangleBox[{0.2, 0}, {0.4, 0.05019},
       RoundingRadius->0]}, 
     {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{0.4, 0}, {0.6, 0.0496},
       RoundingRadius->0]}, 
     {RGBColor[0.829938, 0.725154, 1], RectangleBox[{0.6, 0}, {0.8, 0.04942},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.511666, 0.141085], RectangleBox[{0.8, 0}, {1., 0.04776},
       RoundingRadius->0]}, 
     {RGBColor[0.566842, 0.967407, 1], RectangleBox[{1., 0}, {1.2, 0.0472},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.926772, 0.151904], RectangleBox[{1.2, 0}, {1.4, 0.04344},
       RoundingRadius->0]}, 
     {GrayLevel[1], RectangleBox[{1.4, 0}, {1.6, 0.04031},
       RoundingRadius->0]}, 
     {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{1.6, 0}, {1.8, 0.03625},
       RoundingRadius->0]}, 
     {RGBColor[0.4, 0.8, 1], RectangleBox[{1.8, 0}, {2., 0.02849},
       RoundingRadius->0]}, 
     {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{2., 0}, {2.2, 0.02087},
       RoundingRadius->0]}, 
     {RGBColor[0.790433, 0.450294, 1], RectangleBox[{2.2, 0}, {2.4, 0.01485},
       RoundingRadius->0]}, 
     {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{2.4, 0}, {2.6, 0.00948},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{2.6, 0}, {2.8, 0.00546},
       RoundingRadius->0]}, 
     {RGBColor[1, 1, 0.392157], RectangleBox[{2.8, 0}, {3., 0.00257},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{3., 0}, {3.2, 0.00099},
       RoundingRadius->0]}, 
     {RGBColor[0.545876, 1, 0.558755], RectangleBox[{3.2, 0}, {3.4, 0.00034},
       RoundingRadius->0]}, 
     {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{3.4, 0}, {3.6, 0.00004},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.8, 0.4], RectangleBox[{3.6, 0}, {3.8, 0.00002},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{3.8, 0}, {4., 0.00001},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.956, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3.8, 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.699651927108161*^9, 3.6996519765938997`*^9}, {
   3.6996520789007173`*^9, 3.6996520912170935`*^9}, 3.6996760890873194`*^9, 
   3.699676270790881*^9, {3.6998199634341836`*^9, 3.6998200066496315`*^9}, {
   3.699820047822197*^9, 3.699820177983807*^9}, 3.699820223153655*^9, 
   3.6998202724505525`*^9, 3.6998203584188824`*^9, 3.6998233638325725`*^9}],

Cell[BoxData[
 RowBox[{"MixtureDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.60329679439769`", ",", "0.39670320560231015`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       RowBox[{"-", "0.7922669427153121`"}], ",", "0.9858499131622424`"}], 
      "]"}], ",", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1.3360175599992203`", ",", "0.7480561903432668`"}], "]"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.699651927108161*^9, 3.6996519765938997`*^9}, {
   3.6996520789007173`*^9, 3.6996520912170935`*^9}, 3.6996760890873194`*^9, 
   3.699676270790881*^9, {3.6998199634341836`*^9, 3.6998200066496315`*^9}, {
   3.699820047822197*^9, 3.699820177983807*^9}, 3.699820223153655*^9, 
   3.6998202724505525`*^9, 3.6998203584188824`*^9, 3.699823364946379*^9}]
}, Open  ]],

Cell[BoxData["\:968f\:673a\:5411\:91cf"], "Input",
 CellChangeTimes->{{3.6997024290222273`*^9, 3.699702432362276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", 
    RowBox[{"1", "/", "2"}], "]"}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.699702596647424*^9, 3.6997026257662582`*^9}, {
  3.6997032109627047`*^9, 3.6997032122749147`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{
         RowBox[{"k", "\[Equal]", "0"}], "||", 
         RowBox[{"k", "\[Equal]", "1"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699702586820301*^9, 3.699702626409576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xd", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"yd", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["s2", "2"], ",", 
         RowBox[{
          RowBox[{"k", "\[Equal]", 
           RowBox[{"-", "1"}]}], "||", 
          RowBox[{"k", "\[Equal]", "1"}]}]}], "}"}], "}"}], ",", "0"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.699702641329173*^9, 3.6997026801751766`*^9}, {
   3.6997033101005287`*^9, 3.699703345938883*^9}, 3.699703659312379*^9},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox["s1", "2"], 
          RowBox[{
           RowBox[{"\[FormalX]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "||", 
           RowBox[{"\[FormalX]", "\[Equal]", "1"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6997026373541503`*^9, 3.699702680520981*^9}, {
  3.6997033203987784`*^9, 3.699703346502654*^9}}],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox["s2", "2"], 
          RowBox[{
           RowBox[{"\[FormalX]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "||", 
           RowBox[{"\[FormalX]", "\[Equal]", "1"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6997026373541503`*^9, 3.699702680520981*^9}, {
  3.6997033203987784`*^9, 3.699703346527674*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", "xd"}], ",", 
     RowBox[{"y", "\[Distributed]", "yd"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6997032770942287`*^9, {3.699703349904986*^9, 3.6997033666482267`*^9}}],

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox["s1", "2"], 
               RowBox[{
                RowBox[{"\[FormalX]", "\[Equal]", 
                 RowBox[{"-", "1"}]}], "||", 
                RowBox[{"\[FormalX]", "\[Equal]", "1"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalX]", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"y", "\[Distributed]", 
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox["s2", "2"], 
               RowBox[{
                RowBox[{"\[FormalX]", "\[Equal]", 
                 RowBox[{"-", "1"}]}], "||", 
                RowBox[{"\[FormalX]", "\[Equal]", "1"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalX]", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
       "]"}]}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.699703353493823*^9, 3.6997033670935545`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CharacteristicFunction", "[", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", 
    RowBox[{"1", "/", "2"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6997035043568277`*^9, 3.6997036035425878`*^9, {3.6997050417718906`*^9, 
   3.6997050424121037`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]], "2"]}]], "Output",
 CellChangeTimes->{{3.699703499560995*^9, 3.6997035051529026`*^9}, 
   3.699703604938774*^9, 3.699705042907937*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierSequenceTransform", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["s1", "2"], ",", 
        RowBox[{
         RowBox[{"k", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"k", "\[Equal]", "1"}]}]}], "}"}], "}"}], ",", "0"}], "]"}], 
   ",", "k", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"s1", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997036459586477`*^9, 3.6997036770021095`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]]}], ")"}], " ", 
  "s1"}]], "Output",
 CellChangeTimes->{3.699703677598177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "t"}]]}], ")"}], " ", "s1"}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"s1", " ", 
  RowBox[{"Cos", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.699703686329051*^9}]
}, Open  ]],

Cell[BoxData["BinomialDistribution"], "Input",
 CellChangeTimes->{{3.6997051024376717`*^9, 3.6997051047733736`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"3", ",", 
      RowBox[{"1", "/", "2"}]}], "]"}], ",", "k"}], "]"}], "//", 
  "PiecewiseExpand"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "20"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6997051234334726`*^9, 3.6997051584016266`*^9}, {
   3.699705214996373*^9, 3.699705236104128*^9}, 3.69970526692673*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "8"], " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{"3", ",", "k"}], "]"}]}], 
        RowBox[{"0", "\[LessEqual]", "k", "\[LessEqual]", "3"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6997051263501225`*^9, 3.6997051614638786`*^9}, {
   3.699705233443674*^9, 3.699705236436792*^9}, 3.699705267287388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "8"], ",", 
   FractionBox["3", "8"], ",", 
   FractionBox["1", "8"], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6997051263501225`*^9, 3.6997051614638786`*^9}, {
   3.699705233443674*^9, 3.699705236436792*^9}, 3.699705267311904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"InverseFourierSequenceTransform", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "^", "3"}]}], ",", "t", ",", 
    RowBox[{"-", "k"}]}], "]"}], "//", 
  "PiecewiseExpand"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"x", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6997037432434726`*^9, 3.6997037880874867`*^9}, 
   3.6997038625410523`*^9, {3.6997041182635326`*^9, 3.699704153799111*^9}, {
   3.699704295511569*^9, 3.6997043103234973`*^9}, {3.699704392203747*^9, 
   3.6997044239039855`*^9}, {3.6997049234081707`*^9, 3.699705022461795*^9}, {
   3.6997050607035074`*^9, 3.699705081364264*^9}, {3.6997051370804987`*^9, 
   3.6997051425229692`*^9}, 3.6997051972460737`*^9, 3.6997052626857333`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["x", "8"], 
        RowBox[{
         RowBox[{"k", "\[Equal]", 
          RowBox[{"-", "3"}]}], "||", 
         RowBox[{"k", "\[Equal]", "3"}]}]},
       {
        FractionBox[
         RowBox[{"3", " ", "x"}], "8"], 
        RowBox[{
         RowBox[{"k", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"k", "\[Equal]", "1"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6997042965515356`*^9, 3.699704310996311*^9}, {
   3.699704397632353*^9, 3.699704424907347*^9}, {3.6997049337943254`*^9, 
   3.699705023191372*^9}, {3.6997050628950124`*^9, 3.699705081993621*^9}, 
   3.699705144466855*^9, 3.6997051982053947`*^9, 3.699705263254723*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-5., 0.}, {-5., 0}}, {{-4., 0.}, {-4., 0}}, {{-2., 
         0.}, {-2., 0}}, {{0., 0.}, {0., 0}}, {{2., 0.}, {2., 0}}, {{4., 
         0.}, {4., 0}}, {{5., 0.}, {5., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{-3., 0.125}, {-3., 0}}, {{-1., 0.375}, {-1., 0}}, {{1., 
         0.375}, {1., 0}}, {{3., 0.125}, {3., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{-5., 0.}, {-4., 0.}, {-3., 0.125}, {-2., 0.}, {-1., 0.375}, {
     0., 0.}, {1., 0.375}, {2., 0.}, {3., 0.125}, {4., 0.}, {5., 0.}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-5, 5}, {0, 0.375}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6997042965515356`*^9, 3.699704310996311*^9}, {
   3.699704397632353*^9, 3.699704424907347*^9}, {3.6997049337943254`*^9, 
   3.699705023191372*^9}, {3.6997050628950124`*^9, 3.699705081993621*^9}, 
   3.699705144466855*^9, 3.6997051982053947`*^9, 3.699705263385315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699704328123686*^9, 3.6997043453326902`*^9}, {
  3.6997043767867074`*^9, 3.699704380422413*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["1", "8"], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "k"}], "\[Equal]", 
          RowBox[{"-", "2"}]}], "||", 
         RowBox[{
          RowBox[{"-", "k"}], "\[Equal]", "2"}]}]},
       {
        FractionBox["1", "4"], 
        RowBox[{
         RowBox[{"-", "k"}], "\[Equal]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.699704319428892*^9, 3.699704345911087*^9}, 
   3.699704378836753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"i", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], "^", "n"}]}]], "Input",
 CellChangeTimes->{{3.6997037551284018`*^9, 3.699703757052289*^9}, {
  3.699703813965854*^9, 3.699703854325061*^9}, {3.6997041488773828`*^9, 
  3.6997041489714656`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cos", "[", "t", "]"}], "n"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"n", "!"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.6997038548464727`*^9, 3.699704149526232*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IFST", "[", "n_", "]"}], ":=", 
  RowBox[{"InverseFourierSequenceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"s", ",", "#"}], "]"}], "&"}], ",", "n"}], "]"}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "^", "n"}]}], ",", "t", ",", 
    RowBox[{"-", "k"}], ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69970443959286*^9, 3.699704445272212*^9}, {
   3.6997044935170164`*^9, 3.6997045088278093`*^9}, 3.6997045468324623`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6997044687262278`*^9, 3.6997044917421*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"IFST", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6997045117424836`*^9, 3.6997045178495197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           SubscriptBox["s", "1"], "2"], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "1"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "1"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            SubscriptBox["s", "1"], " ", 
            SubscriptBox["s", "2"]}], "4"], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "2"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "2"}]}]},
         {
          FractionBox[
           RowBox[{
            SubscriptBox["s", "1"], " ", 
            SubscriptBox["s", "2"]}], "2"], 
          RowBox[{
           RowBox[{"-", "k"}], "\[Equal]", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "8"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "3"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "3"}]}]},
         {
          RowBox[{
           FractionBox["3", "8"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "1"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "1"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "16"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "4"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "4"}]}]},
         {
          RowBox[{
           FractionBox["1", "4"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "2"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "2"}]}]},
         {
          RowBox[{
           FractionBox["3", "8"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"]}], 
          RowBox[{
           RowBox[{"-", "k"}], "\[Equal]", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "32"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"], " ", 
           SubscriptBox["s", "5"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "5"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "5"}]}]},
         {
          RowBox[{
           FractionBox["5", "32"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"], " ", 
           SubscriptBox["s", "5"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "3"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "3"}]}]},
         {
          RowBox[{
           FractionBox["5", "16"], " ", 
           SubscriptBox["s", "1"], " ", 
           SubscriptBox["s", "2"], " ", 
           SubscriptBox["s", "3"], " ", 
           SubscriptBox["s", "4"], " ", 
           SubscriptBox["s", "5"]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", 
            RowBox[{"-", "1"}]}], "||", 
           RowBox[{
            RowBox[{"-", "k"}], "\[Equal]", "1"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.699704519152568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierSequenceTransform", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], "^", "2"}]}], ",", "t", ",", 
   RowBox[{"-", "k"}], ",", 
   RowBox[{"GenerateConditions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997045570729656`*^9, 3.699704557869779*^9}, {
  3.6997045991321335`*^9, 3.6997046170929375`*^9}, {3.69970465899055*^9, 
  3.699704662382513*^9}, {3.6997047314005747`*^9, 3.699704765271476*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["x", "4"], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "k"}], "\[Equal]", 
          RowBox[{"-", "2"}]}], "||", 
         RowBox[{
          RowBox[{"-", "k"}], "\[Equal]", "2"}]}]},
       {
        FractionBox["x", "2"], 
        RowBox[{
         RowBox[{"-", "k"}], "\[Equal]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6997045999118795`*^9, 3.699704620122701*^9}, 
   3.699704664097784*^9, {3.699704741349079*^9, 3.699704766086053*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integrate", "["}]], "Input",
 CellChangeTimes->{{3.699704709464059*^9, 3.699704712292822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6997523488601465`*^9, 3.6997524605066433`*^9}, {
   3.69975249650977*^9, 3.699752533348237*^9}, 3.699752575416835*^9, 
   3.699752613413687*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["z", 
      RowBox[{"11", "/", "6"}]]}]], "+", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["z", 
      RowBox[{"7", "/", "6"}]]}]], "+", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["z", 
      RowBox[{"5", "/", "6"}]]}]], "+", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["z", 
      RowBox[{"1", "/", "6"}]]}]], "+", 
   FractionBox[
    SuperscriptBox["z", 
     RowBox[{"1", "/", "6"}]], "8"], "+", 
   FractionBox[
    SuperscriptBox["z", 
     RowBox[{"5", "/", "6"}]], "8"], "+", 
   FractionBox[
    SuperscriptBox["z", 
     RowBox[{"7", "/", "6"}]], "8"], "+", 
   FractionBox[
    SuperscriptBox["z", 
     RowBox[{"11", "/", "6"}]], "8"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], 
     RowBox[{"605", "/", "6"}]],
    SeriesData[$CellContext`z, 0, {}, -11, 605, 6],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {
    Rational[1, 8], 0, 0, 0, 
    Rational[1, 8], 0, 
    Rational[1, 8], 0, 0, 0, 
    Rational[1, 8], 0, 
    Rational[1, 8], 0, 0, 0, 
    Rational[1, 8], 0, 
    Rational[1, 8], 0, 0, 0, 
    Rational[1, 8]}, -11, 605, 6],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6997524307076635`*^9, 3.6997524607538934`*^9}, {
  3.6997524982759376`*^9, 3.6997525336686363`*^9}, {3.6997525675272865`*^9, 
  3.6997525866130705`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", "->", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"z", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "i"}], ")"}]}], "/", "2"}], "+", 
           RowBox[{
            RowBox[{"z", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "i"}], ")"}]}], "/", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "#"}], "}"}]}], "]"}]}]}], "}"}], 
     "&"}], ",", "6"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.699752594291122*^9, 3.6997527000526385`*^9}, {
  3.6997528017287226`*^9, 3.699752911418681*^9}, {3.699752991007633*^9, 
  3.6997530766692677`*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"1", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox["z", "2"]}], 
       RowBox[{"2", " ", "z"}]]}]},
    {
     RowBox[{"2", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["z", 
         RowBox[{"3", "/", "2"}]]}]]}]},
    {
     RowBox[{"3", "\[Rule]", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["z", 
            RowBox[{"2", "/", "3"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "3"}]], "+", 
          SuperscriptBox["z", 
           RowBox[{"4", "/", "3"}]]}], ")"}]}], 
       RowBox[{"8", " ", 
        SuperscriptBox["z", 
         RowBox[{"11", "/", "6"}]]}]]}]},
    {
     RowBox[{"4", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["z"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["z", 
            RowBox[{"2", "/", "3"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "3"}]], "+", 
          SuperscriptBox["z", 
           RowBox[{"4", "/", "3"}]]}], ")"}]}], 
       RowBox[{"16", " ", 
        SuperscriptBox["z", 
         RowBox[{"25", "/", "12"}]]}]]}]},
    {
     RowBox[{"5", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "5"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["z"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "3"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       RowBox[{"32", " ", 
        SuperscriptBox["z", 
         RowBox[{"137", "/", "60"}]]}]]}]},
    {
     RowBox[{"6", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", 
           RowBox[{"1", "/", "3"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "5"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["z"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", 
           RowBox[{"2", "/", "3"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       RowBox[{"64", " ", 
        SuperscriptBox["z", 
         RowBox[{"49", "/", "20"}]]}]]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6997525905956717`*^9, 3.699752647206478*^9}, 
   3.69975267803308*^9, 3.69975271895712*^9, {3.6997528026308107`*^9, 
   3.6997529123383207`*^9}, {3.699752991350978*^9, 3.6997530769730196`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cf", "=", 
  RowBox[{"CharacteristicFunction", "[", 
   RowBox[{
    RowBox[{"UniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "n"}], ",", 
       RowBox[{"1", "/", "n"}]}], "}"}], "]"}], ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cff", "=", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"cf", "//", "FullSimplify"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"InverseFourierTransform", "[", 
  RowBox[{"cff", ",", "t", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.699752941679427*^9, 3.699752963097354*^9}, {
  3.699753125628117*^9, 3.6997531771371336`*^9}, {3.699753251024024*^9, 
  3.6997532512945237`*^9}, {3.699753326904745*^9, 3.6997533816716022`*^9}, {
  3.699754057821104*^9, 3.6997540999218864`*^9}, {3.69975416781979*^9, 
  3.699754188493104*^9}, {3.699754613613677*^9, 3.6997546934634566`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "t"}], "n"]}]]}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "t"}], "n"]]}], ")"}], " ", "n"}], 
   RowBox[{"2", " ", "t"}]]}]], "Output",
 CellChangeTimes->{
  3.6997531774169965`*^9, {3.69975333855025*^9, 3.6997533819282656`*^9}, {
   3.6997540581047087`*^9, 3.699754100186043*^9}, {3.6997541700893784`*^9, 
   3.699754189446737*^9}, {3.699754617740612*^9, 3.6997546938557396`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"6", " ", 
   RowBox[{"Sin", "[", 
    FractionBox["t", "3"], "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["t", "2"], "]"}], " ", 
   RowBox[{"Sin", "[", "t", "]"}]}], 
  SuperscriptBox["t", "3"]]], "Output",
 CellChangeTimes->{
  3.6997531774169965`*^9, {3.69975333855025*^9, 3.6997533819282656`*^9}, {
   3.6997540581047087`*^9, 3.699754100186043*^9}, {3.6997541700893784`*^9, 
   3.699754189446737*^9}, {3.699754617740612*^9, 3.699754693884259*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "8"], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["11", "6"]}], "+", "x"}], ")"}], "2"]}], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["11", "6"]}], "+", "x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["7", "6"]}], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["7", "6"]}], "+", "x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["5", "6"]}], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["5", "6"]}], "+", "x"}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "6"]}], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "6"]}], "+", "x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "6"], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       FractionBox["1", "6"], "+", "x"}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["5", "6"], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       FractionBox["5", "6"], "+", "x"}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["7", "6"], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       FractionBox["7", "6"], "+", "x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["11", "6"], "+", "x"}], ")"}], "2"], " ", 
     RowBox[{"Sign", "[", 
      RowBox[{
       FractionBox["11", "6"], "+", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6997531774169965`*^9, {3.69975333855025*^9, 3.6997533819282656`*^9}, {
   3.6997540581047087`*^9, 3.699754100186043*^9}, {3.6997541700893784`*^9, 
   3.699754189446737*^9}, {3.699754617740612*^9, 3.699754693917262*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Moment", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "2"}], "]"}]], "Input"],

Cell[BoxData["UniformDistribution"], "Input",
 CellChangeTimes->{{3.6997542791883307`*^9, 3.6997542806656446`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"raw", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"NProduct", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"n", " "}], "t"], 
            RowBox[{"Sin", "[", 
             FractionBox["t", "n"], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "6"}], ",", "6", ",", "0.1"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NProduct", "[", 
        RowBox[{
         RowBox[{
          FractionBox["n", "t"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "n"], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "\[Infinity]"}], "}"}]}], "]"}], 
       "\[Rule]", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"raw", ",", "t"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "6.`"}], ",", "6.`"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6997548654939165`*^9, 3.6997549129229994`*^9}, {
   3.699755011627225*^9, 3.699755127245247*^9}, 3.699755534257386*^9, {
   3.6997556005018253`*^9, 3.69975563046603*^9}, {3.6998207044281635`*^9, 
   3.69982072630875*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
DxX7tbTN+H5m56crXXmOh4a9NJVVqO+ZsC6NemoNlYb/njOI3dnDhFa94S+x
cjQsW3ZUr6WJCQrcFiublWnYjWU4J/WaCZdbKmy4NWm4zeguh2QVE+in7r1z
RjRcYLkzd+0zJjhqccpk7qDhVsu8RNOnTHi5dN7q/T4aHhdIrmFkMuFYjEmX
qR0N393LeNQVy4RUmG1Z5UfDyi9/+A66MeF7qC3FKoSGE4pntJ+dY4KxZaNZ
ZDQNL5u93br1BBOGJ9Lrf6XRsOE4SQ7YywR1GYvqjmoaZp/Yjg0rsuv7awWH
YCMNW9x9tTFRigkt+WoId9DwYAHrIYXC7tcdnOU5gzRsTbm9Qpfdz8c29/Yb
cYlgSebqtQ+rUyDVMahzuaII1suo7X9mkQL8XmcaFVVE8ATLopHTJAVcIndW
q6uL4I53G6ZlNqYAei6Ub6Atgp1t4o2f0VPgI1dU2DFjEWz4pFTgbk8yyDLj
jZIcRHDKdvu+2+bJEN+ZnS/zQATrMnme/lVMAo6R0EcKWSJ4/NNIwh9aEpxZ
OsdckyOCK9t4uN4tJYKewrrwzc9EcMLS/rPaHYnQ7VzoeLRGBHd+Xnjk5JsI
EkJlcolDIrhwesA3sisBorY1hUsrieIWHnLT50I8bK/M0H6vKoqdyiTyPxyO
h9+bvfqZGqJYp1nDQMMoHs7orFFdrSOKVVuln6fQ4wGrBL9aZyyKj7YVFU5W
xsG0sMkvY3tR3CdNfadCiYN9vWWOF1NE8aU6n+170u8B1fmJ0StJMaw3qFUw
TWLgVHqcSI+0GF4MbEj/8ygGyrtufhxbIYb5n/twU2/HgNMW62tiymK49K2r
2ubjMVAjQCm01xXDV97PZ7/+GQ3XHlxcxXFYDHMb7ome046G4b71HIbxYvjx
380nPI/fhkqTlxXFMuJ41jvtb11MCDh8STS4JSeON1vfDDrqFAL83jdKDiiI
46Fq7xtCOAQsXhg9n1YTx4ddvuXWTQbDsFpzzppN4tg2I7Xl5a5goNIGkpiH
xfFasiY/WzAIbPqErgXeFccC+yusFDMCgNt9auFgvDi2Luo90nwjALLE2q4o
JotjI4+3R1OtAuC7WewlkiGOTzvHLy+mBkBg5UqnX4XiuGl/fnPY9ZuQm7HR
6mKbOOZXVoqds/GHPxdsdS2pEtgkeNDiOvKFE/qTYaJiEtjmd0n4BXlfqOPy
+tIkKYETxXVNeP/5QGRcbLjxCgm8+aXjT11fH5Crah7Q0pDAc0w/L+5Ab9gq
seW20C4JbDETm3no/nXwKZUaIbcksPGqT0WpAldhKCDT8HqIBK66XxBX2e4J
pvt07uhFSGDfwUw55WRPEBnatzX3rgSmVc5Ptml6Qiol6G5ShgSGHvq1pKMe
QOx+YPcqCTxqWxA0WXEFOPnaE9T/SOCF+Z20rDJX4A12o+tzSmKr/A9KgqGu
ICjAuGPCI4kbeoc1iJUruz6tw49TJDF9xuSKysIlUKUNe99eIYm/x6c2f9S7
BHsZvxxmDSWxLys8sj7aGQ7EJ3/+t00Sp3atPjuv7wxW0ui48Ha2/dWhg3Wf
L8KJ5QGWSnslcUKL0NieDRfhijx152EbSTyyXPzjt/fnIVlFYV2ZtyROr3FW
HNl3FtKyah6/9pfE8yyZAkHOs5Cp5qjSGSiJV7S21NYXOkGees7KyUhJLOB/
v1JSygmqNXXF5e9L4utVfnk/Rh1hVG/Xoj9IYrmC+O1HH58CXVPX6l0cdNxt
c7VxMd4eQjYIsUSX0TH3TNvFB3b28F72wfI+PjreVcx8Wa9qD/4zXW6ONDpe
NbVh29VSO2hJ3KQSIEfH9YbrHXrrbMFxkiO8YgsdL6/v7zgQaw2lPQkvAzAd
//krt8tUxxqo1Ru+mpnQ8YDBFhm5jmPwLPbk1n4zOtaYNmx0Ej8GHLh+ev4o
Hbcc4Q46xTwC8TG3D2ldpWNlv72laz9Ywvh1Vf+F63Qsqna8rjbYEtiHn9xK
XzpGdqmj6zZawpDBLN+eYDp+n/jc2CXqEGh9tSx1iqNjP3rRt2jzg/BGT04+
4zkdB7e/XDo1vx9kFV6YnS2hY1lOi5To3P3gImzuub6Cjt/qD0XccNwP9C9+
bVBDxxcGhtRi3pnDidCvN9930LG7f6rn6oR98Ot9zojkdzqecjV0+ZdmBibn
66P2zNNxmr5x25XlZhCxNKh/6xcdm+qLrU+L3QUrZZaHzHEx8Lg3U0soZifs
OByi1iHOwF22rvz9yTvgbtups1EbGfhvjeZS0z9j+GjnJ1a/iYHnuZf7rrlj
DCrTyaX/DBnYzfLZRqqqMZRSOwWdtzNwJNS2WVsawRczoyd7DjOw4Rltpdc1
GNbVyU0IXmVg8HdhPWwyAM9Dm+8a3WDgK6/6TK+vMoCqoUNbrvkxcMs141/c
VzfDQe6I8NEQBs6xq0oX0doEXnhJoz6Rgefu8pb6VOhCzVt61z8mA/+SEL+5
TUUXqLYbbuhlMLCStqt80J2NkH7DqTnzCQNvt2mjBV3WgfrSngu3ytm8VOhd
ar4BxHbNSlYQBu5ZnI1eal4P1n3UyrkaBg4o75uN2bMeWAv/UU82M7De4y1f
nh7QAvrGZ7lGHxn45oF/imM/NMCu5q3ltQEGFnstfDdGQgOyD4z/LRhm4Kd0
/vhwPXXY4qqwbxWLgXkvyfTsCFWDQM6tC1az7Pu3+/d9L1GF1qgj96MW2PEt
6O8hkyogs/LKjvolBp6wZ1GylFTg/75Pxv//ffL/AH+lR/g=
       "]]},
     Annotation[#, "Charting`Private`Tag$8354#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 6.}, {-0.03025779796609547, 0.9999997083075048}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6998207301097164`*^9, 3.6998216552646103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fts", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"FourierTransform", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sinc", "[", "x", "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "/", "k"}], "]"}]}], ",", "x", ",", 
      "t"}], "]"}], ",", 
    RowBox[{"k", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6997576521576576`*^9, 3.699757675820839*^9}, {
  3.699757915951598*^9, 3.6997579217962923`*^9}, {3.699758516828274*^9, 
  3.699758532179927*^9}, {3.69975868412506*^9, 3.6997586910499587`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox["k"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox["k"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "t"}], ")"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.699757695357545*^9, 3.699757916342679*^9, 
  3.6997579679575014`*^9, 3.6997585202280545`*^9, 3.6997585816376514`*^9, 
  3.6997587298277955`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fts", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"t", "\[Rule]", "x"}], ",", 
    RowBox[{"k", "\[Rule]", "5"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"FourierTransform", "[", 
  RowBox[{"%", ",", "x", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6997586202889977`*^9, 3.6997587110200357`*^9}, {
  3.6997590498673463`*^9, 3.699759061490774*^9}, {3.6997591516498365`*^9, 
  3.6997591599755263`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox["5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox["5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6997585919648685`*^9, {3.699758629033072*^9, 3.6997586345290565`*^9}, {
   3.6997586646449156`*^9, 3.6997586796777306`*^9}, {3.699759042941327*^9, 
   3.6997590603492794`*^9}, {3.6997591459427834`*^9, 3.6997591603547916`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6997585919648685`*^9, {3.699758629033072*^9, 3.6997586345290565`*^9}, {
   3.6997586646449156`*^9, 3.6997586796777306`*^9}, {3.699759042941327*^9, 
   3.6997590603492794`*^9}, 3.6997591459427834`*^9, 3.6997592510323863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699757715333762*^9, 3.6997577202189655`*^9}, 
   3.6997578046433334`*^9},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw12nk0VV+8APA7X0UyJVREGUIlSQr3eypFyhA/kjlEIlGmSmTIlJkMRaZM
JUokwjmGEJJ5VjIVynCveXz3rfXeP/eszzr7nj2c/f3uvdc6whZ3dG4QcDjc
HPPnf6+W+REzW1tUTPpIg0W3YQeNZ01ATHGdir29TebnwDpoNRcyjF2XqZiz
v+rLQ+KdNLEfJV//zlKxzWKx3cJrnbRJtpH03l9ULJ2A1ez+3E17YXC7j+cH
FTM9jhAuy/TQLr9a4tDuo2L650W7srN6aG8V2Txr26iYT7spkZjUS3O8dcLg
QzUVO3aIXHMlvZ8m/BENm0apmLakFv2X5ACtDa/+5VAZFcviDvP4WzhAk0sw
lU0ppGK3dofUJLYM0pbqAthCM5jlx9SiO7iHaJ6ifZh1ABXD9/546pc/TDvq
ZLWU6kvFFuI05H9vG6ENlU0fHvSiYuuObXcnb4zQzv5HfKHrTsUsYVZwRmSU
RvaVdkFsqdh/5CYB9P0Y7WPzxzcPb1CxgdPZNxn84zRrgTPDH69TsX5X40sk
v3Fa/Xs9rcOGVKzS+qLQgMlvWsiQ5yGBS1SsvljRVuPQBE1Zepu5nioVU2Bd
+6OZOkGbdouOjThHxTqFxShOeyZp2juziVQlKuZ39PcHRd4pGjetdZAhTcWW
6znlGGL/aM9fHIj6xk7FOhqP6Hb9mKW9lklILd5Oxb4pVf0dlZujlX5hf59K
oWKRLgUvYkLmaH0zK99dNimYRf/q3gWEThNQadkhOE3BolGPv1EVDJpk7/l9
LJMULHZ/bIK3yDzttMNnafoYBbM/fM5FO3CeZhifeal2kIIV6Z9qendtgfbi
r0eQwzcKpnD/kNNdniVarjc93uArBXOKofEbBC7RynhvZp/9QsHOXDfrurG5
RBtAdOt4yynY2Lyk8f65ZdreZ4fIaC4Fe1m7yidJX6UlKnc93hlCwQSfm2ND
dlu03LZLESsBFCxP+FTKMyIOymwqk0d8Kdi9I7GXM3VwMBCZW1H8kILViJUx
RBZwsG/cZ93MjoIJSX03oV0mwJGHy6zqNhRs1cxUnpFBABqHwx45SwrWHzl9
Qg1PBNPT106zGFGwfMkXrDNlRHgZdtT9nToFs2uZZtlQI0PegYyA5xcomO5L
TW2vd2So+CQQ53eWgmWHsT0c5KfAj2HyR4PTFIxHJeq5Bp0CgicHGDhJZnuP
n/o3WsoCyT8D71zZRsHaXpzEkgrYwJyV5ftjMrP+70emSmV3gMjJgCPv8BSs
ud/kB6NwB2SGPfnHvkrG7srcvdWHskOeso9d0yQZC/C48k/OnQMcbfGNa+Nk
rCh9cZ9kJQfIPnssKTVCxr5qZnFos3JC0V/PiaB+MmYqd7APSeeEshcPbVSb
yFi3fNKa4jAXeNat1rrWk7FYg6ivSie4AWHcF8usIWPmLTbaz4K4oUbdfYxU
TsYO5RbqWMjzQOOKs2XVWzJGKTMtx6fugr6rDmbK4WSMvt9n6wzKB4m+/yrs
n5Ixtp1tYXqS/GCaby+YGEDGFGuVmvbG8cMwxW5w1YuMwe7RA0MuAjBRZGP0
yZGMTa68nGOo7YXXv8ZLf9uTMc+Fa2TTqr1gv8NaYLctGVsakSp7r7wPZq2s
el2uk7GcYsEm2dOCsMx9/epxHTL2MZS0UCi6H0ph6KOFJhl7hNO/63ZrP3jY
mfFGqZMxtzht9PK7/YCrNumcPUvGrizblAEIA/WuoW7ecTLG79MzVnJLBHhb
dLUO7SJj9i1Egaq1g8DfLN5tx0nG3s1Lyc5eEYW9TWumeTvImO8Tsw7bHFEQ
rk93OE4hY7LWZkd1jMVAGmOEKi+RsOGPaMvDNnE4WlG36zGDhEl5rloFH5cA
2bIXSVUzJExGl2tze6wEnPx07q3qHxJmZ/3ilavZITj7LrrpSi8JkxsL2xtM
koLzeTb/xXSSsM9nPlWVOkmBWq7iQFcrCdtj82Q8YEgKNLJHpowaSNiJtlNi
7NXSYJBynNX6Mwl7deLEsF3iEbgT0X7xQRIJm5j49aFX5xjcDctqLUsgYTvb
+s6Uxh0D55CH17aekbBrhnNKzwePwYPAA7Z+YSQsduDnHmt7WfB/fC8wzIuE
zfZlyoTHHodER+66tOskTDOlsenqfnlIdvitOWbC/D9H1uUfrvKQZv+5S9yQ
hOmzuLxNbpaHrJuW47k6JEwoMfTxiPdJKDD/QC4+R8L+sXOLjC0pQL22rkqj
KAkzaLPzyRJVAsl4rowyYRL2xN1GXPiFEoT8bCXn7SNhqm5tM9e5lEHbQbsu
YhcJwzz09+lQaNDzVENdn0zCdO04W7UJCJxuZ3ujimf2T+XpRT8VBBIFmlhP
bRCxBPJ0cFEAAuY56t/2LBCx5p+9qkKcZ+BPrar2r1EidpS7UOiezFlQZ6e+
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
cvrHbJ64MetzaQnP+1KCqpn029PcGSB0zaK6ofUT2pU0spZxnwEG+/0liZMf
UfZcQ51LHgwQ49JS4XT8iDbs4VmfYnqeyGcqtFiEJoi9kAl6xIDI3zmRioQi
tMPXHEo8GdCQ9235nsAH1FrTbvfsYwbEp8Ry+aQUoPoKVoou3gywjjKTjhAr
QI+5cc8vMk10nTPLlX2P/j5Nkpj1YYDbA8mwr8/y0IzoN8UlfgzQnJ7tys98
i35JWI4SfsJsj0WxUGxxLqoX1Sntz3TnRZX3Fr2vUXzhs+Tz/gzILd++qjaZ
g+4G7gcpTPsdaz17dC0brXbT411m+ji/acfa3iz0hitXXFIAA7aHHtw3fDgT
3Qya85hiehg3daOeloH2/DARlw9k9u+P21KMeToqtW7UVMn0TWMa8tApDR3y
3VNPCGIA0kIKuu6TivbVVAcjTP+4c+CEsVoyGnvvh3UB06FX39VK3EpC516r
eo8zrQTKBgtPX6CehwKsdgczYEqsYaLybQIayknlPM/0c/arD8O+x6EtCZIB
d5i+uDjCZjT3DFVi1ayLZXp50PGlOHcMyonWtpYynfVl4+i8XBTKtm8ks59p
/bfBlZh+BFqQMHlhhentkkczBeZC0J7CfQXcT5ntX1H7+kEuCD2+XPRHkuna
eou/l92foNKLY5M0pg/Ee+wc/+yNVqv1ftJimvBd+sbm5kM0O6JQx4Tp8tvm
b2T8nVF752efbJie45MY+SJwCx1Ljpp0YLolV/Dnfzr66Pvqz3/uMk26fml/
4DkaDMXwf7jHdM6RNDe2Uguobnp70YnpBPekhfZORxiTuJdrx/Rgr21+qqY7
iNuZ9FswLaIob3unzgtIhte69Jk+rukdKZjiC/PY5SRVpjs9bRyeGAcA2YlX
5gTTbvkal/7yPYUnZ8LChJgWGDouodsZBuMcTz5RmDZlCSUMqkXCpy81byeZ
45O/H+fEIR4N3VocDo1M407d+3mOzDyH5BxYyWb6ypVxDbeRWMB6P2j6Mp1m
e63sdWU87Jt3cDBkWuU5JHB6JsKi/9r2Leb7fVZQQD1v/BLOe1ACmpi+N8al
qLQvBWqv5TfGMl2z8STnzloq2Jfj3woz/TcINQ+aTAOux2/Vhpnzaxfvyu70
3nS4mrP2Oplp6yP2/l3FGYBwKVRyMB1WmqE8m5kJta/m7tUw52vxhZ/z22Kz
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
A+c7do+5xCjICn/2u7TD20BAJak35TAF0X2y/qBNhwVs/uFCypWY9RU6rvAV
UKC0O+GTH0JBSuJOighqUoC9SnbskgoFObpp7FAzRYbCWCta3yUKIjrcTO6X
IgNzZZ9dNKQgLevjiG8FEeKjwvVk7lOQ4jhJyRQJPEx5SPgseVCQBBd/dLIf
B8zDTF7FYwriPZyf9iACB6OKDKpGIAWpyGg5l7u6RZMZ0y+1jaMg8f+Nu401
bNB8v8+My7ygIGlW9sOfVTZoXSWB3MsvKYgH79ve79g6zSOs1N4/k4IUtQz6
hKBrtK8nBYXSiyhImealZ1ZdK7S9IsWXbpVQED6NZTXZ6ys0RzZt92PlFER6
Zwp55d8yjfeXdytaQ0EuPCK/u7JjmWYRPOY70E5BbO46T+lbLNJWB3L/7KJT
kKH5pC5VMwZNxb4+QmORgiTJ7eAcWqPTQtdGFJ6sUpCqm+ZZJs/ptP0Ce4Lm
CVQEfifzjw/M0VSvBh1q56Yi1wrigxG3WVrE+KvW7XxUZEedEutukVlanwt2
/+xeKnLRb2pFOGmG5hCz9PX9QSpya84/J9VgmhbTeuNWxAkqklx2o+bG/BTt
h7k3V/0pKvLfM03OtxZTNPHZxNItZSpywStIrb59klbK3rH9zgUqosUrGny+
YoL269LZNxpXqcj9+/4eCwW/aUdqBf9uv09F9mplPcvnGKW5652OOfuIikg1
T/k7Z47QKkf1lB54U5Hxx3dAhzZC+48YGjIRREV+Ot/bJuM8THuIrEnXP6ci
kQ3Pmq2Xhmg133k7t15SkTOEfd7DiUM0djPZRyfTqYhFpLWDlMoQLe2R7bfM
N8z6TyfEkmR+0upLu28/KaMi5yj6yR+yBmhc6oxd5RgV8WTNXcraMUAz7mWv
mK+hIk79e75/cO2nzSydZ7f6RkWCKt5NdV7po/GeKMw7+4OKcJxR0s2T7KGZ
13zXfzBMRc4XlInXZXXTcnSnNt+PU5Ha8KaD/uLdNKW7IlrCM8zyd2xfVx3p
ovnjaUsGDCqC5u5sE/vYSWuJuJYcscQcrxlH003opAnsd1GtX6Mi+Vz1MspN
HbT/+/4d+f/v3/8HSLIA7A==
       "]]},
     Annotation[#, "Charting`Private`Tag$432744#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 1.2215458866206106`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.699757711881363*^9, 3.699757720591857*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exp", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], "*", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Sqrt", "[", "k", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", "t"}], ")"}]}], "]"}], "-", 
      RowBox[{"Erf", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Sqrt", "[", "k", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], " ", "+", " ", "t"}], ")"}]}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Inner", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100000", ",", "200"}], "}"}]}], "]"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Range", "[", "200", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{"data", ",", "40", ",", "\"\<Probability\>\"", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "60"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6997594941545515`*^9, 3.6997595120731354`*^9}, {
  3.699759670286141*^9, 3.699759672215493*^9}, {3.6997600067095537`*^9, 
  3.6997600077844744`*^9}, {3.6998205706198597`*^9, 3.6998206241937833`*^9}, {
  3.6998214961879053`*^9, 3.6998215522892303`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.32899999999999996`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.32899999999999996`], Thickness[Small]}], 
     {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{-2.4, 0}, {-2.3, 0.00005},
       RoundingRadius->0]}, 
     {RGBColor[0.829938, 0.725154, 1], RectangleBox[{-2.3, 0}, {-2.2, 0.00007},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.511666, 0.141085], RectangleBox[{-2.2, 0}, {-2.1, 0.0002},
       RoundingRadius->0]}, 
     {RGBColor[0.566842, 0.967407, 1], RectangleBox[{-2.1, 0}, {-2., 0.00049},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.926772, 0.151904], RectangleBox[{-2., 0}, {-1.9, 0.00078},
       RoundingRadius->0]}, 
     {GrayLevel[1], RectangleBox[{-1.9, 0}, {-1.8, 0.00154},
       RoundingRadius->0]}, 
     {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{-1.8, 0}, {-1.7, 0.00289},
       RoundingRadius->0]}, 
     {RGBColor[0.4, 0.8, 1], RectangleBox[{-1.7, 0}, {-1.6, 0.00449},
       RoundingRadius->0]}, 
     {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{-1.6, 0}, {-1.5, 0.00625},
       RoundingRadius->0]}, 
     {RGBColor[0.790433, 0.450294, 1], RectangleBox[{-1.5, 0}, {-1.4, 0.0085},
       RoundingRadius->0]}, 
     {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{-1.4, 0}, {-1.3, 0.01179},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{-1.3, 0}, {-1.2, 0.01531},
       RoundingRadius->0]}, 
     {RGBColor[1, 1, 0.392157], RectangleBox[{-1.2, 0}, {-1.1, 0.01944},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{-1.1, 0}, {-1., 0.02363},
       RoundingRadius->0]}, 
     {RGBColor[0.545876, 1, 0.558755], RectangleBox[{-1., 0}, {-0.9, 0.02715},
       RoundingRadius->0]}, 
     {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{-0.9, 0}, {-0.8, 0.03162},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.8, 0.4], RectangleBox[{-0.8, 0}, {-0.7, 0.03632},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{-0.7, 0}, {-0.6, 0.03849},
       RoundingRadius->0]}, 
     {RGBColor[1, 0, 1], RectangleBox[{-0.6, 0}, {-0.5, 0.04066},
       RoundingRadius->0]}, 
     {RGBColor[0.563638, 0.606256, 0.935851], RectangleBox[{-0.5, 0}, {-0.4, 0.0442},
       RoundingRadius->0]}, 
     {RGBColor[0.868772, 0.73959, 0.218616], RectangleBox[{-0.4, 0}, {-0.3, 0.04596},
       RoundingRadius->0]}, 
     {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{-0.3, 0}, {-0.2, 0.04785},
       RoundingRadius->0]}, 
     {RGBColor[0.829938, 0.725154, 1], RectangleBox[{-0.2, 0}, {-0.1, 0.04924},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.511666, 0.141085], RectangleBox[{-0.1, 0}, {0., 0.04805},
       RoundingRadius->0]}, 
     {RGBColor[0.566842, 0.967407, 1], RectangleBox[{0., 0}, {0.1, 0.04847},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.926772, 0.151904], RectangleBox[{0.1, 0}, {0.2, 0.04823},
       RoundingRadius->0]}, 
     {GrayLevel[1], RectangleBox[{0.2, 0}, {0.3, 0.04748},
       RoundingRadius->0]}, 
     {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{0.3, 0}, {0.4, 0.0464},
       RoundingRadius->0]}, 
     {RGBColor[0.4, 0.8, 1], RectangleBox[{0.4, 0}, {0.5, 0.04375},
       RoundingRadius->0]}, 
     {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{0.5, 0}, {0.6, 0.03902},
       RoundingRadius->0]}, 
     {RGBColor[0.790433, 0.450294, 1], RectangleBox[{0.6, 0}, {0.7, 0.03788},
       RoundingRadius->0]}, 
     {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{0.7, 0}, {0.8, 0.03404},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{0.8, 0}, {0.9, 0.03054},
       RoundingRadius->0]}, 
     {RGBColor[1, 1, 0.392157], RectangleBox[{0.9, 0}, {1., 0.02559},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{1., 0}, {1.1, 0.02328},
       RoundingRadius->0]}, 
     {RGBColor[0.545876, 1, 0.558755], RectangleBox[{1.1, 0}, {1.2, 0.01881},
       RoundingRadius->0]}, 
     {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{1.2, 0}, {1.3, 0.01514},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.8, 0.4], RectangleBox[{1.3, 0}, {1.4, 0.01184},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.4, 0.4], RectangleBox[{1.4, 0}, {1.5, 0.00827},
       RoundingRadius->0]}, 
     {RGBColor[1, 0, 1], RectangleBox[{1.5, 0}, {1.6, 0.00614},
       RoundingRadius->0]}, 
     {RGBColor[0.563638, 0.606256, 0.935851], RectangleBox[{1.6, 0}, {1.7, 0.00404},
       RoundingRadius->0]}, 
     {RGBColor[0.868772, 0.73959, 0.218616], RectangleBox[{1.7, 0}, {1.8, 0.00281},
       RoundingRadius->0]}, 
     {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{1.8, 0}, {1.9, 0.0015},
       RoundingRadius->0]}, 
     {RGBColor[0.829938, 0.725154, 1], RectangleBox[{1.9, 0}, {2., 0.00086},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.511666, 0.141085], RectangleBox[{2., 0}, {2.1, 0.00052},
       RoundingRadius->0]}, 
     {RGBColor[0.566842, 0.967407, 1], RectangleBox[{2.1, 0}, {2.2, 0.00021},
       RoundingRadius->0]}, 
     {RGBColor[1, 0.926772, 0.151904], RectangleBox[{2.2, 0}, {2.3, 0.00014},
       RoundingRadius->0]}, 
     {GrayLevel[1], RectangleBox[{2.3, 0}, {2.4, 0.00004},
       RoundingRadius->0]}, 
     {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{2.4, 0}, {2.5, 0.00002},
       RoundingRadius->0]}, 
     {RGBColor[0.959274, 0.614496, 0.466316], 
      RectangleBox[{2.6, 0}, {2.7, 0.00001},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.502, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-2.4, 2.7}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6997595071108427`*^9, 3.699759516777192*^9}, 
   3.699759676922374*^9, 3.6997600165507307`*^9, {3.699820605140464*^9, 
   3.699820634583056*^9}, 3.6998215246095862`*^9, {3.6998215623010273`*^9, 
   3.6998215831367903`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%3", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"exp", "[", 
       RowBox[{"Pi", "^", "2"}], "]"}], "/", "25"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699820636564226*^9, 3.6998206472006893`*^9}, {
  3.699821379012253*^9, 3.699821447170369*^9}, {3.699821479861931*^9, 
  3.6998214852159977`*^9}, {3.699821578414935*^9, 3.6998216120495462`*^9}, {
  3.699821796641556*^9, 3.6998218019371614`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.32899999999999996`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.32899999999999996`], Thickness[Small]}], 
      {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{-2.4, 0}, {-2.3, 0.00005},
        RoundingRadius->0]}, 
      {RGBColor[0.829938, 0.725154, 1], RectangleBox[{-2.3, 0}, {-2.2, 0.00007},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.511666, 0.141085], RectangleBox[{-2.2, 0}, {-2.1, 0.0002},
        RoundingRadius->0]}, 
      {RGBColor[0.566842, 0.967407, 1], RectangleBox[{-2.1, 0}, {-2., 0.00049},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.926772, 0.151904], RectangleBox[{-2., 0}, {-1.9, 0.00078},
        RoundingRadius->0]}, 
      {GrayLevel[1], RectangleBox[{-1.9, 0}, {-1.8, 0.00154},
        RoundingRadius->0]}, 
      {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{-1.8, 0}, {-1.7, 0.00289},
        RoundingRadius->0]}, 
      {RGBColor[0.4, 0.8, 1], RectangleBox[{-1.7, 0}, {-1.6, 0.00449},
        RoundingRadius->0]}, 
      {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{-1.6, 0}, {-1.5, 0.00625},
        RoundingRadius->0]}, 
      {RGBColor[0.790433, 0.450294, 1], RectangleBox[{-1.5, 0}, {-1.4, 0.0085},
        RoundingRadius->0]}, 
      {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{-1.4, 0}, {-1.3, 0.01179},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{-1.3, 0}, {-1.2, 0.01531},
        RoundingRadius->0]}, 
      {RGBColor[1, 1, 0.392157], RectangleBox[{-1.2, 0}, {-1.1, 0.01944},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.4, 0.4], RectangleBox[{-1.1, 0}, {-1., 0.02363},
        RoundingRadius->0]}, 
      {RGBColor[0.545876, 1, 0.558755], RectangleBox[{-1., 0}, {-0.9, 0.02715},
        RoundingRadius->0]}, 
      {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{-0.9, 0}, {-0.8, 0.03162},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.8, 0.4], RectangleBox[{-0.8, 0}, {-0.7, 0.03632},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.4, 0.4], RectangleBox[{-0.7, 0}, {-0.6, 0.03849},
        RoundingRadius->0]}, 
      {RGBColor[1, 0, 1], RectangleBox[{-0.6, 0}, {-0.5, 0.04066},
        RoundingRadius->0]}, 
      {RGBColor[0.563638, 0.606256, 0.935851], RectangleBox[{-0.5, 0}, {-0.4, 0.0442},
        RoundingRadius->0]}, 
      {RGBColor[0.868772, 0.73959, 0.218616], RectangleBox[{-0.4, 0}, {-0.3, 0.04596},
        RoundingRadius->0]}, 
      {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{-0.3, 0}, {-0.2, 0.04785},
        RoundingRadius->0]}, 
      {RGBColor[0.829938, 0.725154, 1], RectangleBox[{-0.2, 0}, {-0.1, 0.04924},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.511666, 0.141085], RectangleBox[{-0.1, 0}, {0., 0.04805},
        RoundingRadius->0]}, 
      {RGBColor[0.566842, 0.967407, 1], RectangleBox[{0., 0}, {0.1, 0.04847},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.926772, 0.151904], RectangleBox[{0.1, 0}, {0.2, 0.04823},
        RoundingRadius->0]}, 
      {GrayLevel[1], RectangleBox[{0.2, 0}, {0.3, 0.04748},
        RoundingRadius->0]}, 
      {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{0.3, 0}, {0.4, 0.0464},
        RoundingRadius->0]}, 
      {RGBColor[0.4, 0.8, 1], RectangleBox[{0.4, 0}, {0.5, 0.04375},
        RoundingRadius->0]}, 
      {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{0.5, 0}, {0.6, 0.03902},
        RoundingRadius->0]}, 
      {RGBColor[0.790433, 0.450294, 1], RectangleBox[{0.6, 0}, {0.7, 0.03788},
        RoundingRadius->0]}, 
      {RGBColor[0.895369, 0.716976, 0.346883], RectangleBox[{0.7, 0}, {0.8, 0.03404},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.0980392, 0.392157], RectangleBox[{0.8, 0}, {0.9, 0.03054},
        RoundingRadius->0]}, 
      {RGBColor[1, 1, 0.392157], RectangleBox[{0.9, 0}, {1., 0.02559},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.4, 0.4], RectangleBox[{1., 0}, {1.1, 0.02328},
        RoundingRadius->0]}, 
      {RGBColor[0.545876, 1, 0.558755], RectangleBox[{1.1, 0}, {1.2, 0.01881},
        RoundingRadius->0]}, 
      {RGBColor[0.391867, 0.710414, 0.663966], RectangleBox[{1.2, 0}, {1.3, 0.01514},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.8, 0.4], RectangleBox[{1.3, 0}, {1.4, 0.01184},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.4, 0.4], RectangleBox[{1.4, 0}, {1.5, 0.00827},
        RoundingRadius->0]}, 
      {RGBColor[1, 0, 1], RectangleBox[{1.5, 0}, {1.6, 0.00614},
        RoundingRadius->0]}, 
      {RGBColor[0.563638, 0.606256, 0.935851], RectangleBox[{1.6, 0}, {1.7, 0.00404},
        RoundingRadius->0]}, 
      {RGBColor[0.868772, 0.73959, 0.218616], RectangleBox[{1.7, 0}, {1.8, 0.00281},
        RoundingRadius->0]}, 
      {RGBColor[0.90045, 0.0204013, 0.0301823], RectangleBox[{1.8, 0}, {1.9, 0.0015},
        RoundingRadius->0]}, 
      {RGBColor[0.829938, 0.725154, 1], RectangleBox[{1.9, 0}, {2., 0.00086},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.511666, 0.141085], RectangleBox[{2., 0}, {2.1, 0.00052},
        RoundingRadius->0]}, 
      {RGBColor[0.566842, 0.967407, 1], RectangleBox[{2.1, 0}, {2.2, 0.00021},
        RoundingRadius->0]}, 
      {RGBColor[1, 0.926772, 0.151904], RectangleBox[{2.2, 0}, {2.3, 0.00014},
        RoundingRadius->0]}, 
      {GrayLevel[1], RectangleBox[{2.3, 0}, {2.4, 0.00004},
        RoundingRadius->0]}, 
      {RGBColor[0.759213, 0.886885, 0.319265], RectangleBox[{2.4, 0}, {2.5, 0.00002},
        RoundingRadius->0]}, 
      {RGBColor[0.959274, 0.614496, 0.466316], RectangleBox[{2.6, 0}, {2.7, 0.00001},
        RoundingRadius->
         0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxEl3k4VdHXx6/ZvS4uUZIyS5KKInH2PkUUkiFCCEVISKaQIRkrEZmSkOEm
yRAqw90VMs9kypShhAyZxet9nvf9/c4/5/k8Z6211/quvc/eW9jKSc+ankAg
ZDESCP/7vvo28s/W1i5E+L+HZ51fQmnjv1yplmHqvvJflhj4UDs1+1+eJP94
2TP8X3a2P25U+OW/7Cvei2xC/suJz0SfNHL8l18MhjrpEnf+h3e26F84wMv7
H67R0VetF+f5D589IO4qKrLjP3wy1zSz+TA3OvnUREKDEq/8ppNypOggN9L+
dO/zanaCstC/yg+J+7nR1els81dnnikzax1qtBbkRq3vo3b3k1KU2379W1jn
4Ea8Z3k6Y09lKNuLvzglOcOFZtcaA3+4FCh/19KvZ5/kQoHCt6Sx3kJlHVcW
g4Uxrv+zL1KW/+JkW/GdC8GUa+xL7u+V6S3xxxcbudATpYs7QsSQctMmpXiy
7P/tq5QTk4b7/XO40E0GmjTdjgZl/9/nZjXTudDRNZfY/F0tyjYnCxh2Jf3/
+G3KWmH8u0aiuZB+lW7f7/2dyrLd96TePOBCl403k+rku5X59v/GPAO50AFv
D0io7lPedNPXVfHmQua/+s6U1Awqj1aWXuO4zYXY313f8V52RLluh5hnjz0X
upKUcNi/Y1Q5z+rhg3QrLsTy55prWNeEcmz+32QnE67/0+u3MrGHKmlgyIXK
Uvl/Gh+aVvYhmBWc1ONCIXfKDwgd/6NsdaGqikmDC1ESmTVyOueUO93vXPh9
hgu1XH5azk9ZUD6bfKin5RQXWr2QW79p8Ve5tGrYqhjjQg/ddV2NahaVZaaf
Tj1T5EKDgiU7zc4tK6fyaLgHHOdCi5qDBeTRFWUe5c0tm6NcqG6t9uz1+DXl
tXCbHbIHuNBtFwKQNN9Uzr3vVCUlzoU0G2/+iTpGwKx8PT1Ehbf1Xvj7jF+D
DtvpGXBAYO//60mP1d0K7+PZzYX6R1cyp3IZMN8b0Y/YebkQUw9XUcsWIyZr
nQSZubhQ3NY7M6nrzFiiUe7LZVYupHOs7fttHyKmrVdiMMvIhdY+ClXKHWbD
6LUQyy/Cdr+nGvUV/5Gx4jO1H4Y3KMhxN/fUh18cmD1su9G7QkGD71T3SXpT
sH2KfXvb/1JQJ72tl+YTLqxNdrS5fpaCqvdxfhwu5cYUJZbkyn9S0BxFWCXp
HC82Jbg1VjRKQTdFl6Il83ZiKbtZ43OHKMgvck6mSoYPu7iDSyOrn4LEjXbw
uFTtxljZ+TdedFPQo7Tl+Vq3PVgZs2hufAcFUVCXFL3KXsyZIG0R1UJB2Xl5
pfyHBLHuBazyXg0FHeFu7I3OF8YeTqu5e1du5ztH3PG5WwTDJy5Ium57vyiM
Dz6yQwz7O2TU61BGQSE31B/lWIpj1F7Lh9bvKahYoV7KvkoCM+2wB+bvKEhb
vsfqOZTEKE23Zw3ztu0T/kaqtx3APD8FXTxLpSDdDVzW/swhTLo0gvlUOgWp
G0bl+R44jA29i3uvmEJBnwzK9rDEHsFiclPsZZMoaO8ujOtR1lHsLPWVwMF4
CjJi91cOqpPFNlILmkRjKChMS3+xbEsOy3tW6i8QSUGt8zeg7dnj2K7HjaPs
oRS0f/pU7C++E1hdaFcs830K8qE3I1x+qYj53hs8u+W3rWewAzlbTQmT9fm5
tuxNQefjxCtIjBg27jaXM+tBQYLX2W75fgdYotOa+a/bFEQKt4sRsMcxbTsG
rhGn7fqz79QruJ3Cik153dqvb8ezUj0oVaGC2Rvu299wlYJ689yY5DdVsX06
+3sqr1BQ25ueW/R6aljbuSMPyi9TUNQGX93SR3UsWEURK75EQYUrMzaHTp7D
TmKn/+TqU1D/PdLyQosGNiOvmZp1gYJOfmGRGvPXwgylzJgS1Lf1eL5nlm+3
DkYSsymJUqEgrmEdS8s9uljFXie7cEhBNO4DMhGH9DCXXZ57ApUo6MP+P4F3
dPQxCa6ARm8FCkr2Ni/Fgi5ivaRwP1e57X5Ul+Y0NRhgEYzRR28epqCdLIpH
b0pewhaX05+a76cg27vLXVZCJphJaElckui2PhKP9ahplzHEV5fQK0hBh1y6
bGpPmmEPFf88N+SjIAd5sWMlRhbYfC1dSgwPBVX8e+WIn7PELpnwpLVRKIjB
aKxNT90KE/FWzNQmUpD3W1UtVqdrWCibFvUh07Z+HYxcaonW2Mwz8+w6Ogq6
/73A/HSXDeZyh8Xs0V9OlF40pyF93w4DidKWxGlOxNEV6sSxYo8RS3Wtg8Y4
kd5Ud3SyvwOWsvHs5t0uTiTUTGfv0uGEOez9dGu1iRNlyqn0s7U6Ywpg3M3t
KyfqH/wllVV5C2vyO+J78z0nWkguusXceRtLTDG49ytv+3tmBcOZBVfM+pNX
sPUrThRnV9CnLuyObdBXRZglbsfvov/JmeeJ1YhOPul5womcrbUvZXJ7YdGq
nHEGDzjRfVF/kTeh3phUsPGL8z6cSPz7kXRQ6IstZvq+rHXdjve+1ZnpuD+G
vr7MOnOTEzENWLlaCARgl4gzbzFzTmThYx8SyRWIiUjtePfBkBMF/bmh80Xo
PjajceL98QucSODl7v4cEITdf3gPHcI5UXxykFT9qxBM501W5asTnCjcYs/3
Nyuh2J6mhhrxo9t6XSLLvjQOxwo4d7XuFeFEgvZHKpMNHmG+R5Q7E/g50Xn5
HY3v5iOwc7qWPbw7OFEX9x29db1IbOjJ62F2Rk4kJeP0pu/AEyynsGUsbIMD
8TPoSF6WjMY8OhZ/MS1yIN9ie9LtYzEYx058/t8YB9pUcZg/4xmL9cpbL90Z
4EDWfwuvh+bHYRmXwtcWuzhQ4HLctON6PKac0EE/85UD+Yvqi1Irn2EsH1eZ
7REHQuTBoY4zz7G23n1s4+85UCVdy5ZpXzJmJ2C3Y+AVByq0axEaFE3FjmER
u0zSOJC0oRX1BiUNI5gX7ulK3M7v8PwxW+JLLPbFP9GmBxyIWqHJryKagVkh
EUmN+xzomVi6hf+ZTOzQsLp0tQ8HesqCPky6Z2GVIk+OVdzkQAS3icXrpGxM
u+vRZJw1B7pOJ8C+8fA11h0WlnLLjAMNDWrN2Iq/waZm/cni5zmQt2pbtYF2
Huae7vN5U5UDXeiMFGKH+RjByNOzW5kDab1bT9XACrAdNKfRB9IcqLHruuEl
63dYksuNRGsxDtRcsGVPiyzCJCSu60ABDhTVvO/GUEMxdvKRedk8Gwd6FJnK
veH1AavETVwaGDiQpYx11tTMR0z7r4Fk5jo7GnQXVrjvUYZZXT4fY/ybHZnu
uPnnYD0Nm+I4pyH3gx216BZy6jUgzP2zKoG9jx31+qlY1NE+YeEHlB1QHTua
6l+dLWz+gvF8VxBJ/MyOhjQJccnTlVhypFz37Y/sKMOxgENxTzWWvyyluj+b
HUnzDmBD1Brs5GuJNUIaO9p5RSnmI6kOqzQXyetNYEde6dd4hv3qse6q3QIR
Yezo2aNgbnlqE2Z1h7ftegA7Eg4XU2+QacGmpLlCT91hRzmhJUeNeFsxQgzr
37+27Kj1r9KvYNZ2LFydMbvJgh05qbS+DtjZgfGsb12hGm3b170XYpXrxCSt
lusvn2VHvL/X5BsSv2EFvAsBx3F2NLrzIf+biW5MuXZGgfMEO3K0HdxjqdaL
XTgy/vLzfnZEljemo8e+Y90/ho2TBNnRT8k7fNNdA5hV3HdO913s6Lhbu81F
lSHMfbPD+wALO3rbc+Q6ZecIRihoOcqwRUa9AbJBYtw/sHDrhon+JTIaskt+
9WjPKJbc8EU/cpyM9EgSZ0SNxzFJfxrRfoCMHOoW1r5GTGAFcqU0lS4yuvLL
Z72g4ydWlVhwcLmKjHY63+wsjvmNaWvnDreUk5Hbum5eHGUa66bLjssuIiPz
G07jF1JmsCnbVAbzDDKSbZWWfb01i7kLPP+g8JyMuC7rXLL5OYcRWuKduJ6S
0UeLqbLj3+cxHoXIvsr72/6lg9LB03+x5MkHUck+ZDTM09d5kbSESSaHqHu6
klGTxJ3C9uPLmBKTX+HBa2TEO2UZ31O6ikmOPyJGmm7Xc1FyVo2wju38mnTl
70UyEp4VPS13cQObDf3IVn6GjK5mzwk5HtrCBuxqLYUBGY0fnWcUMSGAeo3u
kiB5MjqkuVe+Q4IOZJKXrmrvJyNHSwXlr9/pQcw048cCQTKK/vmzdbaGAQQ0
7aDs4iMj9xr1MDkaIzCNPFo2yEpGF9iu21GamYHGLZxblY6MqqqEuGm/WICC
3gVb6iober9WfzGPiwi4eW7y3JpkQ1eMBj7UPGADhEVv+84RNrTVaDavMEgG
053hSLGPDXXzWAZ4neYANXFUB/oGNqTWH/D0zXMKKPIs+WxTyYYstZU4oR0X
SDOu5qsvY0ObciqWEHCDu3tGK6PfsCFp8zOqp5h5gP3GPP9KBhuK7iL/k1zj
AUbf6W6ZJm/7f3imorXKC2RfCO4Vf8yG7teWsWjs4QNC/jK3w0LYkPyYyOtj
cDdgt8Rqp/3YkPjFnERvZ37wU+SyW7EzG/Jy0Hrt/08AdDHY1/PbsaHKgCgF
f5N94Muop7CfJRsKImo6XPkqCJIzYxvV9bbzMdUPrLYTBg9CMkRzNNhQVdKQ
xsGTIsDT9t0digobSmYvM1/fIQr0pdrEe+TYUL7L+ZGgMTGAsw17Y9JsyO3a
yULBAXEgM/WnNVWMDV3/Mz39Y1gCsOay+9rzsiF2FgnTQfIBsBQh0NHEzoYo
mzdd9x6XAj+cDkrJMbMhsoGmVIz9QVBx9FzX+hIJqSR85fXYOgRyuI2kLf6Q
ELtbwkU+i8MgYcHmXuUEafs8+8pcxvYIcC26L/Oom4Q8eD3S8bmjwDI2+v5c
CwkNwyCR8c+yQNsjrdegloSsCmYv1jyXAwcUUfC+jyQUavP54zfn42Anf3P/
vQISuqUam99jJw8Y17/LTmST0JpG7/HPNxXAQNn6wNtnJLS0x9NIOF4RxOAK
CqfuklCLdP9JsSAAGKr/fK93I6HOxRc43g+Biyb1vqEjCYmO+ObOpeBA13B3
240rJKTEa90Sufc0QH2tnkuXSIi3Lzlsc+I0OGIZLhigQ0Ktsy26sx9VAIfD
ukPsKRI6HqgW9cX7DLg7V7hD+CQJCc7UW1+xVwNT7g4fX8uSUIOmtOpfK3VQ
H/Cd5ZMoCcXlngzIvH0OhMbR0n4zkZCsfza/uaA2WBbwPOe+SUQmRnrcvXYX
gE3akVnCMhFJjXr9W7fQAWfepGI7fxLRRsJF/ZdNuuCdrMloyhARGRy89Kgx
Ug+Ived+cLCHiIYThFKnTPQB/ZfAbryOiE7siOTVYjUAt84q+9V/JiLB9+p2
x6cMwFDjX3HDUiJKPfWs0LrHENC6rW/fyCGiawThT5RWI+Azo84RG0FE78cq
6iNwM/D7NqFIKISI9u3qzIy7Yw5MVt9ffu1HRKSU9G5Z2hWgyCj1CjkTEYHM
HkpUtATUsJELmnZEZMR2wU1m1hLwcT5b6rQkohYH9gepuVZgaTdZ9bceEXF9
URyJOn0NWL+onHTTJKLpuYmgDD5r0CF2N4qgSkQLgZqqx5atQeHhmQHe49v1
45sPOZqvA+czLXfwXURU0HjF9tbCDTBYFypUz0lEcbxLHUy7bgJtnVNfDViJ
KDtpDm2ecQSHLhfw3FhlRV2EQd3Jq84gaci+dHGOFSWzrmrWs98CZBtRK/9J
VqR8XSRdpeIWmHSOefu0jxWF9vscX5K7DYyXtAyFOliRxER5T+HqbVDjzfQv
u4EVPYy3/8b51RVkBrtroPJt+5PsaV/uuIOrSUZjky9YkbN/re1jdS8Q+W4C
a49jRa+OvTvSbOcNKhrcY0sfsyJhTZk8YrwP4P8Xo/7QjxU1pMqji/x+4Cyv
WIqrBytqKx2pyVfwB26HCldMnVhRrKjf0rFf/qDFrPXVoSusqP9fl4u61T2w
6WZBv/MSK8ooZkmzkwoE0hF/TDa1WVGAq+b9N2uBIKSCndwMWFHvKeGQgXfb
C0JQw9F5HytKT830vJEQBhwUeqqNdrIib5cRyJETDhIv2Aqe4mBFRn8eP82p
fQAW/YJbuDZZkJv5fcbw/RFAJJ73wNoiC/r6NrX6le1joJOXHjAyzYJm59Yv
qlyOBDlDn2ULv7OgcLqEvXLlUaB3RffBs04W9MBbN7jI8wlg4Rr+EdjIgrJa
Gr/GK0UDq1NbMRfLWdBjA/XE590xYHea0vJiEgvS92RpmPWIB2of6y4MxLAg
5frosx/dE4BrmzG1+iELsqxYemThlwha6D2N43xYUI7x/m8lb5PAJj9LgZ8r
C8o4qE882P0cHJSLJdk6sKD1k89itthegOCr70pPmLKgbPk3x0vrU8A7bxUe
4YssyMe1Q2vdIxWMRLc5ELVY0G9lCUqdVBrAKmf39iqxoMp/+fHMGS/BX7FD
/t57WJB0uBmBdyETiGBl3Vd3sKDl+YGnXb1ZQMdA86gWGws65TPYpFpPBa+D
7EYE1pkR/82iQKuv2aD7+cpJpgVmRLbxFy9ufw2Yi0OipyeZUSjftYHNXznA
ajxDtaKXGUWe4+fuOv4WRG4ee57ZxoyO6juGccrngfKdlYsRdcyoofP80V9d
eYBPfSTzykdmRKw96xIiVQCas/YR6RKZ0YLE0DEzwSJgMY3oXJ8wI5LjZ9HN
wSIwL3t1bTycGYUpLZcLZBUDnoqs3w3ezMiLvlYn89x7kMGgMQpdmVHN8dOd
vuIfgPy5qf4CB2Y0PfP6aB7rR2DUcaQp3owZnfrxzZk0Xgp+7W6vZjNkRsls
VwVyh8qA1xU3mq82MzrXd/5syo9y8HzyQ941yIweXxiqLKNDYISgEn1EmBld
FWGtMTT+DG6rjT14uZsZyd94r1+4/hkwPgy5v5ObGf2+MHbZ5OUXsH9Xg9sG
PTOa4FYpOMRQBd6bOjo6rTOh27YszW9Lq4BGGuX6yAITErhxmkfSqxo4HDIw
qhllQgUV+O53xBrwz2VZR+k7E8qoOvlwf18NiHifcC63kwntaDqerFNYC/JV
Bk7GVDMhVBbyNcqzHiwZX99rQd2Op1h98YtpMwh5QdzZnsKE9Fldm8ePtQC+
sdccaglMyNiUkZVKawFKzrNbB8OZkIKB4gnzkVbQUPRkJfkeE5IWjOB+6tUG
zNePzXF5M6HWtM3mB7vagX/wnZHlG0xod3PEfTWLDsDVsKfP/hoTMtfpiNcn
d4I0ror276ZMaF/kw86C8k5QlURf9eU8E2pcLi9nPPoNkAofZD0+zIQeGZ5Z
8zLvBc9WDqXQSzKhl8W7VOIU+4A0aIl3E2JCBuUtpy7v6QcXannCL3MxoTl2
sYTEhe9giKPkXhORCe3pF+S/MzkAXC4ae5+i39ZLzP9t1c9BEDP43GH/AiNK
uvKoEGwOAXFx3DrxNyOy6h+nOxg2DIrtR8zYRxlRavKZfiW+EdCzKHFhoYMR
CXexX8BVfoB95LyjtGJGFBrU+etIyxhwHJXsf5zLiK7VWGKPI8ZBRVlqsEUm
I2Jo3Dy9qjcBzG5G99HFMiJb+qiWjJmfIOcMObjtESPqIz5hUKv+BTb2Bh15
GcSITBbFtd6kT4KkJvcgVTfG7f/5PGui+xSYyvxzmPcmIxJKOCUdYj8NlPxs
e8euMaLcgYxWks0M6D1scjjkIiOSutQybnxyFuyOwnpq5RiRImPxWw/veWBr
VxyYeJAR1WUxsS3uXADvTx2WuSHKiPIDD1bJlCwAo3mhQPIORlTy/FuoOfMi
oNYlHPpOYkSW4hFYYtEiWE7j7n5Dz4iIK5S8vfZLIFaf8dCFeQYksOfg88gf
y2D84N1vgpMM6PyplLIG6gqQZ1wKmB1mQC1/c6d+3V4Fne8muqJaGdCSphvz
DYF1wLOz3r8jjwFthIUVKJRugmszKgczqAzojtsvF/F3W+BddVmnWwoDEk5+
kytlQoD6HrlSuyK344lZCqVY08En3VEdxk4MaExT5LdzDgMcySP5SV3ftm97
6F12lhEeDQs8sG7OgKZduL76/GKELYpuvknaDIg3rmy+5QQz5HxmJDl4iAEV
RFjOCXMTofnt1ra34gwoI+yQkV0nEeZqatz138uAIME+TjiZBLU3lNqE2RlQ
W8PMjBNOhg/NBH2uTdEjL94Taz4NnLD/eLzE8VF6dO/Bv6gXVyhQmoOrlamf
Hs0QolW1+ymwvoJeIqueHr151/FyfJALkoTGm39l06OTnAe7jLl5YH8Sa/1Q
Gj2y0z6aW5jBA9/sPlj9LZEedRm7iI8p80KdHc5lVeH0SMwqbeKAx04Yy7xG
TbWnRxEzRZSWvbuhbaBAerwVPdpyoZy507YbKhLgi8cm9OjUhOOL0gf8sH81
8OldDXr0k1qp50YWgCLT7PeMpeiRveJQ18dzgvCv3ZG7OiL0SOVnPolnhxCs
GtfzVOenR/y8r+VZ7gtB26E4x+MkevRtVJbNwlEY5rYLX+aapEPd7F8CYmxE
ob+OqiHrCB2qkxZ9YjMlCnUbbXS3euiQ6PkfP93cxODf6tfq07V0iFOwa8eT
KHGo9PH4sdpXdMio2czw/cJ+SFYwOoxS6ZB1Bles/VNJOFDoJVWSQIcOvarl
mz55AN57QxPKCKNDe6ajRQqipGBNyjn2ADs6VHJyzcXT+RBM3OvA6mlJh6DE
l7ZxWRl4IzGCwcmYDinxDIo3rMpAjpj2VdNzdIh1QiYqW+MIvBhiNn7iAB26
SSz/PE8vCyUY/YcPC9OhxbbvouoesnDZP61fYjcd0p7b7D42IwsTvSbaeIh0
iL/73Q2OUTk4dPMWbfYnAS24Gp4QnTsOHS4GxVOpBLTnfcFmXtJJmLr5UU4q
lYAGkjKm3hxXgl3U2abXCQQkapAh9aZVCeL/LjO9DScgLbT/ySg3BnkyZV2K
HAiIqkutSiqF8JyOLbuCNQF5hp30ZFXAoe/ac+p7MwLqBF6By1E4/KlNHCzV
JiCFW2slnOdPwfLlQc3PR7a/Zw/J/O4+DedTeSdUDhDQjEkl6TGuAvdrad6r
EiagCS0oKZStAqNSit/XcBNQStub1P2BqrD+Cb9m8q8tWvMr58/Pz6tBAXm3
zZJbWzRrrpTaOQ0NGBw+dKzUaouW4WNqQN+pAWcHNG9U6G/Rqpis/9y11ISV
ISLdlce3aEGS7VzdAVrwZk9zfuvqJk17YecUy7A27D6k9LNjcpM2HXFOz8Lv
Ajx9L3Nfd98m7auMktsxig7cefDug4HyTdp9WprcpSIdWOEjZf07YJN2s7Fn
KJCiByVbnz6bcdmkyS4tYH/s9eATcbq2uaubNN7iebFv1XrQpukbWDmzSXvF
ra15OFAfcgoF8TGRNmkutX7uQRwG0OLLYP2+J/9ot6JO2RFcjaA6tmL9PeAf
zaeQjmo5bwRlSiiEpFv/aE9+q8ABF2O4kX3q2G7dfzTnF+IcKl4mMP7Jy6Qd
lH+0lN4HVk4vTaEfuUy+bWuD9u2a9a0rcmbQJrijJfLPBk0m5tvd5CozeMyL
iYmjeYNWdnSDKjpnDlssr99kjdignVlwrvAvsIAlfX4sX+9u0KqEUzUojJYw
2SA+NejmBo1h6GfIsKEldDhX20l/foP2+0m0giHBCrIePQj+sW3Q3O6mqI5a
XYWnCH845sPWae2rnx452tlASS+WV3l31mknpoFpaosNpPwVVHGyW6dtCpC/
n1O8DgcmdDymzq7TEiv00lk5baFXc8HgOMs6Lavb9/jTBjtYkOye1xe0Rlu7
JqSX+OQmTOB7rJHotkabu6pt/YzbEfo/yRo1sl6jnbLcyDsd4wi1g7v5ulTX
aBZZ5xUfJznByZsnA1oY1mhqXDdSioecoQi2qVsVsEp7PznXrHr4NmzhwqQT
XFZpJlXFTUMet6HvuDfzzaurNBkp4yC1T7dh7+PVjzxnVmnFApcKXAxdYfTI
X9FrrKu0S9GjMjbhbpAx9Pci/eMV2hFH+UD73Z6wwFSqpctvhZZ/ICefwckT
Why1y852XqGtFWXlu1R5wrLecXM9vRVaGY/jjQ7XO9Dt0MjXVN4V2s0GH/2i
715wvK07AU9apvXxvTXV6r4LY7J2ufI8WqZd9utOvaPkC0/7GGr/vLtMW7nN
PXzvhS9MFu+gj7yyTPsUxT1xwN4PXvJsvjEoskxrxgL1xu/7w5q91ZjvqyWa
4PE4rSOK9+Ar28Lh0uJFmtiuHep+C0Gww+qFoGbmIs32IMfuTYVgSDB7YNb7
dJHW8PvV+rJPMDTUvdqz4rpIk33w4oMJawikP7mj9bjcNoupKdaLhUITttvo
7du/ND+5wozy2+GQlCv74iV1gXbF72x639XH0H4h3/RB4hxN38ZE+6D4Uyjj
y2TMLPqbpiqgstShmAL5P7bE/WT8TfO0EAph0k6BTEvPuurGJ2kMQZ539lul
wP6bshcfZ0/SmjfWtUB4Cgw3u3KBT3aSVrOHw/JtTwqcUP5wRurUL5q63C/9
K26pMGXdQVb7ygRty/zlftHkNPhQ4cStI6cmaH24kMTq2zTocZshj1t0gvbC
Qtrp/ac0qP074dC38XGaxgk+gfnRNPivt1rSwnGc9kndqERL6iU0+Sgk6HJ3
jLZD2WTRM+8l3HGngy322Q8aOxu9aOGrdLiytcr1x+sHLXHXtbHUD+lwIFiQ
76zJD5rLpbpN59p0SI2xF1vj+0Fr/3hi+O3PdAjyCJh57AitQNPSOFc8A9pN
SDtKRA3T+tKuMKYlZEBtRz1XP+dh2qlE0d8RWRnw2KKHV/eFYdr0YrLd5aIM
uEn/JTicY5h2+cuJA9EtGTBmn/GLmQdDtK64rva7TJnQ9zUp9Sb7IO3Rn3Qf
VbtMeO6DwRvBhgEaE7tCprRbJuT5mvKhNXyAdoJ6suOvfyZ8NSLfdpx1gGbA
zOwjHp8JO3ZfZdik/05jGYseJlZlQqnQUuuIlV5a/p3axVm+LLj4lNkFL+ml
RQWaeYyIZEH0Utd33q2XNujAZ1gknQUNaBOxhgs9tK4YlcQtmAX9l3bU7Jvp
pi2oNdkesM6C3645SL390UXbehwiPf0qC1Z811EozuyiiZk/xL3ys2Cm4XHV
crsuWuHiu4sz77Og69lNs/o/nTSuYv4/D75mQYp0ZNTEegdtPoF5R8qPLLic
7po8U9FBO/r2zHnbySw4sNf49WJAB23hYYUT31wWzOEUqWJg7aBd35IaPbKZ
Bc8tFK4I8rTTBvc6NJ/ZRYVHHOKZ9n9ro1lWUx7r7KVCvjEfbpnENppt7lUJ
VVEqHO86I60s1EZLPOx+cVyGCu99/HbFSLqVNt1cu7z7DBW6MSw/Eg5rokmV
yLkY3aRC1UVa1mHOJpqbzYmczVtUyD0R+gl72kjTnlGNe+xOhbl1/IvGqQ20
mnObc7f8tuNHAdMnH+potn4uNUqRVPgukMU9BdbRZKoDEk/GbI/n1vI4t6qW
ZmuRuSYWT4WCxlZf6lpraJcIn5vKXlChkVCwFMNkNe2QvkL8+hsqlOC+oMrl
XE2ri2rNNc6nwr8MfOaCS1W0CRenfenvqDBq4lWUEn0VbY2ce33zIxXW5Tau
3Ob/QnsxmS9eX02F8Smx3PdSPtMWk66ER9RSoc2TK9KREp9p2U/71kEDFTK4
z13Jkf1E+/pR69L1Vir08JKKqH1aQYPHw3m7e6lQe2a2621mOU1O1eXUev92
PlYlgrElZbTiM2M15EEq7Dynmm/V85GW3d9wYH2ECnPKSWtnJz/Q+m81CneP
UuH9o62nD6+/p9VgjgUvx6lQbrd5x7pACc2TFNTJPEmFpEdie0cOFdPsJ7/c
S/5NhSOE39Y1oIj2xlx2U2x6u76fHssxFoW0+Kqux5t/qNDWFODetwpoNIep
Mt05KsRbGMMs7+XTHpH/jEXPU+GAk+hx07NvaZdXF/TH/lLho0t51ZL2b2iB
IQ2v/y5SoTLEjBYfvKaZ/1IWX1iiwt8Sdb8+vXlFU/W2qRlapsJEjkveEc1Z
tI9mY0nlK1R4bukH+fJcBo1c3/wqbJUKV747J+/fkU7r9CxaVF2jwqyqf4f/
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
wq5rCZM8MxQOM7kzPP/Xl/rt/wPqWyxY
        "]]},
      Annotation[#, "Charting`Private`Tag$12412#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.502, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-2.4, 2.7}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6998206376293*^9, 3.699820648099432*^9}, {
  3.6998213836139636`*^9, 3.6998214475401325`*^9}, {3.699821482172224*^9, 
  3.6998214855372124`*^9}, {3.699821587684363*^9, 3.6998216124603014`*^9}, {
  3.6998217985263777`*^9, 3.6998218023026915`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"raw", ",", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sinc", "[", "t", "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"t", "^", "2"}]}], "/", 
        RowBox[{"Pi", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "6.`"}], ",", "6.`"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699820749648657*^9, 3.699820783378291*^9}, {
  3.6998208168152533`*^9, 3.699820824850175*^9}, {3.6998210994776697`*^9, 
  3.6998212142141438`*^9}, {3.699822746149747*^9, 3.699822761254984*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DxX7tbTN+H5m56crXXmOh4a9NJVVqO+ZsC6NemoNlYb/njOI3dnDhFa94S+x
cjQsW3ZUr6WJCQrcFiublWnYjWU4J/WaCZdbKmy4NWm4zeguh2QVE+in7r1z
RjRcYLkzd+0zJjhqccpk7qDhVsu8RNOnTHi5dN7q/T4aHhdIrmFkMuFYjEmX
qR0N393LeNQVy4RUmG1Z5UfDyi9/+A66MeF7qC3FKoSGE4pntJ+dY4KxZaNZ
ZDQNL5u93br1BBOGJ9Lrf6XRsOE4SQ7YywR1GYvqjmoaZp/Yjg0rsuv7awWH
YCMNW9x9tTFRigkt+WoId9DwYAHrIYXC7tcdnOU5gzRsTbm9Qpfdz8c29/Yb
cYlgSebqtQ+rUyDVMahzuaII1suo7X9mkQL8XmcaFVVE8ATLopHTJAVcIndW
q6uL4I53G6ZlNqYAei6Ub6Atgp1t4o2f0VPgI1dU2DFjEWz4pFTgbk8yyDLj
jZIcRHDKdvu+2+bJEN+ZnS/zQATrMnme/lVMAo6R0EcKWSJ4/NNIwh9aEpxZ
OsdckyOCK9t4uN4tJYKewrrwzc9EcMLS/rPaHYnQ7VzoeLRGBHd+Xnjk5JsI
EkJlcolDIrhwesA3sisBorY1hUsrieIWHnLT50I8bK/M0H6vKoqdyiTyPxyO
h9+bvfqZGqJYp1nDQMMoHs7orFFdrSOKVVuln6fQ4wGrBL9aZyyKj7YVFU5W
xsG0sMkvY3tR3CdNfadCiYN9vWWOF1NE8aU6n+170u8B1fmJ0StJMaw3qFUw
TWLgVHqcSI+0GF4MbEj/8ygGyrtufhxbIYb5n/twU2/HgNMW62tiymK49K2r
2ubjMVAjQCm01xXDV97PZ7/+GQ3XHlxcxXFYDHMb7ome046G4b71HIbxYvjx
380nPI/fhkqTlxXFMuJ41jvtb11MCDh8STS4JSeON1vfDDrqFAL83jdKDiiI
46Fq7xtCOAQsXhg9n1YTx4ddvuXWTQbDsFpzzppN4tg2I7Xl5a5goNIGkpiH
xfFasiY/WzAIbPqErgXeFccC+yusFDMCgNt9auFgvDi2Luo90nwjALLE2q4o
JotjI4+3R1OtAuC7WewlkiGOTzvHLy+mBkBg5UqnX4XiuGl/fnPY9ZuQm7HR
6mKbOOZXVoqds/GHPxdsdS2pEtgkeNDiOvKFE/qTYaJiEtjmd0n4BXlfqOPy
+tIkKYETxXVNeP/5QGRcbLjxCgm8+aXjT11fH5Crah7Q0pDAc0w/L+5Ab9gq
seW20C4JbDETm3no/nXwKZUaIbcksPGqT0WpAldhKCDT8HqIBK66XxBX2e4J
pvt07uhFSGDfwUw55WRPEBnatzX3rgSmVc5Ptml6Qiol6G5ShgSGHvq1pKMe
QOx+YPcqCTxqWxA0WXEFOPnaE9T/SOCF+Z20rDJX4A12o+tzSmKr/A9KgqGu
ICjAuGPCI4kbeoc1iJUruz6tw49TJDF9xuSKysIlUKUNe99eIYm/x6c2f9S7
BHsZvxxmDSWxLys8sj7aGQ7EJ3/+t00Sp3atPjuv7wxW0ui48Ha2/dWhg3Wf
L8KJ5QGWSnslcUKL0NieDRfhijx152EbSTyyXPzjt/fnIVlFYV2ZtyROr3FW
HNl3FtKyah6/9pfE8yyZAkHOs5Cp5qjSGSiJV7S21NYXOkGees7KyUhJLOB/
v1JSygmqNXXF5e9L4utVfnk/Rh1hVG/Xoj9IYrmC+O1HH58CXVPX6l0cdNxt
c7VxMd4eQjYIsUSX0TH3TNvFB3b28F72wfI+PjreVcx8Wa9qD/4zXW6ONDpe
NbVh29VSO2hJ3KQSIEfH9YbrHXrrbMFxkiO8YgsdL6/v7zgQaw2lPQkvAzAd
//krt8tUxxqo1Ru+mpnQ8YDBFhm5jmPwLPbk1n4zOtaYNmx0Ej8GHLh+ev4o
Hbcc4Q46xTwC8TG3D2ldpWNlv72laz9Ywvh1Vf+F63Qsqna8rjbYEtiHn9xK
XzpGdqmj6zZawpDBLN+eYDp+n/jc2CXqEGh9tSx1iqNjP3rRt2jzg/BGT04+
4zkdB7e/XDo1vx9kFV6YnS2hY1lOi5To3P3gImzuub6Cjt/qD0XccNwP9C9+
bVBDxxcGhtRi3pnDidCvN9930LG7f6rn6oR98Ot9zojkdzqecjV0+ZdmBibn
66P2zNNxmr5x25XlZhCxNKh/6xcdm+qLrU+L3QUrZZaHzHEx8Lg3U0soZifs
OByi1iHOwF22rvz9yTvgbtups1EbGfhvjeZS0z9j+GjnJ1a/iYHnuZf7rrlj
DCrTyaX/DBnYzfLZRqqqMZRSOwWdtzNwJNS2WVsawRczoyd7DjOw4Rltpdc1
GNbVyU0IXmVg8HdhPWwyAM9Dm+8a3WDgK6/6TK+vMoCqoUNbrvkxcMs141/c
VzfDQe6I8NEQBs6xq0oX0doEXnhJoz6Rgefu8pb6VOhCzVt61z8mA/+SEL+5
TUUXqLYbbuhlMLCStqt80J2NkH7DqTnzCQNvt2mjBV3WgfrSngu3ytm8VOhd
ar4BxHbNSlYQBu5ZnI1eal4P1n3UyrkaBg4o75uN2bMeWAv/UU82M7De4y1f
nh7QAvrGZ7lGHxn45oF/imM/NMCu5q3ltQEGFnstfDdGQgOyD4z/LRhm4Kd0
/vhwPXXY4qqwbxWLgXkvyfTsCFWDQM6tC1az7Pu3+/d9L1GF1qgj96MW2PEt
6O8hkyogs/LKjvolBp6wZ1GylFTg/75Pxv//ffL/AH+lR/g=
          "]]}, Annotation[#, "Charting`Private`Tag$17590#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$17590#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-6., 6.}, {-0.037765370500285556`, 0.9999997714074927}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         TagBox[
          TemplateBox[{
            RowBox[{
              StyleBox[
               TagBox["InterpolatingFunction", "SummaryHead"], 
               "NonInterpretableSummary"], 
              StyleBox["[", "NonInterpretableSummary"], 
              DynamicModuleBox[{Typeset`open$$ = False}, 
               PanelBox[
                PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAEcpZ8v//F8DBzsQQnGEmvwvyOxGv
NxfAYJGSEALJQ7+9xr+3hF4WwHEzoQKrSFm/boH3gr6TFcBFY7+CL71ovwYP
3ZPyzBTApbh+wwckdb9WSWQsTfUTwEyw+bdLGoG/pWmf6QssE8Cund89GdeI
v6w2fC7xURLA+yBTDYZSkb+b1ga50HsRwDzzIt0Hbpa/iFxFaBS0EMBltJ7p
9NOav10eSz79tg/AYKKUxrwznr+nT3P1mSIOwE5JLP+61p6/wCb3NyuWDMAh
ncNRML+bv0pXvokJ6ArAHYDlU+2Ckr/RU+0ksFYJwKIXD/zedGW/yalfz6Oj
B8AWoxMfBC+YP4+lLQWM+AXAwwp516b+rj9TbWOEPGoEwHabLvoPH7s/iI7c
Ejq6AsDszK6qDXXFP7p7ver/JgHAxJzOJpFJzj+6hMOjJeT+v0ns/dbVpNQ/
nV3DiDSK+7/HDSMJ8Z/aP3nOkgDUafi/fR6TuVBF4D838uiWDQb1v/3unsGs
ieM/8K0OwNfb8b+/OkNHRoPmP41q1/8Vg+2/X8obS3M66T/93p68sMfmv+BD
TuQIzus/Y4MFn2x/4L9ebFSI/bztPxkb83y5YNO/bCTffkQ07z+Bd+Fa+Ai4
v3EpFVw47O8/tf0PEezXuT/oRrtqI+nvPzSRJaXL+9M/qt0l6Hgn7z+IYWT9
rE3gPzlyrSsmyu0/PGPH+qF95j9SCNoznefrPyz/HLtiNO0/ZHobBv5a6T+T
tekqAbzxP+yyOrZWoOY/rzi+2TYh9T+OQrY+n2/jP9Ajw/XbTPg/FzkNVSth
4D9TwxD7l2j7P0LdpSc83to/9q/X4bnH/j/zOI+nctXUP06C55ql9gBADnYE
W3lvzz8x0581IasCQCOc5ihTw8U/RX78RKhXBEB6XdqZbLu7P1xd8Qpn5wVA
Gh9RMorhrz8C46LB2JgHQDnIP/dS/pg/qpzsLoItCUDoTC69yStDv4Sw2hA3
ugpA+HHj0J0Wkb/taoXjnmgMQPDZhUEeF5u/WVnIbD76DUB+t9F7Xbeev1Tu
x+aQrQ9AZrZqAfY/nr/B7rVqd6wQQGjN8RRa+pq/WQBUPcJzEUAozcSKgp6W
vzhlUIjmSxJA13WnBxd3kb8Z5JiuphUTQCGDCPALyom/QbY/TUDwE0BU8OMf
OkeBv4K1OKbfxhRA2LDIHhR1db/Ezn3aGo8VQNunlSSzFGm/Tjshhy9oFkDq
voBhRWNYv9nBEA/gMhdATvU9b9xFRL8Rylny//8XQMHOxBCcYSa/KHLrjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$17854#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{-6., 6.}, {-0.030116006683848888`, 
                    0.997585468148186}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "6.`"}], "6.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAEcpZ8v//F8DBzsQQnGEmvwvyOxGv
NxfAYJGSEALJQ7+9xr+3hF4WwHEzoQKrSFm/boH3gr6TFcBFY7+CL71ovwYP
3ZPyzBTApbh+wwckdb9WSWQsTfUTwEyw+bdLGoG/pWmf6QssE8Cund89GdeI
v6w2fC7xURLA+yBTDYZSkb+b1ga50HsRwDzzIt0Hbpa/iFxFaBS0EMBltJ7p
9NOav10eSz79tg/AYKKUxrwznr+nT3P1mSIOwE5JLP+61p6/wCb3NyuWDMAh
ncNRML+bv0pXvokJ6ArAHYDlU+2Ckr/RU+0ksFYJwKIXD/zedGW/yalfz6Oj
B8AWoxMfBC+YP4+lLQWM+AXAwwp516b+rj9TbWOEPGoEwHabLvoPH7s/iI7c
Ejq6AsDszK6qDXXFP7p7ver/JgHAxJzOJpFJzj+6hMOjJeT+v0ns/dbVpNQ/
nV3DiDSK+7/HDSMJ8Z/aP3nOkgDUafi/fR6TuVBF4D838uiWDQb1v/3unsGs
ieM/8K0OwNfb8b+/OkNHRoPmP41q1/8Vg+2/X8obS3M66T/93p68sMfmv+BD
TuQIzus/Y4MFn2x/4L9ebFSI/bztPxkb83y5YNO/bCTffkQ07z+Bd+Fa+Ai4
v3EpFVw47O8/tf0PEezXuT/oRrtqI+nvPzSRJaXL+9M/qt0l6Hgn7z+IYWT9
rE3gPzlyrSsmyu0/PGPH+qF95j9SCNoznefrPyz/HLtiNO0/ZHobBv5a6T+T
tekqAbzxP+yyOrZWoOY/rzi+2TYh9T+OQrY+n2/jP9Ajw/XbTPg/FzkNVSth
4D9TwxD7l2j7P0LdpSc83to/9q/X4bnH/j/zOI+nctXUP06C55ql9gBADnYE
W3lvzz8x0581IasCQCOc5ihTw8U/RX78RKhXBEB6XdqZbLu7P1xd8Qpn5wVA
Gh9RMorhrz8C46LB2JgHQDnIP/dS/pg/qpzsLoItCUDoTC69yStDv4Sw2hA3
ugpA+HHj0J0Wkb/taoXjnmgMQPDZhUEeF5u/WVnIbD76DUB+t9F7Xbeev1Tu
x+aQrQ9AZrZqAfY/nr/B7rVqd6wQQGjN8RRa+pq/WQBUPcJzEUAozcSKgp6W
vzhlUIjmSxJA13WnBxd3kb8Z5JiuphUTQCGDCPALyom/QbY/TUDwE0BU8OMf
OkeBv4K1OKbfxhRA2LDIHhR1db/Ezn3aGo8VQNunlSSzFGm/Tjshhy9oFkDq
voBhRWNYv9nBEA/gMhdATvU9b9xFRL8Rylny//8XQMHOxBCcYSa/KHLrjg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$17854#1"]& ]}}, {}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{-6., 6.}, {-0.030116006683848888`, 
                    0.997585468148186}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", "6.`"}], "6.`"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
              StyleBox["]", "NonInterpretableSummary"]}]}, "CopyTag", 
           DisplayFunction -> (#& ), 
           InterpretationFunction -> (
            "InterpolatingFunction[{{-6., 6.}}, <>]"& )], False, Selectable -> 
          False, Editable -> False, SelectWithContents -> True], 
         "\[InvisibleApplication]", 
         RowBox[{"(", "t", ")"}]}], 
       RowBox[{
         RowBox[{"sinc", "(", "t", ")"}], " ", 
         RowBox[{"exp", "(", 
           RowBox[{"-", 
             FractionBox[
              SuperscriptBox["t", "2"], 
              SuperscriptBox["\[Pi]", "2"]]}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.699820760270547*^9, 3.699820783653492*^9}, 
   3.699820825193718*^9, {3.6998211088564243`*^9, 3.6998212147539115`*^9}, 
   3.6998227619601336`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"raw", ",", 
   RowBox[{
    RowBox[{"Sinc", "[", "t", "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"t", "^", "2"}]}], "/", "a"}], "]"}]}], ",", 
   RowBox[{"{", "a", "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.6998216567520466`*^9, 3.699821715402212*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.11049507538950064`"}], " ", 
         SuperscriptBox["t", "2"]}]], " ", 
       RowBox[{"Sinc", "[", "t", "]"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 9.0501770913767}, {{$CellContext`t}, 
      E^(-$CellContext`a^(-1) $CellContext`t^2) Sinc[$CellContext`t]}}, {
    1}, {{-6., -0.00017075538780625076`}, {-5.9, -0.00034952515428663235`}, \
{-5.8, -0.0006176672124683665}, {-5.7, -0.0009941441989047624}, {-5.6, \
-0.0014985127711741758`}, {-5.5, -0.002150223556277948}, {-5.4, \
-0.002967762070999366}, {-5.3, -0.00396763125435382}, {-5.2, \
-0.005163182289357301}, {-5.1, -0.0065633071048531956`}, {-5., \
-0.008171013165924815}, {-4.9, -0.009981908669184938}, {-4.8, \
-0.01198263380245537}, {-4.7, -0.01414928101987708}, {-4.6, \
-0.016445854011535636`}, {-4.5, -0.018822820883088474`}, {-4.4, \
-0.021215821677215935`}, {-4.3, -0.023544593444730068`}, {-4.2, \
-0.025712177314306472`}, {-4.1, -0.027604471161039885`}, {-4., \
-0.029090188334194703`}, {-3.9, -0.030021277337458387`}, {-3.8, \
-0.03023384930576139}, {-3.6999999999999997`, -0.029549649627512407`}, \
{-3.5999999999999996`, -0.0277780972392198}, {-3.5, -0.02471890021070096}, \
{-3.4, -0.020165239557225385`}, {-3.3, -0.013907495186666613`}, \
{-3.1999999999999997`, -0.005737469018638273}, {-3.0999999999999996`, 
     0.004546958825123071}, {-3., 0.01713682362825305}, {-2.9, 
     0.032206820083963694`}, {-2.8, 
     0.04990991330283213}, {-2.6999999999999997`, 
     0.07037194704754723}, {-2.5999999999999996`, 0.0936863900055127}, {-2.5, 
     0.11990936790969998`}, {-2.4, 0.14905513223910793`}, {-2.3, 
     0.18109211471928519`}, {-2.1999999999999997`, 
     0.21593971066380818`}, {-2.0999999999999996`, 0.2534659232665595}, {-2., 
     0.29348598536239817`}, {-1.8999999999999995`, 
     0.3357620551549101}, {-1.7999999999999998`, 
     0.3800040583752877}, {-1.7000000000000002`, 
     0.4258717218979598}, {-1.5999999999999996`, 0.4729778136244087}, {-1.5, 
     0.5208925714144779}, {-1.3999999999999995`, 
     0.5691492708492675}, {-1.2999999999999998`, 
     0.6172508486740365}, {-1.1999999999999993`, 
     0.6646774670113916}, {-1.0999999999999996`, 0.7108948738069334}, {-1., 
     0.7553633885294361}, {-0.8999999999999995, 
     0.7975473198641799}, {-0.7999999999999998, 
     0.8369246047315325}, {-0.6999999999999993, 
     0.8729964462450253}, {-0.5999999999999996, 0.9052967225553488}, {-0.5, 
     0.9334009393681486}, {-0.39999999999999947`, 
     0.956934506287517}, {-0.2999999999999998, 
     0.975580130874457}, {-0.1999999999999993, 
     0.9890841442996745}, {-0.09999999999999964, 0.9972615978544467}, {
     0., 1}, {0.10000000000000053`, 0.9972615978532199}, {
     0.20000000000000018`, 0.9890841442990848}, {0.3000000000000007, 
     0.9755801308750803}, {0.40000000000000036`, 0.956934506286881}, {0.5, 
     0.9334009393681486}, {0.6000000000000005, 0.9052967225558458}, {
     0.7000000000000002, 0.8729964462445498}, {0.8000000000000007, 
     0.8369246047319985}, {0.9000000000000004, 0.7975473198642138}, {1., 
     0.7553633885294361}, {1.1000000000000005`, 0.7108948738069257}, {
     1.2000000000000002`, 0.6646774670121502}, {1.3000000000000007`, 
     0.6172508486736412}, {1.4000000000000004`, 0.5691492708492681}, {1.5, 
     0.5208925714144779}, {1.6000000000000005`, 0.4729778136244266}, {
     1.7000000000000002`, 0.4258717218979598}, {1.8000000000000007`, 
     0.38000405837531714`}, {1.9000000000000004`, 0.335762055154488}, {2., 
     0.29348598536239817`}, {2.0999999999999996`, 0.2534659232665595}, {
     2.200000000000001, 0.21593971066380493`}, {2.3000000000000007`, 
     0.18109211471927647`}, {2.4000000000000004`, 0.14905513223928224`}, {2.5,
      0.11990936790969998`}, {2.5999999999999996`, 0.0936863900055127}, {
     2.700000000000001, 0.07037194704759729}, {2.8000000000000007`, 
     0.04990991330283479}, {2.9000000000000004`, 0.032206820083960724`}, {3., 
     0.01713682362825305}, {3.0999999999999996`, 0.004546958825123071}, {
     3.200000000000001, -0.005737469018638899}, {
     3.3000000000000007`, -0.013907495186675797`}, {
     3.4000000000000004`, -0.020165239557223477`}, {
     3.5, -0.02471890021070096}, {
     3.6000000000000014`, -0.02777809723922202}, {
     3.700000000000001, -0.02954964962751384}, {
     3.8000000000000007`, -0.030233849305761475`}, {
     3.9000000000000004`, -0.030021277337439277`}, {
     4., -0.029090188334194703`}, {4.100000000000001, -0.0276044711610231}, {
     4.200000000000001, -0.02571217731430795}, {
     4.300000000000001, -0.023544593444731594`}, {
     4.4, -0.021215821677215935`}, {4.5, -0.018822820883088474`}, {
     4.600000000000001, -0.016445854011534648`}, {
     4.700000000000001, -0.014149281019868492`}, {
     4.800000000000001, -0.011982633802462192`}, {
     4.9, -0.009981908669184938}, {5., -0.008171013165924815}, {
     5.100000000000001, -0.006563307104852717}, {
     5.200000000000001, -0.005163182289357628}, {
     5.300000000000001, -0.003967631254355965}, {
     5.4, -0.002967762070999366}, {5.5, -0.002150223556277948}, {
     5.600000000000001, -0.0014985127711742586`}, {
     5.700000000000001, -0.0009941441989047668}, {
     5.800000000000001, -0.0006176672124683084}, {
     5.9, -0.00034952515428663235`}, {6., -0.00017075538780625076`}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`t}, #], {
     HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6998217157778974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%16", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", "\[Rule]", "9.0501770913767`"}], "}"}]], "Output",
 CellChangeTimes->{3.6998217564962015`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"exp", "[", 
    RowBox[{"Pi", "^", "2"}], "]"}], "/", "25"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.699821983207574*^9, 3.699821988383235*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "50"], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "t"}], ")"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6998219801569757`*^9, 3.699821988618311*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "50"}], ")"}], "*", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Erf", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "*", "Pi", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], " ", "+", " ", "t"}], ")"}]}], "]"}]}], " ", 
      "+", " ", 
      RowBox[{"Erf", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", "Pi", "*", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", "t"}], ")"}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", " ", 
    RowBox[{"t", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6998219943891244`*^9, 3.6998220024609003`*^9}},
 FormatType->"InputForm",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]], "25"]], "Output",
 CellChangeTimes->{{3.699821991226778*^9, 3.699822005242818*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp", "[", 
  RowBox[{"Pi", "^", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "t"}], ")"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6998229498089976`*^9}]
}, Open  ]]
},
WindowSize->{1204, 833},
WindowMargins->{{Automatic, 215}, {Automatic, 58}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e7410\:67088\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 96, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[679, 25, 1338, 30, 121, "Input"],
Cell[2020, 57, 5471, 107, 235, "Output"],
Cell[7494, 166, 854, 18, 30, "Output"]
}, Open  ]],
Cell[8363, 187, 118, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[8506, 192, 274, 6, 47, "Input"],
Cell[8783, 200, 1660, 48, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10480, 253, 927, 28, 102, "Input"],
Cell[11410, 283, 2038, 56, 54, "Output"],
Cell[13451, 341, 2038, 56, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15526, 402, 347, 9, 47, "Input"],
Cell[15876, 413, 4773, 126, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20686, 544, 318, 8, 47, "Input"],
Cell[21007, 554, 284, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21328, 566, 668, 19, 65, "Input"],
Cell[21999, 587, 366, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22402, 603, 391, 12, 65, "Input"],
Cell[22796, 617, 123, 3, 30, "Output"]
}, Open  ]],
Cell[22934, 623, 116, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[23075, 628, 508, 13, 84, "Input"],
Cell[23586, 643, 1796, 50, 54, "Output"],
Cell[25385, 695, 469, 9, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25891, 709, 943, 21, 84, "Input"],
Cell[26837, 732, 2116, 59, 76, "Output"],
Cell[28956, 793, 3552, 85, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32545, 883, 166, 3, 30, "Input"],
Cell[32714, 888, 1871, 56, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34622, 949, 438, 12, 47, "Input"],
Cell[35063, 963, 237, 7, 47, "Output"]
}, Open  ]],
Cell[35315, 973, 720, 19, 47, "Input"],
Cell[36038, 994, 92, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[36155, 999, 154, 3, 47, "Input"],
Cell[36312, 1004, 11827, 341, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48176, 1350, 495, 10, 47, "Input"],
Cell[48674, 1362, 1919, 56, 74, "Output"]
}, Open  ]],
Cell[50608, 1421, 118, 2, 47, "Input"],
Cell[CellGroupData[{
Cell[50751, 1427, 193, 3, 30, "Input"],
Cell[50947, 1432, 1481, 49, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52465, 1486, 897, 26, 47, "Input"],
Cell[53365, 1514, 4031, 128, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57433, 1647, 998, 24, 121, "Input"],
Cell[58434, 1673, 702, 18, 58, "Output"],
Cell[59139, 1693, 498, 12, 50, "Output"],
Cell[59640, 1707, 2464, 83, 91, "Output"]
}, Open  ]],
Cell[62119, 1793, 164, 4, 47, "Input"],
Cell[62286, 1799, 115, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[62426, 1804, 1529, 44, 104, "Input"],
Cell[63958, 1850, 16575, 285, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80570, 2140, 620, 16, 47, "Input"],
Cell[81193, 2158, 711, 23, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81941, 2186, 461, 11, 66, "Input"],
Cell[82405, 2199, 796, 24, 56, "Output"],
Cell[83204, 2225, 284, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83525, 2234, 143, 3, 30, "Input"],
Cell[83671, 2239, 17325, 298, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101033, 2542, 1650, 46, 121, "Input"],
Cell[102686, 2590, 6621, 129, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109344, 2724, 581, 14, 47, "Input"],
Cell[109928, 2740, 31768, 541, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141733, 3286, 809, 22, 47, "Input"],
Cell[142545, 3310, 55334, 1003, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197916, 4318, 367, 10, 47, "Input"],
Cell[198286, 4330, 5818, 106, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204141, 4441, 101, 2, 30, "Input"],
Cell[204245, 4445, 138, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204420, 4453, 211, 6, 47, "Input"],
Cell[204634, 4461, 589, 19, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205260, 4485, 972, 30, 47, "Input"],
Cell[206235, 4517, 155, 4, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206427, 4526, 80, 2, 47, "Input"],
Cell[206510, 4530, 564, 19, 88, "Output"]
}, Open  ]]
}
]
*)

