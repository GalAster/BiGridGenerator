(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248966,       7711]
NotebookOptionsPosition[    182835,       6143]
NotebookOutlinePosition[    225759,       7052]
CellTagsIndexPosition[    225716,       7049]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["3D Zonotiles", "Title"],

Cell["\<\
by
Russell Towle
version 1.9, January 4, 2004
rtowle@inreach.com\
\>", "Subsubtitle"],

Cell[CellGroupData[{

Cell["Preface", "Section"],

Cell[TextData[{
 "The extension of the 2D zonotile function to three dimensions has proved \
very difficult. For several years I grappled with the problem, only to turn \
away in frustration. Not only do the methods employed here cost much time, \
when many planes are involved (say, more than twenty), but it fails outright \
to create many zonotiles.\n\nNevertheless, some lovely local space-fillings, \
of zonohedra tiled by smaller zonohedra, can be obtained. It is a curious \
fact, though far be it from me to prove this assertion, that, given a \
zonohedron tiled by some suite of smaller zonohedra, the entire space outside \
the zonohedron can be tiled by this same suite, as well.\n\nThese tilings of \
zonohedra by smaller zonohedra\[LongDash]these 3D zonotiles\[LongDash]are \
based upon ",
 StyleBox["arrangements of planes",
  FontSlant->"Italic"],
 ". Wherever three or more planes intersect at one point, a zonohedron \
arises. Any convex polyhedron ",
 StyleBox["ipso facto",
  FontSlant->"Italic"],
 " yields an arrangement of planes\[LongDash]the planes of its faces. These \
faces, produced into infinite planes, intersect, perhaps, in points outside \
the original polyhedron; and these points are the vertices of various ",
 StyleBox["stellations",
  FontSlant->"Italic"],
 " of that polyhedron. The exact relationship between 3D zonotiles and \
stellations of convex polyhedra seems an especially interesting subject for \
future study.\n\n",
 "\[LongDash]",
 StyleBox["Russell Towle, December, 2003.",
  FontSlant->"Italic"]
}], "Text"],

Cell[TextData[{
 StyleBox["Remarks about version 1.9",
  FontWeight->"Bold"],
 ": There is so much which could be improved in this notebook. For instance, \
variable names are often opaque; no matter whether a single number, or a \
collection of one hundred zonohedra, I will call it ",
 StyleBox["a",
  FontWeight->"Bold"],
 ", or ",
 StyleBox["qaq",
  FontWeight->"Bold"],
 ", or some such thing. Then again, I will sometimes go back and change a \
name in one part of my code, but not another, which depends upon the original \
name; and then all hell breaks loose.\n\nNew in this version: stellation \
diagrams, and a brief look at multiple stellations, and their related \
zonotiles; solid zones of zonohedra, within a zonotile; intriguing new \
examples based upon Platonic polyhedra (see the \
\[OpenCurlyDoubleQuote]Platonic Zonotiles II\[CloseCurlyDoubleQuote] \
randomization subsubsections); and the addition of some few references.\n\nI \
always appreciate hearing from people who enjoy my notebooks, and especially \
like to learn about errors, or anything which needs improvement.\n\n\
\[LongDash]",
 StyleBox["Russell Towle, January, 2004.",
  FontSlant->"Italic"]
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell[TextData[{
 "In an expedition to discover the El Dorado of geometric beauty, I am only a \
scout. Thus there is much lacking in this introduction to 3D zonotiles. For \
instance, what is a zonohedron? One simple definition: ",
 StyleBox["any convex polyhedron, bounded entirely by centrally-symmetrical \
polygons, is a zonohedron",
  FontSlant->"Italic"],
 ". Famous and familiar examples include the Cube; any right regular \
hexagonal prism, or right regular 2",
 StyleBox["n",
  FontSlant->"Italic"],
 "-gonal prism; and Kepler\[CloseCurlyQuote]s Rhombic Dodecahedron. And, \
generally, an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-dimensional zonotope is a convex polytope bounded by (",
 StyleBox["n",
  FontSlant->"Italic"],
 "-1)-dimensional zonotopes. A two-dimensional zonotope is called a zonogon.\n\
\nVery well.\n\nBased upon some unattributed PostScript code I found on the \
internet, which created the line segments of a 2D zonotile (a zonogon tiled \
by smaller zonogons), I wrote ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code to create the zonotiles as lists of polygons. The procedure is known \
as the ",
 StyleBox["generalized dual method",
  FontSlant->"Italic"],
 ". In extending the algorithm to the third dimension, further changes were \
made. To handle the cases where a 3D zonotile (a zonohedron tiled by smaller \
zonohedra) contains zonohedra bounded in part by \
\[OpenCurlyDoubleQuote]higher\[CloseCurlyDoubleQuote] zonogons (hexagons, \
octagons, etc.), I modified George Hart\[CloseCurlyQuote]s \
\[OpenCurlyDoubleQuote]zonohedrify\[CloseCurlyDoubleQuote] function slightly, \
and named it ",
 StyleBox["zedron",
  FontWeight->"Bold"],
 ". For the cases where a component zonohedron is bounded only by rhombs or \
parallelograms, my own ",
 StyleBox["Z",
  FontWeight->"Bold"],
 " function is used.\n\n2D zonotiles are based upon ",
 StyleBox["arrangements of lines",
  FontSlant->"Italic"],
 ", 3D zonotiles, on ",
 StyleBox["arrangements of planes",
  FontSlant->"Italic"],
 ". It is easy for us to construct and examine an arrangement of lines; but \
very difficult for us to visualize an arrangement of planes. For, one plane \
hides another.\n\nThe procedure is somewhat as follows: a set of planes is \
defined, in the form {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, where {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "} is the unit normal vector, and ",
 StyleBox["d",
  FontSlant->"Italic"],
 " is the distance from the origin. To every point where the planes intersect \
corresponds a zonohedron (determined by the normals to the planes meeting at \
that point), and to every region of space defined by the planes corresponds a \
vertex of the zonotile. A set of sign vectors is found, each vector equal in \
length to the number of planes. These sign vectors make the encoding for \
creating the zonohedra which tile the larger zonohedron (the zonotile).\n\n\
Some sets of plane normals {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "} (as for instance with the vectors which determine a polar zonohedron, \
which are easily found in cyclic order) give results which are largely \
analogous to those of the 2D zonotile algorithm. Neither the 2D nor the 3D \
zonotile algorithm can admit lines or planes with opposite normals, say, in \
3D, {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "} and {",
 StyleBox["-x, -y, -z",
  FontSlant->"Italic"],
 "}. To obtain admissible parallel planes one must use different distances ",
 StyleBox["d",
  FontSlant->"Italic"],
 "; for instance, to get parallel planes one unit to either side of the \
origin: {",
 StyleBox["x, y, z, ",
  FontSlant->"Italic"],
 "1} and {",
 StyleBox["x, y, z, ",
  FontSlant->"Italic"],
 "-1}.  But, when vectors are chosen from the octahedral or icosahedral \
symmetry groups, the options become more limited. For instance, in such a \
case one cannot assign distances of 0 and 1 to each plane (vector); the \
distances must \[OpenCurlyDoubleQuote]balance\[CloseCurlyDoubleQuote] across \
the origin, so, for instance, the one distance 0 is permissible (but this \
just gives the one undivided zonohedron determined by the set of vectors \
(planes)), or the distances {-1, 1}, or the distances, {-1, 0, 1}, or the \
distances, {-2, -1, 0, 1, 2}, etc.\n\nSo, the algorithm is in a precarious \
state, and not at all robust. I feel somewhat as though I were a witch, \
casting\[LongDash]I don\[CloseCurlyQuote]t know what: crystals, toads, sacred \
relics, and flowers, into an ancient cauldron. The cauldron steams and \
shudders for a good long while; perhaps the toads eat the crystals; but \
whatever it is which happens in there, I hardly know and cannot \
say\[LongDash]and at long last, out pops a zonotile.\n\nAs implemented below, \
the main zonotile creation portion of the procedure returns ",
 StyleBox["two lists",
  FontSlant->"Italic"],
 ": ",
 StyleBox["allpoly",
  FontWeight->"Bold"],
 ", in which the individual zonohedra are sorted into sets, according to the \
number of faces which bound them; and ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", a list of all the zonohedra in the form {center of zonohedron, \
zonohedron}. This latter allows for easy \[OpenCurlyDoubleQuote]explosion\
\[CloseCurlyDoubleQuote] of a zonotile, by translating each zonohedral tile \
away from the origin by some positive multiple of its center. It also \
facilitates selecting regions of zonohedral tiles, say, all tiles within some \
distance of the ",
 StyleBox["z",
  FontSlant->"Italic"],
 "=0 plane, or all tiles within some distance from the center of the \
zonotile-at-large.\n\nThus, some methods to select regions of zonohedra \
within a zonotile are sketched in, as well as to explode the zonohedra apart \
slightly or drastically, and to sort zonohedra into subsets according to \
volume, and then assign a different color to each subset. It is difficult to \
visualize a close-packing of polyhedra. It helps to explode the polyhedra \
apart, or to use animation to build up larger and larger regions of \
close-packed polyhedra."
}], "Text"],

Cell["Meta-Geometry", "Text",
 FontSize->18,
 FontSlant->"Italic"],

Cell[TextData[{
 "The subject of zonotopes tiled by smaller zonotopes is rich with \
ramifications. They relate to ",
 StyleBox["quasicrystals",
  FontSlant->"Italic"],
 ". Then again, zonotopes are ",
 StyleBox["affine projections of hypercubes",
  FontSlant->"Italic"],
 ", and under certain conditions, ",
 StyleBox["orthogonal",
  FontSlant->"Italic"],
 " projections of hypercubes. When we dissect an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-polar zonohedron into rhombic hexahedra, each hexahedron is a projection \
of a discrete 3-cube bounding the \[OpenCurlyDoubleQuote]parent\
\[CloseCurlyDoubleQuote] ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-cube. But only if we dissect the polar zonohedron into hexahedra ",
 StyleBox["in every possible way",
  FontSlant->"Italic"],
 " do we obtain projections of ",
 StyleBox["all",
  FontSlant->"Italic"],
 " the 3-cubes bounding the ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-cube. Then the hexahedra interpenetrate in a horrible mish-mash. However, \
any one dissection may at least sometimes be regarded as a ",
 StyleBox["hidden-detail-removed",
  FontSlant->"Italic"],
 " projection of the ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-cube into a 3-space. For instance, the 4-cube projects into an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=4 polar zonohedron, and if this zonohedron is dissected (in either of two \
ways) into four rhombic hexahedra, that is ",
 StyleBox["exactly",
  FontSlant->"Italic"],
 " a hidden-detail-removed projection from the 4-space into the 3-space\
\[LongDash]as \[OpenCurlyDoubleQuote]seen\[CloseCurlyDoubleQuote] from some \
one direction in the 4-space. That is, the 4-cube is bounded by eight \
3-cubes, and were we in the 4-space, and were the 4-cube opaque, so we could \
not see right through it, we could see at most four of the eight 3-cubes at \
one time. Some of the \[OpenCurlyDoubleQuote]detail\[CloseCurlyDoubleQuote] \
of the 4-cube would be hidden.\n\nSo we may at least vaguely relate zonotiles \
to hidden-detail-removed projections of hypercubes. To construct unequivocal \
examples of hidden-detail-removed projections of 4-polytopes into polyhedra \
tiled by smaller polyhedra, see my ",
 StyleBox["Regular Polytopes",
  FontSlant->"Italic"],
 " notebook (there is a hyperlink in the ",
 StyleBox["References",
  FontWeight->"Bold"],
 " section of this notebook)",
 ".\n\nTilings of zonotopes by smaller zonotopes are in bijection with \
single-element liftings of oriented matroids. I must stop exactly there, \
having already exceeded my own understanding of this relation. Works cited in \
the ",
 StyleBox["References",
  FontWeight->"Bold"],
 " section amplify upon zonotopes and oriented matroids.",
 "\n\nAny zonotope is \[OpenCurlyDoubleQuote]determined by\
\[CloseCurlyDoubleQuote] a set of vectors. These are sometimes called the ",
 StyleBox["generators",
  FontSlant->"Italic"],
 " of the zonotope. For instance, a regular hexagon is determined by three \
vectors, a square, by two. A few years ago I devised an unusual construction \
I called \[OpenCurlyDoubleQuote]zonohedral completion\[CloseCurlyDoubleQuote] \
(or zonogonal completion, in two dimensions). Given a \
\[OpenCurlyDoubleQuote]seed\[CloseCurlyDoubleQuote] convex polyhedron, say, \
the Platonic icosahedron, bounded by twenty equilateral triangles, and \
centered, let\[CloseCurlyQuote]s say, upon the origin, for each face, take \
its vertices as the generators of a zonohedron, and construct that \
zonohedron, rooted at the origin, and passing through and beyond the face. In \
the case of the icosahedron, the twenty sets of three vectors give twenty \
equal rhombic hexahedra radiating from a common point (the origin). Now we \
can discard the \[OpenCurlyDoubleQuote]seed\[CloseCurlyDoubleQuote] \
icosahedron; its job is done. Between these radiating hexahedra are various \
hollows. Find each hollow, find the edges meeting in the hollow, take these \
as vectors, and construct the determined zonohedron, rooted in each hollow. \
Now a new set of hollows arises, and the process is continued, through \
however many stages, until one closes up a convex zonohedron. In the case of \
the icosahedron, one closes up ",
 StyleBox["Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron",
  FontSlant->"Italic"],
 ", in three stages.\n\nIn two dimensions, given a regular ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-gon, one closes up a regular 2",
 StyleBox["n",
  FontSlant->"Italic"],
 "-gon, after however many stages. The procedure generalizes to higher space, \
and in all cases, given the \[OpenCurlyDoubleQuote]seed\
\[CloseCurlyDoubleQuote] convex polytope, one closes up, after however many \
stages, the very zonotope which is determined by the vectors from the center \
to the vertices of the seed. This zonotope is tiled by smaller zonotopes, \
hence, it is a zonotile.\n\nFinally, in the zonotile construction employed \
here, and in my ",
 StyleBox["2D_Zonotiles",
  FontSlant->"Italic"],
 " notebook (there is a hyperlink in the ",
 StyleBox["References",
  FontWeight->"Bold"],
 " section of this notebook)",
 ", \[OpenCurlyDoubleQuote]arrangements of \
hyperplanes\[CloseCurlyDoubleQuote] are used to set up sign vectors which \
encode the exact construction of the zonotile, zonohedron by zonohedron, or \
zonogon by zonogon. Here I will only remark that ",
 StyleBox["every convex polygon gives an arrangement of lines",
  FontSlant->"Italic"],
 ", and that ",
 StyleBox["every convex polyhedron gives an arrangement of planes",
  FontSlant->"Italic"],
 ". Thus, in the general, ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-dimensional case, ",
 StyleBox["every convex n-polytope corresponds to an arrangement of \
hyperplanes which determines a particular n-zonotile.",
  FontSlant->"Italic"],
 "\n\nBut these same arrangements of lines, planes, and hyperplanes, derived \
from convex polygons, polyhedra, and polytopes, also determined the ",
 StyleBox["stellations",
  FontSlant->"Italic"],
 " of the polygons, polyhedra, and polytopes.\n\nThe stellation of polyhedra \
is a devilishly difficult subject. For instance, there are millions of \
stellations of Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron. All are \
obtained by merely producing the planes of the triacontahedron\
\[CloseCurlyQuote]s faces. Let those planes be produced to infinity (rather \
than \[OpenCurlyDoubleQuote]stopping them off\[CloseCurlyDoubleQuote] at \
various discrete stellations). Every vertex where three or more planes \
intersect corresponds to a zonohedron in the zonotile. Every open region \
enclosed at least partly by planes corresponds to a vertex of the zonotile. \
However, the reciprocity between plane arrangements and zonohedra tiled by \
smaller zonohedra is more complete, yet.\n\nImagine a set of planes, with \
unit normals {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "},",
 " at non-zero distances from the origin, which intersect pairwise in lines, \
and in some several places, three (say) planes intersect in single points. \
Draw a sphere around one such point, of a size small enough that no other \
points are within.  Fixing our attention within the sphere, we find a single \
0-dimensional object (the point), six 1-dimensional line segments, twelve \
2-dimensional plane regions, and eight 3-dimensional solid regions of \
non-zero volume. Reciprocally, these correspond to a rhombic hexahedron, its \
six faces, its twelve edges, and its eight vertices. Hence the ",
 StyleBox["generalized dual method",
  FontSlant->"Italic"],
 ".\n\nI cannot doubt but that there is some extremely close and significant \
connection between stellations and zonotiles. It remains to properly \
characterize this connection, and discover whatever numerical and geometrical \
patterns actually come into play. However, it may at least be remarked that, \
if one studies the stellation diagram of the Platonic Dodecahedron, points of \
intersection are at three distances from the center; while in the stellation \
diagram of the Icosahedron, points of intersection are at eight distances \
from the center. Meanwhile, there are three sets, and eights sets, of \
zonohedra, concentrically arranged, in the corresponding zonotiles. And the \
correspondence, in detail, is even more exact."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell["\<\
Off[General::spell]
Off[General::spell1]\
\>", "Input",
 InitializationCell->True],

Cell["<<Graphics`Polyhedra`", "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Hart", "Subsection"],

Cell["\<\
(*faster than Cross*)
cross[ {ax_, ay_, az_}, {bx_, by_, bz_} ] :=
   {ay bz - az by, az bx - ax bz, ax by - ay bx}

collinear[v1_, v2_]:= Chop[cross[v1, v2]]=={0,0,0}

setStar[vecs_]:=
Block[{n,b,d,a,t,v},
v=DeleteCases[vecs, {0,0,0}, Infinity];
n=Range[Length[v]];
d={};
While[n!={},
t=v[[n]];
a=Map[collinear[First@t,#]&, t];
b=n[[ Flatten[Position[a,True]] ]];
n=Complement[n,b];
d={d,b[[1]]}];(*end While*)
gStar = v[[ Flatten[d] ]] (*set global variable*)
]
    
pToXYZ[p_] := Plus @@ MapThread[Times, {gStar/2, p}]

(*where p is a sign vector; whatever length gon, first two vectors suffice*)
faceNormal[p_] := 
  With[{indices = Position[p, 0]}, 
   cross[gStar[[indices[[1,1]]]], gStar[[indices[[2,1]]]]]]
   
endPoints[p_] := {(If[#1 == 0, -1, #1] & ) /@ p, (If[#1 == 0, 1, #1] & ) /@ \
p}
   
hemi[n_Integer]:=
\tBlock[{i,j},Flatten[Table[{i,j},{i,n-1},{j,i+1,n}],1]]
   
makeFace[{i_, j_}] := 
  With[{normal = cross[gStar[[i]], gStar[[j]]]}, 
   (Sign[Chop[normal . #1]] &) /@ gStar]

allFaces := With[{halfTheFaces = makeFace /@ hemi[Length[gStar]]}, 
   Union[halfTheFaces, -halfTheFaces]]
   
makeEdge[i_, p_, faceNormal_] := 
  With[{normal = cross[gStar[[i]], faceNormal]}, 
   MapThread[If[#1 != 0, #1, Sign[Chop[#2 . normal]]] & , {p, gStar}]]
   
makeEdges[p_] := 
  With[{normal = faceNormal[p]}, 
   With[{halfEdges = (makeEdge[#1, p, normal] & ) /@ Flatten[Position[p, 0]]}, 
    Union[halfEdges, (2*p - #1 & ) /@ halfEdges]]]
    
makePolygon[p_] := 
  With[{edges = makeEdges[p]}, With[{verts = 
      Union[Flatten[endPoints /@ edges, 1]]},
      cycleSort[ (pToXYZ /@ verts) ]
      ]]
       
cycleSort[verts_] := 
  With[{centroid = Plus @@ verts/Length[verts]}, 
   sortBy[ArcTan[(#1 - centroid) . (verts[[1]] - centroid), 
      (#1 - centroid) . (verts[[2]] - centroid)] & , verts]]
      
sortBy[fn_, list_] := (#1[[2]] & ) /@ Sort[({fn[#1], #1} & ) /@ list]

zedron[poly_] :=
Block[{}, 
  setStar[poly];
  Polygon /@ Map[makePolygon[#]&, allFaces]
  ]
     
faceCenters[poly_] := Map[cent[#]&, Cases[Level[poly,{-3}],{{_,_,_}..}] ]

edgeMidpoints[poly_] := 
  Union[Flatten[((#1 + RotateLeft[#1])/2 & ) /@ \
Cases[Level[poly,{-3}],{{_,_,_}..}], 1]]
   
vertices[poly_] := Union[Flatten[parse[poly], 1]]\
\>", "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other", "Subsection"],

Cell["\<\
signvector::usage = \"signvector[vecs], where vecs is a list
of n 3-vectors, returns a list of n-vectors with
components -1, 0, or 1. The number of zeroes in any one of the
sign vectors equals the number of sides of the corresponding
face of the zonohedron determined by the n vectors.\";

signvector[v_]:=
Block[{dex,x,hf},
dex=hemi[Length[v]];
x=Map[mycross[ Sequence@@v[[ # ]] ]&, dex];
hf=Table[
Map[ Sign[Chop[Dot[x[[k]], #] ] ]&, v],
{k,Length[x]}];
Union[hf,-hf]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
edgefind::usage = \"edgefind[poly] returns the edges
of equilateral regular polytopes.\";

edgefind[poly_]:=
Block[{a,b},
b=First@Union[ Map[mag[First@poly-#]&, Rest@poly],
SameTest->(Chop[#1-#2,.000001]==0&)];
Flatten[Table[
a=Drop[poly,i-1];
{First@a,#}& /@ Select[Rest@a, Abs[ mag[First@a-#] - b ]<.001&],
{i,Length[poly]}],1]
]\
\>", "Input",
 InitializationCell->True],

Cell[TextData[{
 "(*gives the Union of a list {center of zonohedron, zonohedron}*)\n\n\
tol=.001;\nwon1[v_]:= Union[v, SameTest->(Max[Abs[ #1[[1]] - #2[[1]] ]] < tol \
&)] ",
 StyleBox["\nhedraunion[v_]:= Module[{r},\nr = Split[Sort[Chop[v,.001]], \
(Abs[#1[[1,1]] - #2[[1,1]]] < ", "Text",
  FontSize->12],
 "tol",
 StyleBox[" &)];\nFlatten[won1 /@ r, 1]] ", "Text",
  FontSize->12]
}], "Input",
 InitializationCell->True],

Cell["\<\
getpolycent[poly_]:=
Chop[ cent[ vunion[ Flatten[Cases[poly, Polygon[x_]:>x],1] ] ] ]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*gives a list of the equally spaced generators of a cone*)

vectors[n_Integer,pitch_,fac_Integer,ratio_]:=
Block[{e},
Table[If[Mod[i,fac]==0,e=ratio,e=1];
\tN[{e Cos[Degree pitch] Cos[2Pi i/n],
\te Cos[Degree pitch] Sin[2Pi i/n],
\t-e Sin[Degree pitch]}],
\t{i,n}]]
\t
vectors[n_:12,pitch_:35.2643,fac_:1,ratio_:1]:=
vectors[n, pitch, fac, ratio]\
\>", "Input",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["\<\
(*restrain vectors to half-plane*)
(*when pitch=0, create regular 2n-gon*)

halfvectors[n_Integer,pitch_,fac_Integer,ratio_]:=
Block[{e},
Table[If[Mod[i,fac]==0,e=ratio,e=1];
\tN[{e Cos[Degree pitch] Cos[Pi i/n],
\te Cos[Degree pitch] Sin[Pi i/n],
\t-e Sin[Degree pitch]}],
\t{i,n}]]
\t
halfvectors[n_:12,pitch_:35.2643,fac_:1,ratio_:1]:=
halfvectors[n, pitch, fac, ratio]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
Z[v_List,spot_]:=
Block[{n=Length[v],fin,s,a,b,c,gon},
fin=hemi[n];(*make a list of indices for half the faces*)
Polygon /@ Flatten[Table[(*now create all the faces in a Table*)
(*1. create a single face*)
gon=quad[{v[[ fin[[i,1]] ]],v[[ fin[[i,2]] ]]},spot];
(*2. get surface normal*)
s=surf[ gon ];
(*find the vectors not involved in the face*)
a=Complement[v, v[[ fin[[i]] ]] ];
(*sort them according to the dot product with surface normal*)
b=Select[a,Dot[s,#]<0&];
c=Select[a,Dot[s,#]>0&];
(*now add the sets of vectors to the face, creating two faces*)
{Map[(Plus @@ b)+#&,gon],Map[(Plus @@ c)+#&,gon]},
{i,Length[fin]}],1]
]

hemi[n_Integer]:=(*indices, all pairs of n objects*)
\tBlock[{i,j},Flatten[Table[{i,j},{i,n-1},{j,i+1,n}],1]]
\t
demi[n_Integer]:=(*indices, all triples of n objects*)
\tBlock[{i,j,k},Flatten[Table[{i,j,k},{i,n-2},{j,i+1,n-1},{k,j+1,n}],2]]

quad[x_,ref_]:={ref, ref+x[[1]], ref+x[[1]]+x[[2]], mark=ref+x[[2]]}

mycross[ {ax_, ay_, az_}, {bx_, by_, bz_} ] :=
\t{ay bz - az by, az bx - ax bz, ax by - ay bx}

surf[f_List] := mycross[ f[[2]] - f[[1]], f[[3]] - f[[2]] ]\
\>", "Input",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["\<\
mag[v_]:=Sqrt[v.v](*magnitude of vector 'v'*)
unit[v_]:=v/mag[v](*unit vector in direction of 'v'*)
cent[v_List]:=Plus@@v/Length[v](*centroid of point list*)
tosegs[gon_]:=Transpose[ {gon, RotateLeft[gon]} ](*polygon to edges*)\
\>", "Input",
 InitializationCell->True],

Cell["\<\
toPoly[e_]:=With[{e1=(e /. Line[x_]:> x)},
Drop[Join[First@e1,Map[#[[2]]&, Rest@e1]],-1]
]\
\>", "Input",
 InitializationCell->True],

Cell[TextData[{
 "(*Carl Woll's vector union*)\ntol=.000001;\nvunion1[v_]:= Union[v, \
SameTest->(Max[Abs[#1 - #2]] < tol &)] ",
 StyleBox["\nvunion[v_]:= Module[{r},\nr = Split[Sort[Chop[v,.000001]], \
(Abs[#1[[1]] - #2[[1]]] < ", "Text",
  FontSize->12],
 "tol",
 StyleBox[" &)];\nFlatten[vunion1 /@ r, 1]] ", "Text",
  FontSize->12]
}], "Input",
 InitializationCell->True],

Cell["\<\
(* turn n-gon into list of triangles *)
toTriangles[vlist_List] /; Length[vlist] == 3 := {vlist}

(* treat 4gons specially for efficiency *)
toTriangles[vlist_List] /; Length[vlist] == 4 :=
\t{vlist[[{1, 2, 3}]], vlist[[{3, 4, 1}]]}

(* general case: use center of gravity as additional vertex *)
toTriangles[vlist_List] :=
    Module[{bary = (Plus @@ vlist)/Length[vlist], circ},
        circ = Partition[ Append[vlist, First[vlist]], 2, 1 ];
        Apply[ {#1, #2, bary}&, circ, {1} ]
    ]\
\>", "Input",
 InitializationCell->True],

Cell["parse[poly_] := Cases[poly,Polygon[x_]:>x,Infinity]", "Input",
 InitializationCell->True],

Cell["\<\
volumeSort[poly_]:=
Block[{q1,q2,q3,p},
p=Cases[poly,{Polygon[_]..},Infinity];
q1=Table[{p[[i]], hullvol[ p[[i]] ] },{i,Length[p]}];
q2=Split[Sort[q1,#1[[2]]<#2[[2]]&],
TrueQ[(Abs[#1[[2]]-#2[[2]]]<.0001)]&];
Print[\"You will need at least \",Length[q2],
\" colors in the colorlist below.\"];(*how many colors?*)
Table[Cases[q2[[i]],{{_,_,_}..},Infinity],{i,Length[q2]}]
]

explode[poly_, dist_]:=
Block[{c,d},
c=Map[ #[[1]]&, poly];
d=Map[parse[#]&, poly];
Table[Polygon /@ Map[(dist*c[[j]])+#&, d[[j]], {2}], {j,Length[c]}]
]\
\>", "Input",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["\<\
(*the volume of a convex polyhedron maybe not
containing the origin within*)
hullvol[poly_]:=
Block[{p,c,tr,a},
p=parse[poly];
c=cent[Flatten[p,1]];
tr=Map[Chop[#-c]&, p, {2}];(*translate to centered on origin*)
(*first divide faces into triangles*)
a=Flatten[Map[toTriangles[#]&, tr ],1];
(*sum one-sixth the volumes of the determined parallelpipeds*)
N[Plus @@ Flatten[Map[(Abs[Minors[#, 3]]/6)&, a]]]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*find indices of edges into list of vertices*)
edgedex[vertlist_, edgelist_] := Block[{e2}, 
    e2 = Partition[Flatten[Table[
 {Position[vertlist, x_ /; Chop[x-edgelist[[i,1]] ]=={0,0},{1}], 
  Position[vertlist, x_ /; Chop[x-edgelist[[i,2]] ]=={0,0},{1}]},
  {i, Length[edgelist]}]], 2]; 
    Union[Sort /@ e2]]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
rmoveto[pt1_,pt2_]:= (pt=pt1+pt2)
rlineto[pt1_,pt2_]:= {pt1,(pt=pt1+pt2)}\
\>", "Input",
 InitializationCell->True],

Cell["rlineto[pt1_,pt2_]:= Line[{pt1,(pt=pt1+pt2)}]", "Input"],

Cell["\<\
(*remove coincident faces; by Xah Lee*)
dePair[poly_]:=
Block[{a},
a=Sort[((Chop[Rationalize[(cent@#),10^-3]])@#&/@ (poly)),
OrderedQ[{Head@#1,Head@#2}]&];
Nest[
\t(
\t(DeleteCases[#,Null,{1}]&) @ (Flatten[#,1]&) @
\t((If[SameQ@@(Head/@#),Null,#]&) /@
\t\tPartition[Join[RotateRight[#],{Null,Null,Null}],2])
\t)&,a,2]/.({___}[li_List]:>li)
]\
\>", "Input",
 InitializationCell->True,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["zonotile3D", "Subsection"],

Cell[TextData[{
 "This awkward function requires two arguments: ",
 StyleBox["plns",
  FontWeight->"Bold"],
 ", the list of planes, and ",
 StyleBox["d",
  FontWeight->"Bold"],
 ", the number of parallel planes. The argument ",
 StyleBox["d",
  FontWeight->"Bold"],
 " is left global from the creation of the planes themselves. Planes are \
given as unit vectors {x, y, z} with a distance from the origin: {x, y, z, \
distance}. The set of sign vectors is found and first reduced in length, \
usually significantly, by ",
 StyleBox["Union",
  FontWeight->"Bold"],
 ". Then, if ",
 StyleBox["d",
  FontWeight->"Bold"],
 " is greater than 1, a further reduction strips away degenerate polyhedra \
(in which all the faces lie in a single plane). Finally, duplicate zonohedra \
are discarded.\n\nThere are two global outputs to the function: ",
 StyleBox["allpoly",
  FontWeight->"Bold"],
 " and ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ". In ",
 StyleBox["allpoly",
  FontWeight->"Bold"],
 " we have a list of lists of zonohedra; the sublists are formed from \
zonohedra having the same number of faces. These are usually not zonohedra of \
the same shape. I find it instructive to display subsets of the zonohedra \
composing a zonotile; see the examples. The other global output, ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", is just a flattened list of all the zonohedra in the zonotile. This form \
is useful for exploding the zonohedra apart, or sorting them by volume.\n\n\
Global ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 " actually has individual members in the form {center of zonohedron, \
zonohedron}. This is useful when displaying subsets or exploding the \
zonotile.\n\nIt is easy to make this function fail; for instance, if the \
planes are from the icosahedral or octahedral symmetry groups, they must be \
\[OpenCurlyDoubleQuote]balanced\[CloseCurlyDoubleQuote] across the origin. \
This is just one of many problems begging for solutions. It seems to hinge \
upon the ordering of the planes, but I am not entirely sure of this."
}], "Text"],

Cell["\<\
zonotile3D[plns_]:=
Block[{sgn1,s,s1,s2,plns2,r,pt,zaq,
t1,npt,vecs,c,t3,pl,tl,z,xaq,polyunion},

r=Length[plns];

(*****MAKE SIGN VECTORS*****)
Share[sgn1=Flatten[Table[
      Sign[Chop[Det[ plns[[{i,j,k,h}]] ] ] ],
    {i,r-2},
    {j,i+1,r-1},
    {k,j+1,r},
    {h,r}],2];
    Print[\"Before union, \", Length[sgn1], \" sign vectors\"];
    Print[\"After union, \", Length[s=Union[sgn1]], \" sign vectors\"];
    
    (*to obtain degenerate zonohedra, comment out this part*)
    If[d>1,(*if parallel planes exist*)
    s1=Map[Partition[#,d]&, s];(*break sign vectors into lists of length d*)
s2=DeleteCases[s1, {___,Table[0,{d}],___} ];(*get rid of degenerates*)
s=Map[Flatten[#,1]&, s2];(*regroup list of sign vectors*)
Print[\"After discard of degenerates, \", Length[s],  \" sign vectors\"];
]
];

(*****CREATE ZONOTILE*****)
(*create list {center of zonohedron, zonohedron}*)
plns2=Map[#[[{1,2,3}]]&, plns];

Share[
zaq=Table[
pt={0,0,0};
Do[If[ s[[k,j]]==1,
     rmoveto[ pt, plns2[[j]] ],
     rmoveto[ pt, -plns2[[j]] ]
     ],
 {j,r}];

t1=Cases[
Table[
   If[ s[[k,j]]==0,
     rlineto[ pt,2*plns2[[j]] ]
   ],
   {j,r}],{{_,_,_}..},Infinity];
   
   npt=t1[[1,1]];
   vecs=Map[#[[2]]-#[[1]]&, t1];
   c=Chop[ npt+((Plus@@vecs)/2) ];
   t3=
   If[Length[Union[Map[Count[#,0]&, signvector[vecs]]]]==1,
(*if only parallelograms bound zonohedron*)
   Z[vecs, npt],(*make the zonohedron rooted at npt*)
(*else if higher 2n-gons*)
   Map[c+#&,zedron[vecs],{-2}](*make the zonohedron, translate to position*)
   ];

{c,t3},(*center of zonohedron, zonohedron*)
{k,Length[s]}]];


(*****POST PROCESSING AND DISPLAY*****)
Print[\"There are \",Length[zaq],\" zonohedral tiles with duplicates\"];
pl=Map[Length[#[[2]] ]&, zaq];(*#[[1]] is centers, #[[2]] is zonohedra*)
Print[\"There are zonohedra with \",tl=Union[pl],\" faces\"];
Print[\"Before removing duplicates there are \",
Table[Count[pl,tl[[k]]],{k,Length[tl]}], \" zonohedra in each set\"];

(*make lists of tiles by number of faces*)
z=Table[Select[zaq,Length[ #[[2]] ]==tl[[k]]&],
{k,Length[tl]}];
xaq=Drop[z,1];(*we don't need to worry about parallelepipeds*)

(*remove duplicate higher zonohedra, keeping poly centers*)
polyunion=Join[
{z[[1]]},
Table[
hedraunion[ xaq[[k]] ],
{k,Length[xaq]}]
];

(*the unique zonohedra, ordered by number of determining vectors*)
allpoly=Map[#[[2]]&, polyunion, {2} ];(*global*)
Print[\"There are \", Length[allpoly],\" sets altogether\"];
Print[\"There are \",Length /@ allpoly,\" in each set, after removing \
duplicates\"];

(*flattened list of zonohedra*)
polyflat=Flatten[polyunion,1];(*global*)
Print[\"There are \", Length[polyflat],\" zonohedra altogether\"];

](*end Block*)\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*test version*)
newzonotile3D[plns_]:=
Block[{sgn1,s,s1,s2,plns2,r,pt,zaq,
t1,npt,vecs,c,t3,pl,tl,z,xaq,polyunion},

r=Length[plns];

(*****MAKE SIGN VECTORS*****)
Share[sgn1=Flatten[Table[
      Sign[Chop[Det[ plns[[{i,j,k,h}]] ] ] ],
    {i,r-2},
    {j,i+1,r-1},
    {k,j+1,r},
    {h,r}],2];
    Print[\"Before union, \", Length[sgn1], \" sign vectors\"];
    Print[\"After union, \", Length[s=Union[sgn1]], \" sign vectors\"];
    
    (*to obtain degenerate zonohedra, comment out this part*)
If[d>1,(*if parallel planes exist*)
s=DeleteCases[s, {__,Sequence@@Table[0,{d+1}],__} ];
Print[\"After discard of degenerates, \", Length[s],  \" sign vectors\"]
];
];

(*****CREATE ZONOTILE*****)
(*create list {center of zonohedron, zonohedron}*)
plns2=Map[#[[{1,2,3}]]&, plns];

Share[
zaq=Table[
pt={0,0,0};
Do[If[ s[[k,j]]==1,
     rmoveto[ pt, plns2[[j]] ],
     rmoveto[ pt, -plns2[[j]] ]
     ],
 {j,r}];

t1=Cases[
Table[
   If[ s[[k,j]]==0,
     rlineto[ pt,2*plns2[[j]] ]
   ],
   {j,r}],{{_,_,_}..},Infinity];
   
   npt=t1[[1,1]];
   vecs=Map[#[[2]]-#[[1]]&, t1];
     
   vchk1=toTriangles[vecs];
If[ Chop[N[Plus @@ Flatten[Map[(Abs[Minors[#, 3]])&, vchk1]]]]>0,

(*Z[vecs, npt],*)
c=Chop[ npt+((Plus@@vecs)/2) ];
   t3=
   If[Length[Union[Map[Count[#,0]&, signvector[vecs]]]]==1,
(*if only parallelograms bound zonohedron*)
(*Print[\"using Z\"];*)
   Z[vecs, npt],(*make the zonohedron rooted at npt*)
(*else if higher 2n-gons*)
   Map[c+#&,zedron[vecs],{-2}](*make the zonohedron, translate to position*)
   ];

{c,t3},

{}],
{k,Length[s]}]];

zaq=DeleteCases[ zaq, {}];

(*****POST PROCESSING AND DISPLAY*****)
Print[\"There are \",Length[zaq],\" zonohedral tiles with duplicates\"];
pl=Map[Length[#[[2]] ]&, zaq];(*#[[1]] is centers, #[[2]] is zonohedra*)
Print[\"There are zonohedra with \",tl=Union[pl],\" faces\"];
Print[\"Before removing duplicates there are \",
Table[Count[pl,tl[[k]]],{k,Length[tl]}], \" zonohedra in each set\"];

(*make lists of tiles by number of faces*)
z=Table[Select[zaq,Length[ #[[2]] ]==tl[[k]]&],
{k,Length[tl]}];
xaq=Drop[z,1];(*we don't need to worry about parallelepipeds*)

(*remove duplicate higher zonohedra, keeping poly centers*)
polyunion=Join[
{z[[1]]},
Table[
hedraunion[ xaq[[k]] ],
{k,Length[xaq]}]
];

(*the unique zonohedra, ordered by number of determining vectors*)
allpoly=Map[#[[2]]&, polyunion, {2} ];(*global*)
Print[\"There are \", Length[allpoly],\" sets altogether\"];
Print[\"There are \",Length /@ allpoly,\" in each set, after removing \
duplicates\"];

(*flattened list of zonohedra*)
polyflat=Flatten[polyunion,1];(*global*)
Print[\"There are \", Length[polyflat],\" zonohedra altogether\"];

](*end Block*)\
\>", "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stellation Diagrams", "Subsection"],

Cell["\<\
(*Peter Messer's intersection of two planes*)
inter[{{a1_,b1_,c1_},d1_},{{a2_,b2_,c2_},d2_}]:=
Block[{v,sq,DC,DB,AD},
v=Cross[{a1,b1,c1},{a2,b2,c2}];
sq=v.v;
DC= (c1 d2)-(c2 d1);
DB= b1 d2-b2 d1;
AD= a2 d1-a1 d2;
{{(v[[2]]*DC - v[[3]]*DB)/sq, -(v[[1]]*DC + v[[3]]*AD)/sq, (v[[1]]*DB + \
v[[2]]*AD)/sq},
v}
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*intersection of two 2D segments*)
lineinter[{{x1_, y1_},{x2_,y2_}},{{x3_, y3_},{x4_,y4_}}]:=
Block[{num,denom,u,x,y},
num=((x4-x3)*(y1-y3)) - ((y4-y3)*(x1-x3));
denom=Chop[ ((y4-y3)*(x2-x1)) - ((x4-x3)*(y2-y1)) ];
If[ denom==0, {},
u=num/denom;
x=x1+(u*(x2-x1));
y=y1+(u*(y2-y1));
{x,y}]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*find the intersection point, if it exists, of three planes*)
(*planes given as normal vectors {p1, p2, p3},
followed by their magnitudes,{d1,d2,d3}*)
(*I suspect this reverses signs on the points*)
inter3planes[{p1_, p2_, p3_},{d1_, d2_, d3_}]:=
Block[{num, denom,pt},
num=( -d1*(Cross[p2,p3])-d2*(Cross[p3,p1])-d3*(Cross[p1,p2]) );
denom=Chop[( Dot[p1, Cross[p2,p3] ] )];
pt=If[denom==0,Null,Chop[num/denom]]
]\
\>", "Input",
 InitializationCell->True],

Cell["Variants", "Text"],

Cell["\<\
(*divide-by-zero protected version, Peter Messer's intersection of two planes*)
newinter2planes[{{a1_,b1_,c1_,d1_},{a2_,b2_,c2_,d2_}}]:=
Block[{v,sq,DC,DB,AD},
v=Cross[{a1,b1,c1},{a2,b2,c2}];
sq=v.v;
If[Chop[sq]!=0,
DC= (c1 d2)-(c2 d1);
DB= (b1 d2)-(b2 d1);
AD= (a2 d1)-(a1 d2);
Chop[{{(v[[2]]*DC - v[[3]]*DB)/sq, -(v[[1]]*DC + v[[3]]*AD)/sq, (v[[1]]*DB + \
v[[2]]*AD)/sq},
v}],Null]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
(*find the intersection point, if it exists, of three planes*)
newinter3planes[{{a1_,b1_,c1_,d1_},{a2_,b2_,c2_,d2_},{a3_,b3_,c3_,d3_}}]:=
Block[{p1,p2,p3,num,denom,pt},
p1={a1,b1,c1};p2={a2,b2,c2};p3={a3,b3,c3};
num=( d1*(Cross[p2,p3]) + d2*(Cross[p3,p1]) + d3*(Cross[p1,p2]) );
denom=Chop[( Dot[p1, Cross[p2,p3] ] )];
pt=If[denom==0,Null,Chop[num/denom]]
]\
\>", "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zones", "Subsection"],

Cell["\<\
mysurf[poly_]:= 
Block[{f},
f=poly[[1]];
cross[ f[[2]] - f[[1]], f[[3]] - f[[2]] ]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
mycent[poly_]:= 
Block[{f},
f=poly[[1]];
Plus@@f/Length[f]
]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
countsides[shape_] :=
Map[ Length[#]&, parse[shape]]\
\>", "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zonotile Examples", "Section"],

Cell[CellGroupData[{

Cell["What is Going On?", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[TextData[{
 "My habit in programming is to do things in stages, rather than to wrap a \
long procedure up into a function and then just let fly at the input, with \
all due mystery as to how the result is reached. Thus in much of this \
notebook, several different input cells are evaluated in turn, before a \
zonotile is ever even displayed; and often, various display variants are \
offered, separately.\n\nI will not even to attempt to describe the ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " function itself, now. There is a subsection below (Step-by-Step Zonotile \
Construction) which touches upon how it does what it does. Here, though, it \
may be useful for those not very familiar with programming in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to see what is going on, when we create a set of planes, in the form {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, to use as input to ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 ".\n\nLook at the code-block below. Most programming languages provide for \
\[OpenCurlyQuote]comments\[CloseCurlyQuote], which are not part of the code \
base itself, but help the programmer document what is happening. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " we use the syntax (*comment*) for comments. Thus ",
 "(*****MAKE ARRANGEMENT OF PLANES*****)",
 " is a comment, with extra asterisks added for visual impact."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)
dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell[TextData[{
 "Another important bit of the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " language is the semicolon. It suppresses non-graphics output. So, to \
better understand some particular line or lines of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code, one can delete the semicolons. However, one tiny expression may \
generate a huge output; for instance, ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " generates lists of lists of polygons, and there may be thousands of these. \
Hence some care should be taken when removing semicolons. Here is a safe \
example: evaluate both cells below, and compare the results."
}], "Text"],

Cell["v1=N[Vertices[Icosahedron]];(*with semicolon*)", "Input"],

Cell["v1=N[Vertices[Icosahedron]](*without semicolon*)", "Input"],

Cell[TextData[{
 "Now to the next stage in our example: one of each pair of opposite vectors \
is removed, the result named ",
 StyleBox["v",
  FontWeight->"Bold"],
 ", and the length of the list of vectors is named ",
 StyleBox["n",
  FontWeight->"Bold"],
 ". We need this ",
 StyleBox["n",
  FontWeight->"Bold"],
 " for use in a ",
 StyleBox["Table",
  FontWeight->"Bold"],
 ", below.",
 " Semicolons are removed, to allow output."
}], "Text"],

Cell["\<\
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)]
n=Length[v]\
\>", "Input"],

Cell[TextData[{
 "These are the six primitive plane normals, upon which the zonotile will be \
based. Now we will set our distances. I use the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["Range",
  FontWeight->"Bold"],
 " to make the distances, as follows; semicolons removed to allow output."
}], "Text"],

Cell["\<\
k=1(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)
dist=Table[Range[-k,k,1],{i,n}]
d=Length[dist[[1]]]\
\>", "Input"],

Cell[TextData[{
 StyleBox["Range",
  FontWeight->"Bold"],
 " allows a syntax ",
 StyleBox["Range[  lowerlimit, upperlimit, step ]",
  FontWeight->"Bold"],
 " in which one goes from ",
 StyleBox["lowerlimit",
  FontWeight->"Bold"],
 " to ",
 StyleBox["upperlimit",
  FontWeight->"Bold"],
 " in steps ",
 StyleBox["step",
  FontWeight->"Bold"],
 ". Note that we could have obtained the same result by explicitly defining \
our distances, as follows:"
}], "Text"],

Cell["\<\
dist=Table[{-1, 0, 1},{i,n}]
d=Length[dist[[1]]]\
\>", "Input"],

Cell[TextData[{
 "When trying to understand someone else\[CloseCurlyQuote]s programming, it \
is always well to consider that some kind of mistake, or error, or oddball \
construct, might inhabit the code. The above provides two examples: since \
there are but three distances, {-1, 0, 1}, why create six copies of the \
three? There is indeed a way to use just one copy. But in the course of \
developing the code to create sets of planes {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "} for input to the ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " function, I hacked together various methods which were, yes, clunky, but \
in the end, they worked.\n\nThe other example is the inscrutable assignment, ",
 StyleBox["d=Length[dist[[1]]]",
  FontWeight->"Bold"],
 ". This makes ",
 StyleBox["d",
  FontWeight->"Bold"],
 " a global variable, and it is actually used within the ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " procedure, which expects it, and will have some trouble (I seem to think) \
without it. Here ",
 StyleBox["d ",
  FontWeight->"Bold"],
 "= 3. And yet here, where a comment in the code would be a good thing, there \
is no comment. Not only that, since I am always writing about planes in the \
form {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, is this ",
 StyleBox["d",
  FontWeight->"Bold"],
 " that ",
 StyleBox["d",
  FontSlant->"Italic"],
 "? No, it is not. Ah, well, how good it is to be human, and to err.\n\nThe \
final stage in creating the planes, each of the form {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, is to join the vectors ",
 StyleBox["v",
  FontWeight->"Bold"],
 ", each in the form {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "}, to the various distances. This is done using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " function. The planes are named ",
 StyleBox["plns",
  FontWeight->"Bold"],
 ". The raw vectors are converted to unit vectors using my ",
 StyleBox["unit",
  FontWeight->"Bold"],
 " function.",
 " Semicolons removed, we see the output."
}], "Text"],

Cell["\<\
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j,d}],1]
Print[\"There are \",r=Length[plns],\" planes altogether.\"]
\
\>", "Input"],

Cell[TextData[{
 StyleBox["Print",
  FontWeight->"Bold"],
 " gives output with or without a semicolon. Note that we have to use ",
 StyleBox["Flatten",
  FontWeight->"Bold"],
 " on the ",
 StyleBox["Table",
  FontWeight->"Bold"],
 ", so that we end up with one list of eighteen planes, rather than three \
lists of six planes. Below, what happens without ",
 StyleBox["Flatten",
  FontWeight->"Bold"],
 ":"
}], "Text"],

Cell["\<\
Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j,d}]\
\>", "Input"],

Cell[TextData[{
 "Note that for each one of the six \[OpenCurlyDoubleQuote]primitive\
\[CloseCurlyDoubleQuote] plane normals, the distances -1, 0, and 1 are \
attached.\n\nWhen you wish to experiment, and make your own sets of planes to \
pass to ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 ", there are several considerations to keep in mind:\n\n",
 StyleBox["1",
  FontWeight->"Bold"],
 ". The planes must be a simple list of 4-vectors {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}. The components can be integers or real numbers, but avoid exact numbers \
like ",
 StyleBox["Sqrt[2]",
  FontWeight->"Bold"],
 " by wrapping within ",
 StyleBox["N",
  FontWeight->"Bold"],
 ", as in ",
 StyleBox["N[ Sqrt[2] ]",
  FontWeight->"Bold"],
 ".\n\n",
 StyleBox["2",
  FontWeight->"Bold"],
 ". How many planes are created? Any more than thirty, and it will take a \
while for the zonotile to emerge, and, on my computer, with 100 MB of RAM \
available to the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Kernel, more than sixty planes is likely to run the Kernel right out of \
memory, and take a very long time, perhaps as much as an hour, or more.\n\n",
 StyleBox["3",
  FontWeight->"Bold"],
 ". If any problems arise, such as a zonotile with missing zonohedral cells, \
or cells that interpenetrate, make sure the planes balance across the origin. \
That is, for any plane normal {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "}, see that distances a mirrored upon the origin, as in {",
 StyleBox["x, y, z, -1",
  FontSlant->"Italic"],
 "}, and {",
 StyleBox["x, y, z, 1",
  FontSlant->"Italic"],
 "}."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Platonic Zonotiles I", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[TextData[{
 "Before delving into more complicated examples, here we construct the \
simplest zonotiles ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " permits for each of the Platonic solids, in turn. For reasons unknown, ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " must have planes \[OpenCurlyDoubleQuote]balanced\[CloseCurlyDoubleQuote] \
across the origin. Although the single distance, zero, is allowed, it will \
give one undivided zonohedron\[LongDash]a \[OpenCurlyDoubleQuote]degenerate\
\[CloseCurlyDoubleQuote] zonotile of edge=1. Except in the case of the cube \
itself, this zonohedron of edge=1 can be dissected into smaller zonohedra of \
edge=1; but, not using ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 ".\n\nHence we use the two distances {-1, 1} below, and create zonotiles of \
edge=2."
}], "Text"],

Cell[CellGroupData[{

Cell["Tetrahedron", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Tetrahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-1, 1},{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Octahedron", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Octahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-1, 1},{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cube", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Cube]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-1, 1},{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Icosahedron", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-1, 1},{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pentagonal Dodecahedron", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Dodecahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-1, 1},{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Platonic Zonotiles II", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[CellGroupData[{

Cell["Discussion", "Subsubsection"],

Cell[TextData[{
 "The Platonic solids give interesting zonotiles. Here we generalize upon \
their construction, and by choosing, first, which Platonic solid we wish to \
operate upon, and, second, at what distance(s) we will locate our planes, we \
obtain zonotiles in edge={1, 2, 3, ...}.\n\nWe use the vertices of the \
various Platonics, named in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Tetrahedron, Octahedron, Cube (or Hexahedron), Icosahedron, and \
Dodecahedron. In all cases except the Tetrahedron, vertices occur in \
diametrically opposed pairs, and we discard one of each pair. Practically \
speaking, we are creating those zonohedra (the zonotile-at-large, variously \
tiled by smaller zonohedra) determined by the vectors from the centers to the \
vertices of the Platonic solids, which are as follows:\n\nTetrahedron (four \
vectors) -> Kepler\[CloseCurlyQuote]s Rhombic Dodecahedron.\nOctahedron \
(three vectors) -> Cube.\nCube (or Hexahedron) (four vectors) -> Kepler\
\[CloseCurlyQuote]s Rhombic Dodecahedron.\nIcosahedron (six vectors) -> \
Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron.\nDodecahedron (ten \
vectors) -> Rhombic Enneacontahedron."
}], "Text"],

Cell["\<\
v1=N[Vertices[Tetrahedron]];
vertstet=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" vertices.\"];
Print[\"Tetrahedron->Kepler's Rhombic Dodecahedron\"];
Show[Graphics3D[zedron[vertstet]]];\
\>", "Input"],

Cell["\<\
v1=N[Vertices[Octahedron]];
vertsoct=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" vertices.\"];
Print[\"Octahedron->Cube\"];
Show[Graphics3D[zedron[vertsoct]]];\
\>", "Input"],

Cell["\<\
v1=N[Vertices[Cube]];
vertscube=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" vertices.\"];
Print[\"Cube->Kepler's Rhombic Dodecahedron\"];
Show[Graphics3D[zedron[vertscube]]];\
\>", "Input"],

Cell["\<\
v1=N[Vertices[Icosahedron]];
vertsicosa=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" vertices.\"];
Print[\"Icosahedron->Kepler's Rhombic Triacontahedron\"];
Show[Graphics3D[zedron[vertsicosa]]];\
\>", "Input"],

Cell["\<\
v1=N[Vertices[Dodecahedron]];
vertsdod=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" vertices.\"];
Print[\"Dodecahedron->Rhombic Enneacontahedron\"];
Show[Graphics3D[zedron[vertsdod]]];\
\>", "Input"],

Cell[TextData[{
 "Since here 3D zonotiles arise from arrangements of planes, in the list \
above we should substitute the word \[OpenCurlyQuote]planes\[CloseCurlyQuote] \
for the word \[OpenCurlyQuote]vectors\[CloseCurlyQuote], and recognize that \
it is ",
 StyleBox["the face planes of the dual",
  FontSlant->"Italic"],
 " which actually determine the zonotile. The rhombic enneacontahedron is, \
under this aegis, better related to the stellation of the icosahedron, than \
to the vertices of the pentagonal dodecahedron\[LongDash]but clearly both are \
involved.\n\nHaving selected a Platonic solid, it remains to choose the \
distances from the origin at which the planes are set. This is effected using \
",
 StyleBox["Range",
  FontWeight->"Bold"],
 ".\n\nFirst, consider that, due to the mysterious (to me) behavior of the \
Platonic symmetry groups, planes must be equally \
\[OpenCurlyDoubleQuote]balanced\[CloseCurlyDoubleQuote] across the origin. \
For instance, distances of {-1, 1} are permissible, and would give a zonotile \
of edge=2. The single distance of {0} is also permissible, and gives a \
zonotile of edge=1, although \[OpenCurlyDoubleQuote]degenerate\
\[CloseCurlyDoubleQuote] in that it is not dissected into smaller zonohedra. \
However, \[OpenCurlyDoubleQuote]unbalanced\[CloseCurlyDoubleQuote] distances, \
such as {-2, 1, 0, 1}, will lead to a failure of some kind, and an improper \
zonotile will arise.\n\nSuppose that, as below, the \
\[OpenCurlyDoubleQuote]step\[CloseCurlyDoubleQuote] specification in ",
 StyleBox["Range",
  FontWeight->"Bold"],
 " is fixed at 1. Then ",
 StyleBox["Range[-0, 0, 1]",
  FontWeight->"Bold"],
 " gives the one distance {0}, ",
 StyleBox["Range[-.5, .5, 1]",
  FontWeight->"Bold"],
 " gives the two distances {-.5, .5}, ",
 StyleBox["Range[-1, 1, 1]",
  FontWeight->"Bold"],
 " gives the three distances {-1, 0, 1}, ",
 StyleBox["Range[-1.5, 1.5, 1]",
  FontWeight->"Bold"],
 " gives the four distances {-1.5, -.5, .5, 1.5}; and so on. Note that \
whenever there is an ",
 StyleBox["even",
  FontSlant->"Italic"],
 " number of distances, there is no distance of 0 among them; but whenever \
there is an ",
 StyleBox["odd",
  FontSlant->"Italic"],
 " number of distances, there is a distance of 0 among them.\n\nTherefore, \
under the rules of construction followed here, whenever there are an odd \
number of distances, so that one set of planes intersects at that one point, \
the origin, {0,0,0}, there is a smaller version of the zonotile-at-large in \
the very center of the zonotile (or, if there is but the one distance, {0}, \
the zonotile ",
 StyleBox["is",
  FontSlant->"Italic"],
 " but that one zonohedron determined by the Platonic vectors, centered upon \
the origin).\n\nThus, in the \[OpenCurlyDoubleQuote]Nested Triacontahedra\
\[CloseCurlyDoubleQuote] example below, the Platonic solid is the \
Icosahedron, and ",
 StyleBox["Range",
  FontWeight->"Bold"],
 " variable ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is set to equal 1; hence the distances are {-1, 0, 1}, one set of planes \
passes through the origin, the zonotile-at-large is Kepler\[CloseCurlyQuote]s \
Rhombic Triacontahedron in edge=3, and at the very center of the zonotile is \
a smaller triacontahedron, of edge=1.\n\nThe \
\[OpenCurlyDoubleQuote]Randomized Triacontahedra\[CloseCurlyDoubleQuote] \
example demonstrates use of multiple random distances, still balanced across \
the origin, but forbidding any intersections of more than three planes; hence \
only hexahedra arise within the zonotile.\n\nPerhaps the most interesting of \
all of these is the rhombic enneacontahedron, derived from the Platonic \
Dodecahedron. With its ten planes, and ",
 StyleBox["k",
  FontSlant->"Italic"],
 "=1, so that each plane lies at three distances, thirty planes altogether, \
the creation of the zonotile is slow, but worth every second (or minute, in \
my case, with a slow computer). It is especially nice to look at the subset \
of zonohedra close to the ",
 StyleBox["z",
  FontSlant->"Italic"],
 "=0 plane, so that the central enneacontahedron itself is visible.\n\n\
Recalling my conjectures about \[OpenCurlyDoubleQuote]meta-geometry,\
\[CloseCurlyDoubleQuote] it is fruitful to think of the vertices of the \
pentagonal dodecahedron as the face-planes of the icosahedron, and ",
 StyleBox["vice versa",
  FontSlant->"Italic"],
 ", and so on with the other Platonics. Hence in the example below (if ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is set to 1/2) we should find bijection between the ",
 StyleBox["three stellations of the dodecahedron",
  FontSlant->"Italic"],
 ", and the three \[OpenCurlyDoubleQuote]layers\[CloseCurlyDoubleQuote] of \
zonohedra, from the center to the periphery, of that zonotile."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Nested Triacontahedra", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)
dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=6;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[ shell ],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Randomized Triacontahedra", "Subsubsection"],

Cell[TextData[{
 "I did not realize until recently that, in balancing distances across the \
origin for Platonic zonotiles, any random distances can be used, so long as \
for any one primitive plane normal {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "}, we use both ",
 StyleBox["d",
  FontSlant->"Italic"],
 " and ",
 StyleBox["-d",
  FontSlant->"Italic"],
 "; that is, in this example, we may create, for instance, twelve different \
distances, two for each primitive, with negatives, four for each primitive, \
and twenty-four altogether. I have uncommented the distance-list ",
 StyleBox["dist",
  FontWeight->"Bold"],
 " so that these twelve random distances can be seen.\n\nThis randomization \
ensures that in the resulting zonotile (a triacontahedron of edge=4), only \
rhombic hexahedra arise, 1280 of them.\n\nHowever, the combinatorics of the \
plane arrangement can still be influenced. For instance, let the inner pair \
of random distances be within the range {-1, 1}, and let the outer pair be \
greater than, oh, {-5, 5}. Then a triacontahedron of edge=2 arises at the \
center of the triacontahedron of edge=4, as we might expect. Also, holding \
the inner distances to a narrow range (in the example, the random numbers are \
constrained between .5 and .6) seems to ensure that twenty equal hexahedra \
make a star at the very center of the zonotile. This must mean that those \
twenty points of intersection near the center of the plane arrangement are \
close enough to those generated by all ",
 StyleBox["equal",
  FontSlant->"Italic"],
 " distances, that the same group of zonohedra develops."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[
k=Random[Real,{.5,.6}];
i=Random[Real,{1.3,1.4}];
 {-i,-k, k,i}, {n}]
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Randomized Truncated Icosidodecahedron", "Subsubsection"],

Cell[TextData[{
 "Here we use the edge-centers of the Icosahedron (or Dodecahedron) to obtain \
the fifteen unique, non-collinear vectors which determine the Archimedean \
Truncated Icosidodecahedron. By using different random real numbers for the \
two balanced distances for each of the fifteen primitives, and adding the \
third balanced distance 0, we construct a zonotile determined by forty-five \
planes. Fifteen intersect at the origin and determine an inner Truncated \
Icosidodecahedron of edge=1, while the zonotile-at-large is also a Truncated \
Icosidodecahedron, of edge=3. We might expect, from the randomization of \
distances, that the entire region outside the inner Truncated \
Icosidodecahedron would be tiled with hexahedra. However, that would be an \
improper tiling, and instead we obtain a proper tiling, in which arrays of \
prisms sit atop each face of the inner Truncated Icosidodecahedron, and the \
gaps between these are sealed with hexahedra. Of course, the thirty square \
faces of the inner Truncated Icosidodecahedron support various square prisms, \
which are hexahedra themselves.\n\nThis zonotile, generated by 45 planes, \
takes a long while to construct. Warning: trying to display the entire \
sublist of hexahedra, ",
 StyleBox["allpoly[[ 4 ]]",
  FontWeight->"Bold"],
 ", may cause problems. There are many many hexahedra in face-to-face \
contact. This places great demands upon the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " rendering engine."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Map[cent[#]&, edgefind[N[Vertices[Icosahedron]]]];

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[
k=Random[Real,{.5,.6}];
{-k, 0, k}, {n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron*)
Show[Graphics3D[ allpoly[[{4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron and the decagonal prisms*)
Show[Graphics3D[ allpoly[[{3,4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron and the hexagonal prisms*)
Show[Graphics3D[ allpoly[[{2,4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2.1;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Randomized Truncated Cuboctahedron", "Subsubsection"],

Cell["\<\
Here, an example quite analogous to that above, except we are in the \
octahedral symmetry group, and set planes at five \
\[OpenCurlyDoubleQuote]types\[CloseCurlyDoubleQuote] of distances. There are \
nine primitive plane normals, formed from the vertices and edge-centers of \
the octahedron, and one set passes through the origin, giving a truncated \
cuboctahedron of edge=1. The other four planes are randomized within narrow \
limits, and the outer planes are far enough away from the inner, that a \
distinct medial truncated cuboctahedron of edge=3 occurs, while the \
zonotile-at-large is a truncated cuboctahedron of edge=5.\
\>", "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Join[N[Vertices[Octahedron]],Map[cent[#]&, \
edgefind[N[Vertices[Octahedron]]]]];
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[
i=Random[Real,{15,16}];(*outer plane distances*)
k=Random[Real,{.5,.6}];(*inner plane distances*)
{-i, -k, 0, k, i},
{n}];
d=Length[dist[[1]]];

plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron*)
Show[Graphics3D[ allpoly[[{4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron and the octagonal prisms*)
Show[Graphics3D[ allpoly[[{3,4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron and the hexagonal prisms*)
Show[Graphics3D[ allpoly[[{2,4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show the inner zonohedron and the hexagonal prisms*)
Show[Graphics3D[ allpoly[[ 1 ]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2.1;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Platonic Zonotiles III", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[CellGroupData[{

Cell["Discussion", "Subsubsection"],

Cell["\<\
Here we use a different set of Platonic symmetry vectors for our planes: the \
centers of the edges. Now, the Platonic solids occur in \
\[OpenCurlyDoubleQuote]dual\[CloseCurlyDoubleQuote] pairs: \
Tetrahedron<->inverted Tetrahedron; Octahedron<->Cube; and \
Icosahedron<->Dodecahedron. When in their dual positions, with respect to one \
another, and of equal mid-radii, their edges actually intersect at right \
angles. Hence for our purposes there are only three sets of edges: \
Tetrahedron, Octahedron/Cube, and Icosahedron/Dodecahedron. The same \
considerations apply here as in the section above, with regard to distances\
\[LongDash]they must be balanced across the origin (for instance, {0}, or \
{-1,1} or {-1,0,1},  are balanced across the origin). From the three Platonic \
edge-sets we obtain three types of zonotile-at-large:

Tetrahedron (six edges, three vectors) -> Cube.
Octahedron (twelve edges, six vectors) -> Truncated Octahedron.
Icosahedron (thirty edges, fifteen vectors) -> Truncated Icosidodecahedron.

The three zonohedra may be constructed quickly, bypassing the zonotile \
algorithm (which would give the same result, using the single plane distance \
{0}).\
\>", "Text"],

Cell["\<\
v1=Map[cent[#]&, edgefind[N[Vertices[Tetrahedron]]]];
edgetet=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" edge-centers.\"];
Print[\"Tetrahedron->Cube\"];
Show[Graphics3D[zedron[edgetet]]];\
\>", "Input"],

Cell["\<\
v1=Map[cent[#]&, edgefind[N[Vertices[Octahedron]]]];
edgeoct=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" edge-centers.\"];
Print[\"Octahedron->Truncated Octahedron\"];
Show[Graphics3D[zedron[edgeoct]]];\
\>", "Input"],

Cell["\<\
v1=Map[cent[#]&, edgefind[N[Vertices[Icosahedron]]]];
edgeicosa=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
Print[\"There are \", Length[v1], \" edge-centers.\"];
Print[\"Icosahedron->Truncated Icosidodecahedron\"];
Show[Graphics3D[zedron[edgeicosa]]];\
\>", "Input"],

Cell["\<\
It so happens that a rhombic polyhedron may be associated to each of the \
three dual pairs; for, let the pairs intersect in dual position, so that the \
edges cross at right angles: then each edge-cross forms the diagonal of a \
rhomb (and the centers of the edges coincide with the centers of the rhombs). \
The three rhombic polyhedra are as follows:

Tetrahedron -> Cube (the rhombs are squares).
Octahedron (Cube) -> Kepler\[CloseCurlyQuote]s Rhombic Dodecahedron.
Icosahedron (Dodecahedron) -> Kepler\[CloseCurlyQuote]s Rhombic \
Triacontahedron.

Hence, the zonotiles determined by the vectors to the edge-centers of the \
Platonic solids are (equivalently) determined by the face-planes of the \
associated rhombic polyhedra. Furthermore, if there are but two plane \
distances, and these balanced across the origin (say, {-1,1}), the \
arrangement of planes is exactly the face-planes of the associated rhombic \
polyhedron; it is this same arrangement from which we derive the stellations \
of that rhombic polyhedron. The stellations of a convex polyhedron, and the \
zonotile determined by the arrangement of planes given by its faces, are \
closely related.

The zonotiles derived from the thirty edges of the Icosahedron, giving \
fifteen planes, will take much time and kernel memory, for three or more \
distances.

The example below gives a Truncated Octahedron of edge=3, since each plane is \
at the three distances {-1, 0, 1}.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Nested Truncated Octahedra", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Map[cent[#]&, edgefind[N[Vertices[Octahedron]]]];
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range limits: k=0, 1/2, 1, 3/2, etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=7;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Platonic Zonotiles IV", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[TextData[{
 "Here we combine the vertices of the Icosahedron and Dodecahedron. These \
number thirty-two in all, but we select just one from each pair of opposites, \
giving sixteen plane-vectors. Note that the whole set of thirty-two, when the \
two polyhedra are in reciprocal position and have a common mid-radius, form \
the vertices of Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron. The \
Platonics as constructed in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["are",
  FontSlant->"Italic"],
 " in reciprocal position, and with equal mid-radii; hence here we operate \
upon the face-planes of the dual of the Triacontahedron, the Archimedean \
Icosidodecahedron. This polyhedron can be regarded as the solid of \
intersection of the Icosahedron and Dodecahedron. When we use but the two \
distances, {-1/2, 1/2}, as in the example below, we are creating a zonotile \
closely related to the stellations of the Icosidodecahedron; we are setting \
our sixteen \[OpenCurlyDoubleQuote]types\[CloseCurlyDoubleQuote] of plane in \
pairs, one to either side of the origin, restoring the original number of \
thirty-two.\n\nOne subtlety here: we do ",
 StyleBox["not",
  FontSlant->"Italic"],
 " convert the vectors to unit vectors\[LongDash]if we did so, they would not \
be the proper vertices of the Triacontahedron (which has two different \
circum-radii), and the face-planes would not be those of the \
Icosidodecahedron."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[ Join[ Vertices[Icosahedron], Vertices[Dodecahedron] ] ];(*choose \
Platonics*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1/2;(*set Range limits: k=0, 1/2, 1, 3/2, etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ v[[i]],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3,4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=3;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[ shell ],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Archimedean Region: Cubes, Truncated Octahedra, and Truncated Cuboctahedra\
\>", "Subsection"],

Cell[TextData[{
 "The thirteen Archimedean solids are bounded by mixtures of different \
regular polygons, and \[OpenCurlyDoubleQuote]Archimedean\
\[CloseCurlyDoubleQuote] space-fillings are built from mixtures of different \
regular or quasi-regular polyhedra. For instance, the Platonic tetrahedron \
and octahedron fit together to fill space in one Archimedean space-filling. \
Some Archimedean packings are made of zonohedra.\n\nHere, the central region \
of the zonotile forms the Archimedean space-filling of cubes, truncated \
octahedra, and truncated cuboctahedra. A larger central array may be \
constructed (takes time!) by changing the line\n\n",
 StyleBox["f*N[Range[-1, 1, 1]], {i, n}];",
  FontWeight->"Bold"],
 "\nto\n",
 StyleBox["f*N[Range[-2, 2, 1]], {i, n}]",
  FontWeight->"Bold"],
 ";."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Join[N[Vertices[Octahedron]],
Map[cent[#]&, edgefind[N[Vertices[Hexahedron]]]] ];
d1=Union[Map[mag[#]&, v1],SameTest->(Abs[#1-#2]<.001&)];

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];(*discard opposites*)
Print[\"There are planes of \", n=Length[v], \" types\"];

dist=Table[ If[ Abs[ mag[ v[[i]] ] - d1[[1]] ]<.0001, f=d1[[1]], f=d1[[2]]];
f*N[Range[-1,1,1]],{i,n}];

Print[\"The planes are at \", d=Length[dist[[1]]], \" distances\"];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \", r=Length[plns], \" planes altogether\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=8;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-.5,2},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{5}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Archimedean Region: Octagonal Prisms and Truncated Cuboctahedra\
\>", "Subsection"],

Cell[TextData[{
 "The thirteen Archimedean solids are bounded by mixtures of different \
regular polygons, and \[OpenCurlyDoubleQuote]Archimedean\
\[CloseCurlyDoubleQuote] space-fillings are built from mixtures of different \
regular or quasi-regular polyhedra, including \[OpenCurlyDoubleQuote]uniform\
\[CloseCurlyDoubleQuote] polyhedra. For instance, the Platonic tetrahedron \
and octahedron fit together to fill space in one Archimedean space-filling. \
Some Archimedean packings are made of zonohedra.\n\nHere, the central region \
of the zonotile forms the Archimedean space-filling of octagonal prisms and \
truncated cuboctahedra. A larger central array may be constructed (takes \
time!) by changing the line\n\n",
 StyleBox["f*N[Range[-1, 1, 1]], {i, n}];",
  FontWeight->"Bold"],
 "\nto\n",
 StyleBox["f*N[Range[-2, 2, 1]], {i, n}]",
  FontWeight->"Bold"],
 ";."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Join[N[Vertices[Octahedron]],
Map[cent[#]&, edgefind[N[Vertices[Hexahedron]]]] ];
d1=Union[Map[mag[#]&, v1],SameTest->(Abs[#1-#2]<.001&)];

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];(*discard opposites*)
Print[\"There are planes of \", n=Length[v], \" types\"];

dist=Table[ If[ Abs[ mag[ v[[i]] ] - d1[[1]] ]<.0001, f=d1[[2]], f=d1[[1]]];
f*N[Range[-1,1,1]],{i,n}];

Print[\"The planes are at \", d=Length[dist[[1]]], \" distances\"];
plns=Flatten[Table[
f=If[EvenQ[i],1,-1];
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d }],1];
Print[\"There are \", r=Length[plns], \" planes altogether\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=8;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-.5,2},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{5,6,7}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D \[OpenCurlyDoubleQuote]Penrose\[CloseCurlyDoubleQuote] Zonotile", \
"Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[TextData[{
 "The famous Penrose tiling of the plane, by rhombs of two types, has its \
analogues in three dimensions. Here an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=5 polar zonohedron forms the zonotile, bounded by twenty rhombic regions, \
each divided into a 5X5 grid of 25 equal rhombs; and it is dissected into \
1250 rhombic hexahedra, of two types. Three different viewing options are \
provided here; and in the ",
 StyleBox["Color Zonohedra by Volume",
  FontWeight->"Bold"],
 " section of this notebook, particular colors may be assigned to the \
different types of zonohedra, to a nice effect. Be sure to experiment with \
different ",
 StyleBox["n.",
  FontSlant->"Italic"],
 " However, use caution; a large (>30) number of planes can arise, even if ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is set to 8, and it may be good to make the ",
 StyleBox["Range",
  FontWeight->"Bold"],
 " of distances smaller; the total number of planes is the product of ",
 StyleBox["n",
  FontSlant->"Italic"],
 " with the number of distances. Hence if ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=8 and we use ",
 StyleBox["Range[ -2, 2, 1 ]",
  FontWeight->"Bold"],
 ", we will have forty planes. This will take both time and kernel memory."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=5;
p=N[(1/Degree)ArcTan[.5]];
v=vectors[n,p];
dist=Table[ N[Random[Real,{.1,.2}]+Range[-2,2,1]], {i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
f=If[EvenQ[i],1,-1];
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \", Length[plns], \" planes altogether\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1;
shell=Map[#[[2]]&, Select[polyflat, Abs[ #[[1,3]] ]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->{0,0,2},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the selected region slightly*)
q1=explode[Select[polyflat, Abs[#[[1,3]]]<distance&], .2];
Show[Graphics3D[q1],
ViewPoint->{0,0,2},
Boxed->False];(*exploded*)\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-equilateral Zonotiles", "Subsection"],

Cell["\<\
Here we create the same zonotile as in \[OpenCurlyDoubleQuote]Archimedean \
Region: Cubes, Truncated Octahedra, and Truncated Cuboctahedra,\
\[CloseCurlyDoubleQuote] above, but multiply every third vector by four. With \
some care, a more symmetrical choice of vectors might have been made, for \
scaling. Howsoever, we do obtain a proper zonotile, of two edge lengths, one \
four times the other.\
\>", "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Join[N[Vertices[Octahedron]],
Map[cent[#]&, edgefind[N[Vertices[Hexahedron]]]] ];
d1=Union[Map[mag[#]&, v1],SameTest->(Abs[#1-#2]<.001&)];

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];(*discard opposites*)
Print[\"There are planes of \", n=Length[v], \" types\"];

dist=Table[ If[ Abs[ mag[ v[[i]] ] - d1[[1]] ]<.0001, f=d1[[1]], f=d1[[2]]];
f*N[Range[-1,1,1]],{i,n}];

Print[\"The planes are at \", d=Length[dist[[1]]], \" distances\"];
plns=Flatten[Table[
sca=If[ Mod[i-1,3]==0, 4, 1];
Chop[Join[ sca*unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \", r=Length[plns], \" planes altogether\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=18;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-.5,2},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{9}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polar Zonohedron Tiled by Hexahedra", "Subsection"],

Cell["\<\
Here we construct the most ordinary of zonotiles, a polar zonohedron tiled by \
rhombic hexahedra. By making the distances of the planes non-zero random real \
numbers, we ensure that only rhombic hexahedra arise within the zonotile. In \
effect, no more than three planes can intersect at any one point.\
\>", "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=12;(*an n=12 polar zonohedron*)
p=N[(1/Degree)*ArcTan[.5^.5]];
hex=Binomial[n,3];
v=vectors[n,p];
Print[\"There are \",n,\" planes.\"];
Print[\"There are \",hex,\" hexahedra.\"];

plns=Table[(*add random real numbers to unit distances*)
Chop[Join[ unit[ v[[i]] ],{Random[Real,{.1,.2}]+1}]],
{i,n}];
d=1;
r=Length[plns];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=3;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,0,2},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Polar Zonohedron Tiled by Hexahedra, Dodecahedra, and ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-zonohedra"
}], "Subsection"],

Cell[TextData[{
 "A mixture of hexahedra, dodecahedra, and triacontahedra form this zonotile. \
The two triacontahedra lie on the symmetry axis of the ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=12 polar zonohedron. The device used to obtain this mix is merely to place \
the planes, alternately, to either side of the origin."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=12;(*n=12 polar zonohedron*)
p=N[(1/Degree)*ArcTan[.5^.5]];
v=vectors[n,p];
Print[\"There are \",n,\" planes.\"];

plns=Table[
f=If[Mod[i,2]==0,1,-1];
Chop[Join[ unit[ v[[i]] ],{f}]],
{i,n}];
d=1;
r=Length[plns];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Polar Zonohedron Tiled by Hexahedra, Dodecahedra, and ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-zonohedra in edge=2"
}], "Subsection"],

Cell[TextData[{
 "Here, an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=12 polar zonohedron of edge 2 (each face divided into four rhombs) is \
created, such that two ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=12 polar zonohedra of edge 1 are strung along the symmetry axis, like \
beads. Rhombic dodecahedra and hexahedra make up the rest of the zonotile."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=12;
p=N[(1/Degree)*ArcTan[.5^.5]];
hex=Binomial[n,3];
v=vectors[n,p];
Print[\"There are \",n,\" plane types.\"];

plns=Flatten[Table[
f=If[Mod[i,2]==0,1,-1];
Chop[Join[ unit[ v[[i]] ],{f*j}]],
{i,n},{j,-1,1,2}],1];
d=2;
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=8;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Truncated Icosidodecahedron in edge=3", "Subsection"],

Cell[TextData[{
 "This is my favorite 3D zonotile thus far. The bounding zonohedron is the \
Archimedean Truncated Icosidodecahedron of edge 3. A truncated \
icosidodecahedron of edge 1 is at the very center of the zonotile. This \
zonotile takes a long time to develop, and a still more elaborated zonotile \
can be made using even more time, by setting ",
 "the plane distances ",
 StyleBox["dist",
  FontWeight->"Bold"],
 " to ",
 StyleBox["Range[ -2, 2, 1]",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Map[cent[#]&, edgefind[N[Vertices[Dodecahedron]]]];
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];
dist=Table[N[Range[-1,1,1]],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{5,6}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the y=0 \
plane*)
distance=3;
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,2]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-2,0},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=12;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rhombic Enneacontahedron in edge=3", "Subsection"],

Cell["\<\
The Platonic solids give interesting zonotiles. Here we use ten of the twenty \
vertices of the Pentagonal Dodecahedron to give a special zonotile which is \
(taken as a convex hull, not a tiling) an isometric orthogonal shadow, cast \
into three dimensions, of a ten-dimensional hypercube. By letting the fourth \
\[OpenCurlyDoubleQuote]distance\[CloseCurlyDoubleQuote] components of the \
4-vectors run through {-1,0,1}, we have planes at three distances, and \
realize an enneacontahedron of edge=3. Since one set of ten planes passes all \
through the origin, at the very center of the zonotile is an enneacontahedron \
of edge=1.\
\>", "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Dodecahedron]];
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];
dist=Table[N[Range[-1,1,1]],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{5}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the y=0 \
plane*)
distance=3;
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,2]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-2,0},
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=12;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["n",
  FontSlant->"Italic"],
 "=12 polar zonohedron with symmetrical equatorial neighbors"
}], "Subsection"],

Cell[TextData[{
 "This zonotile has an equatorial region, centered upon the ",
 StyleBox["z",
  FontWeight->"Bold"],
 "=0 plane, in which a central ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=12 polar zonohedron is surrounded, alternately, by ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=6 and ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=4 polar zonohedra, after the manner of the plane tiling of dodecagons, \
hexagons, and squares. It is likely that if more planes were added, by using ",
 StyleBox["Range[ -2, -2, 1]",
  FontWeight->"Bold"],
 ", this Archimedean area of polar zonohedra would expand."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
p=N[(1/Degree)*ArcTan[.5^.5]];
v=vectors[12,p];(*this works, one dodeca, six hexa*)
n=Length[v];
dist=Table[If[EvenQ[i],f=-1,f=Sqrt[3]];
N[f*Range[-1,1,1]],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
f=If[EvenQ[i],1,-1];
Chop[Join[ unit[ v[[i]] ],{f*dist[[i,j]]}]],
{i,Length[v]},{j, d }],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];\
\>", "Input"],

Cell["\<\
(*****CREATE ZONOTILE*****)
Timing[newzonotile3D[plns]][[1]]\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{3,4,5}]] ],
PlotRange->All,
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1;
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-.5,2},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["2n",
  FontSlant->"Italic"],
 "-gonal prisms"
}], "Subsection"],

Cell[TextData[{
 "Here we test a new zonotile3D function, named, appropriately, ",
 StyleBox["newzonotile3D",
  FontWeight->"Bold"],
 ". It differs from the old function in that it uses a different method to \
weed out degenerate sign vectors before ever the sign vectors are passed to \
the loops which create the individual zonohedra. Then, since experience has \
shown that degenerates creep in regardless, each zonohedral tile is tested \
for non-zero volume before being admitted to the final list. This new \
function succeeds in properly constructing some zonotiles for which the old \
function failed. It still fails in some cases for unknown reasons; the \
principal failure seems to be creation of tiles (zonohedra) which \
interpenetrate, or, rarely, the outright failure to create a tile where one \
is needed.\n\nVarious types of \[OpenCurlyDoubleQuote]prismatic\
\[CloseCurlyDoubleQuote] zonotiles are created, closely related to 2D \
zonotiles."
}], "Text"],

Cell[CellGroupData[{

Cell["Star Prisms", "Subsubsection"],

Cell["\<\
(*Recipe for polar projection of an n-polar zonohedron*)
(*****MAKE ARRANGEMENT OF PLANES*****)
n1=7;(*set n*)
n=If[EvenQ[n1],n1/2,n1];
dist=If[EvenQ[n1],{-1,1},{1}];

v=Join[halfvectors[n,0],{{0,0,1}}];
Print[\"There are \",Length[v],\" types of planes.\"];

rawplns=Flatten[
\tTable[
\t\tsgn=If[EvenQ[i],1,-1];
\t\tChop[Join[ unit[ v[[i]] ], {sgn*dist[[j]]} ]],
\t{i,Length[v]},{j, Length[dist]}],1];

plns=If[EvenQ[n1], Drop[rawplns, -1], rawplns];

d=Length[dist];

(*****CREATE ZONOTILE*****)
newzonotile3D[plns]

(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
ViewPoint->2.5*unit[{0,-.5,1}],
Boxed->False];

(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tall Prism I", "Subsubsection"],

Cell["\<\
(*Recipe for prismatic 2D zonotile of height=5*)
(*****MAKE ARRANGEMENT OF PLANES*****)
n=8;
dist=Table[If[EvenQ[i], f=1, f=Cos[Pi/n] ];
N[f*Range[-1,0,1]],{i,n}];
d=Length[dist[[1]]];

plns1=Flatten[Table[
Chop[N[
{ Cos[i*Pi/n], Sin[i*Pi/n], 0, dist[[i,j]] }
]],
{i,n}, {j, Length[dist[[1]]]}],1];
plns=Join[plns1, {{0,0,5,1}}];(*this choice of z determines height*)
Print[\"There are \", r=Length[plns],\" planes altogether\"];

(*****CREATE ZONOTILE*****)
newzonotile3D[plns];

(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ],
Axes->True,
ViewPoint->2.5*unit[{0,-2,3}]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tall Prism II", "Subsubsection"],

Cell["\<\
(*many of this type fail, this succeeds*)
n=5;
dist=Table[If[i==1 || i==2, f=1, f=2 ];
N[(f)*Range[-2,1,1]],{i,n}];
d=Length[dist];
plns1=Flatten[Table[
Chop[N[
{ Cos[i*Pi/n], Sin[i*Pi/n], 0, dist[[i,j]] }
]],
{i,n}, {j, Length[dist[[1]]]}],1];
plns=Join[plns1, {{0,0,5,1}}];(*this choice of z determines height*)
Print[\"There are \", r=Length[plns],\" planes altogether\"];

(*****CREATE ZONOTILE*****)
newzonotile3D[plns];

(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ],
Axes->True,
ViewPoint->2.5*unit[{0,-2,3}]];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polar Zonohedra with equatorial hexagons", "Subsection"],

Cell[TextData[{
 "Here we add one vector {0,0,-1} to the ordinary ",
 StyleBox["n",
  FontSlant->"Italic"],
 " vectors which determine a polar zonohedron. When ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is even, this stretches the equatorial rhombs into hexagons.",
 " It is a curiosity that, in this construction, two ordinary ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-polar zonohedra lie on the symmetry axis, and nestle into dodecahedra of \
mixed rhombs and hexagons at the very center of the zonotile-at-large. This \
central array may be viewed by itself, in the last example, below."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=8;
p=N[(1/Degree)*ArcTan[.5]];
v=vectors[n,p];(*this works, one dodeca, six hexa*)
dist=Table[If[EvenQ[i],f=-1,f=1];
N[Range[-1,1,2]],{i,n}];
d=Length[dist[[1]]];
plns1=Flatten[Table[
f=If[EvenQ[i],1,-1];
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
plns=Join[plns1, {{0,0,-1,0}}];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
newzonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
Show[Graphics3D[ allpoly[[2]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=4;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->{0,-2,1},
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nested and Beaded Zonotiles", "Subsection"],

Cell[TextData[{
 "By cunningly combining planes at certain distances, one obtains \
\[OpenCurlyDoubleQuote]nested\[CloseCurlyDoubleQuote] zonohedra. Here we use \
the six vectors which determine an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=6 polar zonohedron\[LongDash]a triacontahedron bounded by thirty rhombs\
\[LongDash]as our plane unit normals, and let distances run over {-22, -1, 0, \
1, 22}. Thus the bounding zonohedron\[LongDash]the zonotile-at-large\
\[LongDash]is a triacontahedron. Since there is an odd number of distances, \
the central distance, 0, means that there will be an undivided \
triacontahedron of edge=1 at the center of the zonotile. Since there are five \
distances, the outermost triacontahedron has edge=5. Between the innermost \
triacontahedron of edge=1, and the all-bounding triacontahedron of edge=5, is \
a middle triacontahedron of edge=3. The distances are set somewhat \
arbitrarily; here, having one distance=0 forces a central zonohedron; but the \
other distances, 1 and 22, were chosen merely to ensure (at a guess) that the \
outermost planes at distance=22 would not intersect any of the planes at \
distance=0 or distance=1 ",
 StyleBox["in a point",
  FontSlant->"Italic"],
 ". If we had used distances {-1000, -.1, 0, .1, 1000}, we would have \
obtained the identical nested zonotile.\n\nBy the way, it is merely \
fortuitous that the \[OpenCurlyDoubleQuote]middle\[CloseCurlyDoubleQuote] \
zonotiles are selected and shown so easily. In other examples, one would \
either drop component zonohedra, or admit zonohedra which did not belong.\n\n\
In the second example, \[OpenCurlyDoubleQuote]beaded\[CloseCurlyDoubleQuote] \
zonotiles are created."
}], "Text"],

Cell[CellGroupData[{

Cell["Nested Polar Zonohedra", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=6;
p=N[(1/Degree)*ArcTan[.5^.5]];
v=vectors[n,p];
Print[\"There are \",n,\" plane types.\"];

dist=Table[{-22, -1, 0, 1, 22},{i,n}];(*set distances here*)

d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Equatorial Region", "Text",
 FontSize->18],

Cell["\<\
With a little hard staring, one can see all three triacontahedra in this \
equatorial quasi-section of the zonotile.\
\>", "Text"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1.25;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Innermost Triacontahedron", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=1;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Middle Triacontahedron", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=9;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Outermost Triacontahedron", "Text",
 FontSize->18],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nested Truncated Octahedra", "Subsubsection"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=Map[cent[#]&, edgefind[N[Vertices[Octahedron]]]];
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];
Print[\"There are \",n,\" plane types.\"];

dist=Table[{-22, -1, 0, 1, 22},{i,n}];(*set distances here*)

d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Equatorial Region", "Text",
 FontSize->18],

Cell["\<\
It is difficult to see all three truncated octahedra in this equatorial \
quasi-section of the zonotile.\
\>", "Text"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1.25;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Innermost Truncated Octahedron", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=1;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Middle Truncated Octahedron", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=9;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Outermost Truncated Octahedron", "Text",
 FontSize->18],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Beaded", "Subsubsection"],

Cell[TextData[{
 "Here again we turn to the vectors which determine an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=6 polar zonohedron. ",
 "Were these planes derived from one of the fiendish symmetry groups of the \
Platonic solids, we could not admit the distances {0, 1}, but must have used \
{-1, 1} to achieve the same result.\n\nPlease compare the three distances {0, \
1, 100}, with {0, 1, 2}. You will find that {0, 1, 100} gives three \
triacontahedra beaded along the axis of 6-fold symmetry, while {0, 1, 2} \
gives the three beads, and six others framing in the central bead."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=6;
p=N[(1/Degree)*ArcTan[.5^.5]];
v=vectors[n,p];
Print[\"There are \",n,\" plane types.\"];

dist=Table[{0, 1},{i,n}];(*set distances here*)

d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Bead Triacontahedra", "Text",
 FontSize->18],

Cell["Two equal triacontahedra are on the axis of 6-fold symmetry.", "Text"],

Cell["\<\
Show[Graphics3D[ allpoly[[{3}]] ],
ViewPoint->2.5*unit[{0,-2,0}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Framing Dodecahedra", "Text",
 FontSize->18],

Cell["\<\
Twenty-four dodecahedra frame the triacontahedra (not shown).\
\>", "Text"],

Cell["\<\
Show[Graphics3D[ allpoly[[{2}]] ],
ViewPoint->2.5*unit[{0,-1,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Equatorial Region", "Text",
 FontSize->18],

Cell["\<\
Twelve of the twenty-four dodecahedra are visible in this equatorial \
quasi-section of the zonotile. At the center, the \[OpenCurlyDoubleQuote]cup\
\[CloseCurlyDoubleQuote] into which one of the two triacontahedra fits.\
\>", "Text"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1.25;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Central Array of Dodecahedra", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=3;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Outermost Triacontahedron", "Text",
 FontSize->18],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Zonotiles", "Subsection",
 CellFrame->{{0, 0}, {0.5, 0}}],

Cell[TextData[{
 "Here we make a random assortment of planes, and use the same device as with \
the Platonics to insulate the zonotile3D procedure from improper, \
intersecting zonohedral tiles: we balance the planes across the origin. We \
hold our randomized ",
 StyleBox["z",
  FontSlant->"Italic"],
 " coordinates within narrower bounds than ",
 StyleBox["x",
  FontSlant->"Italic"],
 " or ",
 StyleBox["y",
  FontSlant->"Italic"],
 ". Every time the cell below is evaluated, a different zonotile arises."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=5;(*number of plane-types*)
v=Table[{Random[Real,{-1,1}],Random[Real,{-1,1}], Random[Real,{.5,.7}]},{n}];
Print[\"There are \",n,\" plane types.\"];

dist=Table[Range[-1,1,2],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=3;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step-by-Step Zonotile Construction", "Subsection"],

Cell[TextData[{
 "Here we examine output from the various steps in an especially simple \
zonotile creation: an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=4 polar zonohedron, composed by four rhombic hexahedra. We create four \
planes, as four perpendicular vectors of the form {",
 StyleBox["x, y, z, distance",
  FontSlant->"Italic"],
 "}, where ",
 StyleBox["distance",
  FontSlant->"Italic"],
 " is the distance of the plane from the origin. Knowing beforehand that only \
hexahedra will arise, we use ",
 StyleBox["Binomial[ n, 3]",
  FontWeight->"Bold"],
 " to find their number"
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=4;(*an n=4 polar zonohedron*)
p=N[(1/Degree)*ArcTan[.5^.5]];
hex=Binomial[n,3];
v=vectors[n,p];
Print[\"There are \",n,\" planes.\"];
Print[\"There are \",hex,\" hexahedra.\"];

plns=Table[
Chop[Join[ unit[ v[[i]] ],{i}]],
{i,n}]
d=1;
r=Length[plns];\
\>", "Input"],

Cell["The sign vectors are created.", "Text"],

Cell["\<\
(*****MAKE SIGN VECTORS*****)
Share[sgn1=Flatten[Table[
      Sign[Chop[Det[ plns[[{i,j,k,h}]] ] ] ],
    {i,r-2},
    {j,i+1,r-1},
    {k,j+1,r},
    {h,r}],2];
    Print[\"Before union, \", Length[sgn1], \" sign vectors\"];
    Print[\"After union, \", Length[s=Union[sgn1]], \" sign vectors\"];
    
    (*to obtain degenerate zonohedra, comment out this part*)
    If[d>1,(*if parallel planes exist*)
    s1=Map[Partition[#,d]&, s];(*break sign vectors into lists of length d*)
s2=DeleteCases[s1, {___,Table[0,{d}],___} ];(*get rid of degenerates*)
s=Map[Flatten[#,1]&, s2];(*regroup list of sign vectors*)
Print[\"After discard of degenerates, \", Length[s],  \" sign vectors\"];
]
];
s\
\>", "Input"],

Cell[TextData[{
 "We form the zonotile, using just {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "} of our original planes {",
 StyleBox["x,  y, z, distance",
  FontSlant->"Italic"],
 "}. After postprocessing, we obtain two lists as output: ",
 StyleBox["allpoly",
  FontWeight->"Bold"],
 " and ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ". The former is a list of lists of polygons\[LongDash]in this case, each \
cell of the zonotile is a rhombic hexahedron, there are four such cells, and \
therefore four lists of six rhombic faces each. The latter list, ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", is in the former {center of zonohedron, zonohedron}; pre-calculating the \
centers facilitates exploding a zonotile apart."
}], "Text"],

Cell["\<\
(*****CREATE ZONOTILE*****)
(*create list {center of zonohedron, zonohedron}*)
plns2=Map[#[[{1,2,3}]]&, plns];
r=Length[plns2];
Timing[
Share[
zaq=Table[
pt={0,0,0};
Do[If[ s[[k,j]]==1,
     rmoveto[ pt, plns2[[j]] ],
     rmoveto[ pt, -plns2[[j]] ]
     ],
 {j,r}];

t1=Cases[
Table[
   If[ s[[k,j]]==0,
     rlineto[ pt,2*plns2[[j]] ]
   ],
   {j,r}],{{_,_,_}..},Infinity];
   
   npt=t1[[1,1]];
   vecs=Map[#[[2]]-#[[1]]&, t1];
   c=Chop[ npt+((Plus@@vecs)/2) ];
   t3=
   If[Length[Union[Map[Count[#,0]&, signvector[vecs]]]]==1,
(*if only parallelograms bound zonohedron*)
   Z[vecs, npt],(*make the zonohedron rooted at npt*)
(*else if higher 2n-gons*)
   Map[c+#&,zedron[vecs],{-2}](*make the zonohedron, translate to position*)
   ];

{c,t3},(*center of zonohedron, zonohedron*)
{k,Length[s]}]] ][[1]]


(*****POST PROCESSING AND DISPLAY*****)
Print[\"There are \",Length[zaq],\" zonohedral tiles with duplicates\"];
pl=Map[Length[#[[2]] ]&, zaq];(*#[[1]] is centers, #[[2]] is zonohedra*)
Print[\"There are zonohedra with \",tl=Union[pl],\" faces\"];
Print[\"Before removing duplicates there are \",
Table[Count[pl,tl[[k]]],{k,Length[tl]}], \" zonohedra in each set\"];

(*make lists of tiles by number of faces*)
z=Table[Select[zaq,Length[ #[[2]] ]==tl[[k]]&],
{k,Length[tl]}];
xaq=Drop[z,1];(*we don't need to worry about parallelepipeds*)

(*remove duplicate higher zonohedra, keeping poly centers*)
polyunion=Join[
{z[[1]]},
Table[
hedraunion[ xaq[[k]] ],
{k,Length[xaq]}]
];

(*the unique zonohedra, ordered by number of determining vectors*)
allpoly=Map[#[[2]]&, polyunion, {2} ];(*global*)
Print[\"There are \", Length[allpoly],\" sets altogether\"];
Print[\"There are \",Length /@ allpoly,\" in each set, after removing \
duplicates\"];

(*flattened list of zonohedra*)
polyflat=Flatten[polyunion,1];(*global*)
allpoly (*output the lists of zonohedra*)
polyflat (*output the flattened list of centers and zonohedra*)\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ],Axes->True];\
\>", "Input"],

Cell["\<\
(*animate explosion of the whole zonotile*)
r=4;(*maximum plotrange*)
Do[
Show[Graphics3D[ explode[ polyflat, i] ],
PlotRange->{{-r,r},{-r,r},{-r,r}}],
{i, 0, 2, .1}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["One Failure of  Zonotile Construction", "Subsection"],

Cell[TextData[{
 "Here we seem to be on the right track to creating a rhombic triacontahedron \
in edge=1. We allow output of the six planes, each of the form {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, where ",
 StyleBox["d",
  FontSlant->"Italic"],
 " is distance from the origin. All the {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "} are unit vectors. All are in the same half-space, z<0. Yet \
interpenetrating rhombic icosahedra arise, along with ten rhombic hexahedra, \
where I myself would expect the output to consist of only twenty rhombic \
hexahedra, of two types."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=5;(*an n=12 polar zonohedron*)
p=N[(1/Degree)*ArcTan[.5]];
hex=Binomial[n,3];
v=vectors[n,p];

plns1=Table[
Chop[Join[ unit[ v[[i]] ],If[EvenQ[i], {-1}, {1}] ]],
{i,n}];
d=1;
plns=Join[plns1, {{0,0,-1,-1}}]

(*****CREATE ZONOTILE*****)
zonotile3D[plns];

(*a subset of the whole zonotile*)
Show[Graphics3D[ allpoly[[2]] ],
Boxed->False];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bitten Zonotiles", "Subsection"],

Cell[TextData[{
 "This is an experiment to see whether \[OpenCurlyDoubleQuote]bitten\
\[CloseCurlyDoubleQuote] 3D zonotiles can be constructed after the fashion of \
bitten 2D zonotiles. My conjecture is that a bitten polar zonohedron ought to \
be a rhombic spirallohedron. So far I am unable to actually remove the bites, \
or even be sure if they are properly formed. The variable ",
 StyleBox["bitenumber",
  FontWeight->"Bold"],
 ", below, must be a divisor of ",
 StyleBox["n ",
  FontSlant->"Italic"],
 "(but greater than 1 and less than",
 StyleBox[" n",
  FontSlant->"Italic"],
 "). For instance, when ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=12, we can have bitenumbers 2, 3, 4, and 6. When the bitenumber is 2, and \
were the bites removed, we would (in theory) have nothing left. For the \
moment, unable to actually take the two bites, the packing of zonohedra \
within the zonotile does exhibit a kind of 2-fold symmetry.\n\nIn two \
dimensions, perfect bitten zonogons are obtained by setting the distances of \
the planes to ",
 StyleBox["Mod[i-1,kmod]-((kmod-1)/2)",
  FontWeight->"Bold"],
 " within the loop. In three dimensions, better results ",
 StyleBox["seem",
  FontSlant->"Italic"],
 " to arise with ",
 StyleBox["Mod[i-1,kmod]^2",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=12;(*bounded by an n=12 polar zonohedron*)
bitenumber=4;
kmod=n/bitenumber;

d=1;
plns=Table[
Chop[N[{ Cos[(2*i*Pi/n)], Sin[(2*i*Pi/n)], N[Sqrt[.5]], Mod[i-1,kmod]^2 } ]],
{i,n}];

Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
Show[Graphics3D[ allpoly ],
ViewPoint->2.5*unit[{0,-1,0}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
Show[Graphics3D[ allpoly[[2]] ],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Equatorial Region", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1.0;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bitten Intersection Diagrams", "Subsection"],

Cell[TextData[{
 "Here we create a \[OpenCurlyDoubleQuote]stellation diagram\
\[CloseCurlyDoubleQuote] for the same set of 4-vectors, ",
 StyleBox["plns",
  FontWeight->"Bold"],
 ", which is used as input to the ",
 StyleBox["zonotile3D",
  FontWeight->"Bold"],
 " function. The example below uses the planes for a 3-bite, ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=9 zonotile. The zonotile is created, and an equatorial quasi-section \
displayed. Then we proceed through the same principle steps followed in the \
\[OpenCurlyDoubleQuote]Stellation Diagrams\[CloseCurlyDoubleQuote] section of \
the notebook, but use somewhat modified versions of the functions which find \
the lines of intersection of two planes, or the points of intersection of \
three planes. The modifications were made to allow easier use of the \
4-vectors {",
 StyleBox["x, y, z, d",
  FontSlant->"Italic"],
 "}, but as a result some awkwardness arises elsewhere, for instance, ",
 StyleBox["ViewPoint->2.5*unit[ rawplanes[[ 1, {1,2,3} ]] ]",
  FontWeight->"Bold"],
 ".\n\nTo see all the lines and points of intersection of the planes helps to \
understand the combinatorics of these \[OpenCurlyDoubleQuote]bitten\
\[CloseCurlyDoubleQuote] zonotiles. Some other integer pairs of {",
 StyleBox["n",
  FontSlant->"Italic"],
 ", ",
 StyleBox["bitenumber",
  FontSlant->"Italic"],
 "} to try include {6, 3}, {8, 4}, {10, 2}, {10, 5}, {12, 2}, {12, 3}, {12, \
4}, and {12, 6}. However, when ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is any greater than 10, the lines and points are many, probably too many.\n\
\nSince every zonotile example in this notebook uses a plane arrangement \
named ",
 StyleBox["plns",
  FontWeight->"Bold"],
 ", one can bring the planes from some other zonotile here, and see how they \
intersect.\n\nHere, the default ",
 StyleBox["ViewPoint",
  FontWeight->"Bold"],
 " is on the positive ",
 StyleBox["z",
  FontSlant->"Italic"],
 " axis, since this is the axis of ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-fold symmetry of the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " vectors. This perspective allows the \[OpenCurlyDoubleQuote]bite-fold\
\[CloseCurlyDoubleQuote] symmetry to emerge into view, as well. It may help \
to crop and enlarge the central part of the array of all lines and all points \
of intersection, to see this bite-fold symmetry."
}], "Text"],

Cell["Create Planes, Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
n=9;(*bounded by an n=9 polar zonohedron*)
bitenumber=3;(*three bites*)
kmod=n/bitenumber;

d=1;
plns=Table[
Chop[N[{ Cos[(2*i*Pi/n)], Sin[(2*i*Pi/n)], N[Sqrt[.5]], \
Mod[i-1,kmod]+((kmod-1)/2) } ]],
{i,n}];

Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Show Equatorial Region", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=1.0;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Find Some Lines and All Points of Intersection", "Text",
 FontSize->18],

Cell["\<\
rawplanes=plns;
(*get rid of any parallel to the first*)
planes=Select[rawplanes, Chop[ rawplanes[[1,{1,2,3}]]+#[[{1,2,3}]] \
]!={0,0,0}&];
Print[\"We find the intersections of \", Length[planes]-1, \" planes with the \
first plane.\"];

(*find lines of intersection with first plane in list*)
stel=DeleteCases[Table[(*intersect all legal planes with the first*)
newinter2planes[ {planes[[k]], planes[[1]]} ],
{k,1,Length[planes]}],Null];
(*make lines of intersection*)
Print[Length[stel],\" lines of intersection were found.\"];
lns=Map[{ #[[1]]+(100*(#[[2]])),#[[1]]-(100*(#[[2]])) }&, stel];


(*now for the points of intersection between all planes*)
dex=demi[ Length[rawplanes] ];(*indices of all plane triples*)
rawpts=DeleteCases[
Table[
newinter3planes[ plns[[ dex[[k]] ]] ],
{k, Length[dex]}],
Null];
Print[Length[rawpts], \" raw points of intersection were found.\"];
Print[Length[pts=vunion[rawpts]], \" distinct points of intersection were \
found.\"];

(*and now, knowing the points, we know the PlotRange*)
plndist=Union[ Map[ (Abs[#.plns[[1,{1,2,3}]]])&, pts], SameTest->(#1 - #2 < \
.001 &)];
Print[\"The points lie on \", Length[spheres=Union[ Map[ mag[#]&, pts], \
SameTest->(#1 - #2 < .001 &)]], \" concentric spheres.\"];
maxrad=Max[spheres];\
\>", "Input"],

Cell["\<\
Display Lines of Intersection With First Plane, and All Points\
\>", "Text",
 FontSize->18],

Cell["\<\
r=maxrad;(*PlotRange*)
Show[Graphics3D[
{Line /@ lns,
AbsolutePointSize[5], Point /@ pts}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ {0,0,1} ],(*rawplanes[[1,{1,2,3}]]*)
Axes->True,
Boxed->False];\
\>", "Input"],

Cell["Find All Lines of Intersection", "Text",
 FontSize->18],

Cell["\<\
(*now, all lines of intersection between planes*)
dex=hemi[ Length[rawplanes] ];(*indices of all plane pairs*)
allsegs=Chop[
DeleteCases[
Table[
newinter2planes[ plns[[ dex[[k]] ]] ],
{k, Length[dex]}],
Null]
];
(*make lines of intersection*)
lnsall=Map[{ #[[1]]+(2*r*(#[[2]])),#[[1]]-(2*r*(#[[2]])) }&, allsegs];
Print[Length[lnsall], \" lines of intersection were found altogether.\"];\
\>", "Input"],

Cell["Display All Lines and All Points", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+2;(*PlotRange*)
Show[Graphics3D[
{Line /@ lnsall,
AbsolutePointSize[5], Point/@ pts
}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ {0,0,1} ],(*rawplanes[[1,{1,2,3}]]*)
Axes->True,
Boxed->False];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting Regions of Zonotiles", "Section"],

Cell[TextData[{
 "We operate upon a flattened list of all the zonohedra in the zonotile, ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", in the form {center of zonohedron, zonohedron). At first we select \
subsets of the zonohedra composing the zonotile somewhat crudely; in the \
subsections farther below, more exact methods are used.\n\nNote that in one \
of the \[OpenCurlyDoubleQuote]crude\[CloseCurlyDoubleQuote] examples \
involving a coordinate plane, the ",
 StyleBox["z=h",
  FontSlant->"Italic"],
 " plane is used, by the device ",
 StyleBox["Select[polyflat, Abs[#[[1,3]]-h]<distance&]",
  FontWeight->"Bold"],
 ", where we obtain all zonohedra within ",
 StyleBox["distance",
  FontWeight->"Bold"],
 " of the specified plane. For ",
 StyleBox["x=h",
  FontSlant->"Italic"],
 " we'd write ",
 StyleBox["#[[ 1, 1 ]]",
  FontWeight->"Bold"],
 " and for ",
 StyleBox["y=h",
  FontSlant->"Italic"],
 ", ",
 StyleBox["#[[ 1, 2 ]]",
  FontWeight->"Bold"],
 "; for we are selecting with reference to the centers, {",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 "}, of the zonohedra.\n\nThe other subsections contain methods to select \
zonohedra by exact distance from the origin, or by exact distances from some \
arbitrary plane, possibly perpendicular to a symmetry vector of the zonotile. \
For instance, we obtain \[OpenCurlyDoubleQuote]quasi-sections\
\[CloseCurlyDoubleQuote] along the axes of two-fold, three-fold, and \
five-fold symmetry of the icosahedral group, or, if a zonotile created \
elsewhere has octahedral symmetry, using the axes of two-fold, three-fold, \
and four-fold symmetry. Cylindrical regions around symmetry vectors are \
found, and finally a combination of cylindrical and plane regions.\n\nFurther \
possibilities which occur to me are selecting hollow cylinders of zonohedra, \
or cutting a zonotile by a sphere outside the zonotile, or making a kind of \
polyhedral lattice of zonohedra\[LongDash]for instance, given a zonotile of \
icosahedral symmetry, selecting all zonohedra within some radius of the edges \
of the pentagonal dodecahedron (or their equivalents, within the structure of \
the zonotile). These types of selections would be most practical and pleasing \
using zonotiles composed by thousands of zonohedra, the more the merrier. To \
make such a zonotile requires at least fifty or sixty planes, and thus very \
much time and Kernel RAM."
}], "Text"],

Cell[CellGroupData[{

Cell["Crude Methods", "Subsection"],

Cell["Create Sample Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range limits: k=0, 1/2, 1, 3/2, etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Central Region", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=6;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["Zonohedra Near a Coordinate Plane", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["Zonohedra Near a Coordinate Plane; A Toroidal Region", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;
shell=Map[#[[2]]&, Select[polyflat, (Abs[#[[1,3]]]<distance && mag[ #[[1]] ] \
> 5)&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["Zonohedra to One Side of a Coordinate Plane", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers below the z=distance plane*)
distance=0;
shell=Map[#[[2]]&, Select[polyflat, #[[1,3]]<distance&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["Zonohedra Near a Plane Parallel to a Coordinate Plane", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=h \
plane*)
distance=2;(*set distance*)
h=4;(*set z coordinate, 'height' at which to make quasi-section*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]-h]<distance&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sorting by Exact Distance from Origin", "Subsection"],

Cell[TextData[{
 "This requires some attention: having constructed a zonotile, we have the \
global list ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", of the form {center of zonohedron, zonohedron}. Evaluating the first cell \
below, we find distances from the origin, for all centers of zonohedra. Then, \
",
 StyleBox["knowing these distances",
  FontSlant->"Italic"],
 ", and how many there are, we select only those zonohedra greater than some \
one distance, and less than some other distance.\n\nOf course, one could \
simplify things by selecting all zonohedra at less than some distance, or all \
at more than some distance.\n\nIt is interesting to make animations of a \
zonotile being gradually built up by the additions of zonohedra, from the \
center, out.\n\nThe zonotile upon which the cells below were based is that \
triacontahedron made using the vertices of the Icosahedron (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", the face-planes of the Pentagonal Dodecahedron)",
 ", and distances { -1, 0, 1}, giving edge=3, with a triacontahedron of \
edge=1 at the center."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range spaces: k=0, 1/2,1,1.5,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*distances of zonohedral centers from origin*)
rawrad=Map[mag[ #[[1]] ]&, polyflat];
tol=.001;(*tolerance for Union*)
rad=Union[rawrad, SameTest->(#1 - #2 < tol &)]
Print[\"Zonohedra lie at \",Length[rad], \" distances from the center of the \
zonotile.\"];\
\>", "Input"],

Cell["\<\
(*knowing the distances, choose lower and upper bounds*)
shell=Map[#[[2]]&, Select[polyflat,
(Chop[ mag[#[[1]]]-rad[[4]] ]>=0 && Chop[ mag[#[[1]]]-rad[[6]] ]<=0)&] ];
Print[\"There are \", Length[shell], \" zonohedra selected.\"];
Show[Graphics3D[shell],
ViewPoint->{0,-.25,2},
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*knowing the distances, choose one distance*)
shell=Map[#[[2]]&, Select[polyflat, (Chop[ mag[#[[1]]]-rad[[30]] ]==0)&] ];
Print[\"There are \", Length[shell], \" zonohedra selected.\"];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*knowing the distances, choose all within one distance*)
shell=Map[#[[2]]&, Select[polyflat, (Chop[ mag[#[[1]]]-rad[[2]] ]<=0)&] ];
Print[\"There are \", Length[shell], \" zonohedra selected.\"];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Sort Zonohedra by Exact Distance", "Text",
 FontSize->18],

Cell["\<\
(*Make a list of zonohedra at each distance*)
shells=Table[
Map[#[[2]]&, Select[polyflat, (Chop[ mag[#[[1]]]-rad[[k]] ]==0)&] ],
{k, Length[rad]}];
Print[\"Zonohedra lie at \",Length[rad], \" distances from the center of the \
zonotile.\"];
Print[\"There are \",Length /@ shells, \" zonohedra at the \", Length[rad], \
\" distances from the center of the zonotile.\"];\
\>", "Input"],

Cell["\<\
(*Show one of the \"shells\"*)
Show[Graphics3D[ shells[[5]] ],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*Show a Range of \"shells\"*)
(*Range[3,5,1] == {3,4,5}*)
Show[Graphics3D[ shells[[ Range[3,5,1] ]] ],
ViewPoint->2.5*unit[{0,0,2}],
Axes->True,
Boxed->True];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quasi-sections Along Symmetry Axes", "Subsection"],

Cell[TextData[{
 "Here we select zonohedra according to the distances of their centers from \
some arbitrary plane. In the example, a nested triacontahedral zonotile is \
created, with one triacontahedron at the exact center. This central one is ",
 StyleBox["allpoly[[ 4 ]]",
  FontWeight->"Bold"],
 ". Three sets of symmetry vectors are established: the axes of five-fold, \
three-fold, and two-fold symmetry of the icosahedral symmetry group. A fourth \
random vector is also provided, along with symmetry vectors for the \
octahedral group.\n\nWe choose one of these seven types, by a simple \
assignment: ",
 StyleBox["vec  =  icosa3",
  FontWeight->"Bold"],
 " is the default example.\n\nThen we loop through the zonohedral centers, \
taking their dot products with the chosen axis, ",
 StyleBox["vec",
  FontWeight->"Bold"],
 ". These are the signed distances from a plane through the origin, \
perpendicular to ",
 StyleBox["vec",
  FontWeight->"Bold"],
 ". We take their ",
 StyleBox["Union",
  FontWeight->"Bold"],
 " and name that list ",
 StyleBox["rad",
  FontWeight->"Bold"],
 ". \n\nWe also use ",
 StyleBox["vec",
  FontWeight->"Bold"],
 " as the ",
 StyleBox["ViewPoint",
  FontWeight->"Bold"],
 " when we ",
 StyleBox["Show",
  FontWeight->"Bold"],
 " a subset of the zonohedra. That is, we look at the zonohedra lying in or \
near a plane perpendicular to ",
 StyleBox["vec",
  FontWeight->"Bold"],
 " from a multiple of ",
 StyleBox["vec",
  FontWeight->"Bold"],
 ".\n\nAfter testing the efficacy of the method by selecting all zonohedra ",
 StyleBox["near",
  FontSlant->"Italic"],
 " one of the planes-containing-zonohedra, we make a list of zonohedra with \
centers lying in those planes. This allows animation of the building of the \
zonotile, layer by layer, parallel to the plane perpendicular to ",
 StyleBox["vec",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the entire zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*Show a subset*)
Show[Graphics3D[ allpoly[[4]] ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Icosahedral & Octahedral Symmetry Vectors", "Text",
 FontSize->18],

Cell["\<\
(*axes of 5-fold symmetry*)
icosa5=First@Map[Chop[unit[#]]&, Vertices[Icosahedron] ];
(*axes of 3-fold symmetry*)
icosa3=First@Map[Chop[unit[#]]&, Vertices[Dodecahedron] ];
(*axes of 2-fold symmetry*)
icosa2=First@Map[unit[cent[#]]&, edgefind[N[Vertices[Icosahedron]]]];

(*arbitrary vector*)
arb=unit[ {Random[Real,{0,1}], Random[Real,{0,1}], Random[Real,{0,1}]} ];

(*for zonotiles of octahedral symmetry*)
oct2=unit[{1,0,1}];
oct3=unit[{1,1,1}];
oct4=unit[{0,0,1}];\
\>", "Input"],

Cell["Choose Vector, Find Face Centers and Distances", "Text",
 FontSize->18],

Cell["\<\
vec=icosa3;(*choose which symmetry axis*)

dist=Map[ Chop[ #[[1]].vec ]&, polyflat ];
tol=.001;(*tolerance for Union*)
rad=Union[dist, SameTest->(#1 - #2 < tol &)]
Print[\"Zonohedra lie at \",Length[rad], \" distances\"];
Print[\"The greatest distance is \",maxrad=Max[rad]];\
\>", "Input"],

Cell["Select Zonohedra Near One Distance", "Text",
 FontSize->18],

Cell["\<\
(*select all zonohedra with centers less than some distance from the chosen \
plane*)
breadth=1.5;(*set breadth of selected region*)
h=0;(*set distance at which to make quasi-section; could be h=rad[[k]]*)
shell=Map[#[[2]]&, Select[polyflat, (Abs[(#[[1]].vec)-h]<breadth)&] ];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[ vec ],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["Find Sets of Zonohedra at Each Distance", "Text",
 FontSize->18],

Cell["\<\
(*create all layers*)
layers=Table[
Map[#[[2]]&, Select[polyflat, Chop[ Abs[(#[[1]].vec)-rad[[k]] ] ]==0&] ],
{k, Length[rad]}];
Print[\"There are \", Length[layers], \" sets of zonohedra\"];\
\>", "Input"],

Cell["\<\
Show[Graphics3D[ layers[[15]] ],
ViewPoint->2.5*unit[ vec ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Build Zonotile Layer by Layer: Animation", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+2;(*set PlotRange*)
Table[
stage=Polygon /@ dePair[Chop[parse[ Flatten[layers[[ Range[i] ]],1] ] ] ];
Show[Graphics3D[ stage ],
PlotRange->{{-r,r},{-r,r},{-r,r}},
Boxed->False,
Background->GrayLevel[1],
ViewPoint->2.25*unit[ vec ]],(*from perpendicular to planes-of-selection*)
{i, Length[layers]}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cylindrical Regions Along Symmetry Axes", "Subsection"],

Cell["Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=2;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Icosahedral & Octahedral Symmetry Vectors", "Text",
 FontSize->18],

Cell["\<\
(*axes of 5-fold symmetry*)
icosa5=First@Map[Chop[unit[#]]&, Vertices[Icosahedron] ];
(*axes of 3-fold symmetry*)
icosa3=First@Map[Chop[unit[#]]&, Vertices[Dodecahedron] ];
(*axes of 2-fold symmetry*)
icosa2=First@Map[unit[cent[#]]&, edgefind[N[Vertices[Icosahedron]]]];

(*arbitrary vector*)
arb=unit[ {Random[Real,{0,1}], Random[Real,{0,1}], Random[Real,{0,1}]} ];

(*for zonotiles of octahedral symmetry*)
oct2=unit[{1,0,1}];
oct3=unit[{1,1,1}];
oct4=unit[{0,0,1}];\
\>", "Input"],

Cell["Choose Vector, Select Cylindrical Region, Display", "Text",
 FontSize->18],

Cell["\<\
vec=icosa3;(*choose which symmetry axis*)
side=First@NullSpace[ {vec} ];(*for ViewPoint*)
radius=4;(*set radius of cylindrical region*)

sceptre=Map[#[[2]]&, \
Select[polyflat,(mag[(vec*(#[[1]].vec))-#[[1]]]<radius)&] ];
Print[Length[sceptre], \" zonohedra were selected within the cylinder of \
radius \", radius];

If[sceptre!={},
Show[Graphics3D[sceptre],
ViewPoint->2.5*unit[ side ],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cylindrical Region & Perpendicular Plane Region", "Subsection"],

Cell[TextData[{
 "Here we combine a disk-like planar region with a cylindrical region, the \
one perpendicular to an axis ",
 StyleBox["vec",
  FontWeight->"Bold"],
 ", the other surrounding that axis. To evaluate the example, first create a \
zonotile and declare symmetry vectors as in  ",
 StyleBox["Cylindrical Region",
  FontWeight->"Bold"],
 " ",
 "subsection above.\n\n",
 StyleBox["ViewPoint",
  FontWeight->"Bold"],
 " is set to the intermediate direction ",
 StyleBox["vec - side",
  FontWeight->"Bold"],
 ", where ",
 StyleBox["vec",
  FontWeight->"Bold"],
 " is the chosen axis, and ",
 StyleBox["side",
  FontWeight->"Bold"],
 " is a vector perpendicular to ",
 StyleBox["vec",
  FontWeight->"Bold"],
 ". These types of zonohedral arrays are somewhat difficult to see properly \
from any direction; real-time rotation helps, which can be had by evaluating ",
 StyleBox["<<RealTime3D`",
  FontWeight->"Bold"],
 ". To return to regular display evaluate ",
 StyleBox["<<Default3D`",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
vec=icosa5;(*choose axis*)
side=First@NullSpace[ {vec} ];
(*select all zonohedra with centers less than some distance from the chosen \
plane*)
breadth=1.5;(*set breadth of selected region*)
h=0;(*set distance at which to make quasi-section*)
radius=3;(*and all zonohedra within a cylinder of this radius around axis vec*)

shell=Map[#[[2]]&, Select[polyflat,
(Abs[(#[[1]].vec)-h]<breadth)
||
(mag[(vec*(#[[1]].vec))-#[[1]]]<3)&]
];
If[shell!={},
Show[Graphics3D[shell],
ViewPoint->2.5*unit[ vec-side ],
PlotRange->All,
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building Zonotiles: Animation", "Section"],

Cell["\<\
I have been making animations of zonotile construction for many years. The \
examples below are simple. It is possible to have each set of zonohedra come \
spinning in from space and settle into their own little nests, gradually \
changing color as they do so; and I have done just this! Or, every zonohedron \
in the zonotile may be exported to POV-Ray, where degrees of transparency may \
be assigned, and the zonohedra may spin into view out of nothingness, and \
then assume their proper colors, and gravitate to their positions.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Animation I: Build Zonotile From Center to Periphery", "Subsection"],

Cell[TextData[{
 "We animate the building of a zonotile from the central zonohedra, outward, \
and use the ",
 StyleBox["dePair",
  FontWeight->"Bold"],
 " function to remove coincident faces. This drastically reduces render \
times, without affecting the outward appearance. By way of example we use the \
Triacontahedron of edge=3, derived from the vertices of the Platonic \
Icosahedron (hence, face-planes of the Platonic Dodecahedron). This zonotile \
is composed by 233 zonohedra."
}], "Text"],

Cell["1. Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range spaces: k=0, 1/2,1,1.5,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["2. Find distances of zonohedra", "Text",
 FontSize->18],

Cell["\<\
(*distances of zonohedral centers from origin*)
rawrad=Map[mag[ #[[1]] ]&, polyflat];
tol=.001;(*tolerance for Union*)
rad=Union[rawrad, SameTest->(#1 - #2 < tol &)]
Print[\"Zonohedra lie at \",Length[rad], \" distances from the center of the \
zonotile.\"];
maxrad=Max[rad];(*center of farthest zonohedron*)\
\>", "Input"],

Cell["3. Animate", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+3;(*set plotrange, adjust as necessary*)

Do[

rawshell=Map[#[[2]]&, Select[polyflat, (Chop[ mag[#[[1]]]-rad[[k]] ]<=0)&] ];
shell=Polygon /@ dePair[Chop[parse[ Flatten[rawshell,1] ] ] ];
(*Print[\"Number of zonohedra is \", Length[rawshell]];*)

\tShow[
\t\tGraphics3D[shell],
\t\tPlotRange->{{-r,r},{-r,r},{-r,r}},
\t\tBoxed->False,
\t\tViewPoint->2.25*unit[{0,0,2}]
\t],
\t
{k, 1, Length[rad], 1}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation II: Build Zonotile From Lowest to Highest", "Subsection"],

Cell[TextData[{
 "We animate the building of a zonotile from the bottom, upward. First, the \
",
 StyleBox["Union",
  FontWeight->"Bold"],
 " of all ",
 StyleBox["z",
  FontWeight->"Bold"],
 " coordinates of zonohedral centers is found. Then, a ",
 StyleBox["Do",
  FontWeight->"Bold"],
 " loop effects the animation. To reduce polygon count, the ",
 StyleBox["dePair",
  FontWeight->"Bold"],
 " function strips away any polygons which have fallen into coincidence, so \
that all we see is the exterior of the zonohedral array\[LongDash]which is \
all we would see, anyway."
}], "Text"],

Cell["1. Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range spaces: k=0, 1/2,1,1.5,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell[TextData[{
 "2. Find ",
 StyleBox["z",
  FontSlant->"Italic"],
 " coordinates",
 " of zonohedral centers"
}], "Text",
 FontSize->18],

Cell["\<\
(*z coords of zonohedral centers*)
zrawrad=Map[#[[1,3]]&, polyflat];
tol=.001;(*tolerance for Union*)
zrad=Union[zrawrad, SameTest->(#1 - #2 < tol &)];
Print[\"Zonohedral centers have \",Length[zrad], \" unique z coordinates.\"];
maxrad=Max[rad];(*center of highest/lowest zonohedron*)\
\>", "Input"],

Cell["3. Animate", "Text",
 FontSize->18],

Cell["\<\
(*knowing how many z coords, and what they are, choose all below a given \
one*)
r=maxrad+3;(*plotrange, adjust as necessary*)

Do[
rawshell=Map[#[[2]]&, Select[polyflat, (Chop[ #[[1,3]]-zrad[[k]] ]<=0)&] ];
shell=Polygon /@ dePair[Chop[parse[ Flatten[rawshell,1] ] ] ];

Show[Graphics3D[shell],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[{0,-1,.5}],
Boxed->False],
{k, 1, Length[zrad], 1}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Animation III: Build Zonotile by Expanding Cylindrical Regions\
\>", "Subsection"],

Cell["1. Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1;(*set Range spaces: k=0, 1/2,1,1.5,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["Icosahedral & Octahedral Symmetry Vectors", "Text",
 FontSize->18],

Cell["\<\
(*axes of 5-fold symmetry*)
icosa5=First@Map[Chop[unit[#]]&, Vertices[Icosahedron] ];
(*axes of 3-fold symmetry*)
icosa3=First@Map[Chop[unit[#]]&, Vertices[Dodecahedron] ];
(*axes of 2-fold symmetry*)
icosa2=First@Map[unit[cent[#]]&, edgefind[N[Vertices[Icosahedron]]]];

(*arbitrary vector*)
arb=unit[ {Random[Real,{0,1}], Random[Real,{0,1}], Random[Real,{0,1}]} ];

(*for zonotiles of octahedral symmetry*)
oct2=unit[{1,0,1}];
oct3=unit[{1,1,1}];
oct4=unit[{0,0,1}];\
\>", "Input"],

Cell["3. Choose Axis, Find Radii", "Text",
 FontSize->18],

Cell["\<\
vec=icosa5;(*choose which symmetry axis*)
side=First@NullSpace[ {vec} ];(*for ViewPoint*)

dist=Map[ ( mag[(vec*(#[[1]].vec))-#[[1]]] )&, polyflat ];
tol=.001;(*tolerance for Union*)
Print[\"The radii are \", rad=Union[dist, SameTest->(#1 - #2 < tol &)]];
Print[\"Zonohedra lie at \",Length[rad], \" distances from the chosen \
axis\"];
Print[\"The greatest distance is \",maxrad=Max[rad]];

radius=rad[[3]];(*set radius of cylindrical region*)

sceptre=Map[#[[2]]&, \
Select[polyflat,(mag[(vec*(#[[1]].vec))-#[[1]]]<radius)&] ];
Print[Length[sceptre], \" zonohedra were selected within the cylinder of \
radius \", radius];

If[sceptre!={},
Show[Graphics3D[sceptre],
ViewPoint->2.5*unit[ side ],
Axes->True,
Boxed->True],
Print[\"No zonohedra selected!\"]
];\
\>", "Input"],

Cell["4. Animate", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+2;(*set PlotRange*)
Do[
sceptre=Map[#[[2]]&, Select[polyflat,
(Chop[ mag[(vec*(#[[1]].vec))-#[[1]]] -rad[[k]] ]<=0)&] ];

shell=Polygon /@ dePair[Chop[parse[ Flatten[sceptre,1] ] ] ];

Show[Graphics3D[shell],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ side ],
Boxed->False],
{k,Length[rad]}];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exploding Zonotiles", "Section"],

Cell[TextData[{
 "The ",
 StyleBox["explode",
  FontWeight->"Bold"],
 " function accepts a list in the form {{center, zonohedron}, ...}, and \
translates each zonohedron along the vector to its center by a multiple of \
that vector; as in ",
 StyleBox["explode[ zonolist, multiple]",
  FontWeight->"Bold"],
 ". "
}], "Text"],

Cell["Explode the entire zonotile", "Text"],

Cell["Show[Graphics3D[ explode[ polyflat, .2] ]];", "Input"],

Cell["Explode a selected region", "Text"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2;
zonolist=Select[polyflat, Abs[#[[1,3]]]<distance&];
Show[Graphics3D[ Map[#[[2]]&, zonolist] ],
ViewPoint->{0,0,2.5}];(*unexploded*)

Show[Graphics3D[explode[zonolist, .2]],
ViewPoint->{0,0,2.5}];(*exploded*)\
\>", "Input"],

Cell["Animation", "Text",
 FontSize->18,
 FontSlant->"Italic"],

Cell["\<\
(*how big is the slightly exploded zonotile?*)
(*use this info to set the plotrange 'r' in the next cell, to animate*)
Show[Graphics3D[ explode[ polyflat, .2] ], Axes->True];\
\>", "Input"],

Cell["\<\
(*animate explosion of the whole zonotile*)
r=26;(*maximum plotrange; if i goes from 0 to 1, set to twice initial i=0 \
radius*)
Do[
Show[Graphics3D[ explode[ polyflat, i] ],
PlotRange->{{-r,r},{-r,r},{-r,r}}],
{i, 0, 1, .1}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Color Zonohedra by Volume", "Section"],

Cell[TextData[{
 "The ",
 StyleBox["volumeSort",
  FontWeight->"Bold"],
 " function accepts a list of zonohedra, and sorts it into sublists according \
to volume. Usually, but not always, this sorts the zonohedra into their \
different types; that is, it rarely does happen that two different zonohedra \
have the same volume. The resulting list of lists of zonohedra can then be \
assigned colors and displayed.\n\nA zonotile example is provided, so that all \
examples below will work properly. Choices must be made at various stages. \
However, any zonotile created elsewhere in the notebook will work here, by \
skipping to Stage 2, ",
 StyleBox["Choose What to Sort",
  FontWeight->"Bold"],
 ". In fact, if some subset of a zonotile has already been created elsewhere, \
perhaps, who knows, named ",
 StyleBox["shell",
  FontWeight->"Bold"],
 ", one can substitute ",
 StyleBox["shell",
  FontWeight->"Bold"],
 " for ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 " in Stage 2. The ",
 StyleBox["volumeSort",
  FontWeight->"Bold"],
 " function operates upon a list of polyhedra, whether it be in the form \
found in ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", {{center of zonohedron, zonohedron}, ...}, or simply {{zonohedron},{ \
zonohedron}, ...}."
}], "Text"],

Cell["1. Construct Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Dodecahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1/2;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["2. Choose What to Sort ...", "Text",
 FontSize->18],

Cell["\<\
(*the whole zonotile, unexploded*)
s=volumeSort[ polyflat ];\
\>", "Input"],

Cell["\<\
(*the whole zonotile, exploded*)
s=volumeSort[ explode[ polyflat, .2] ];\
\>", "Input"],

Cell["\<\
(*a region of the zonotile, exploded*)
distance=2;
s=volumeSort[ explode[Select[polyflat, Abs[#[[1,3]]]<distance&], .2] ];\
\>", "Input"],

Cell["3. Choose Color List", "Text",
 FontSize->18],

Cell["\<\
(*random colors, if more than 10 colors are needed*)
colorlist=Table[RGBColor[Random[Real,{0,1}],
\t\tRandom[Real,{0,1}],
\t\tRandom[Real,{0,1}]],{Length[s]}];\
\>", "Input"],

Cell["\<\
(*if the number of colors needed is 10 or less*)
colorlist={
RGBColor[1,.25,.25],
RGBColor[.25,.25,1],
RGBColor[1,1,0],
RGBColor[.5,.5,.5],
RGBColor[1,0,1],
RGBColor[.5,0,0],
RGBColor[0,0,.5],
RGBColor[.5,.5,0],
RGBColor[.5,0,.5],
RGBColor[0,.5,0]
};\
\>", "Input"],

Cell["4a. Display All Colored Zonohedra", "Text",
 FontSize->18],

Cell["\<\
(*display colored zonotile*)
qaq=Graphics3D[
{EdgeForm[GrayLevel[0]],
\tTable[ {SurfaceColor[colorlist[[i]],GrayLevel[.5], 5],
\t\tPolygon /@ s[[ i ]]}, {i,Length[s]}]
}];
Show[qaq,
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
   PlotRange->All,
ViewPoint->2.25*unit[{0,-.5,1}]];\
\>", "Input"],

Cell["4b. Display One Type of Colored Zonohedra", "Text",
 FontSize->18],

Cell["\<\
(*display one volume-group of colored zonotile*)
(*which one?*)
k=6;
qaq=Graphics3D[
{EdgeForm[GrayLevel[0]],
\t{SurfaceColor[colorlist[[k]],GrayLevel[.5], 5],
\t\tPolygon /@ s[[ k ]]}}];
Show[qaq,
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
   PlotRange->All,
ViewPoint->2.25*unit[{0,-1,1}]];\
\>", "Input"],

Cell["4c. Display Two or More Types of Colored Zonohedra", "Text",
 FontSize->18],

Cell["Length[s](*check how many sets?*)", "Input"],

Cell["\<\
(*display some subset of the colored zonotile*)
(*declare indices*)
dex={1,7};
qaq=Graphics3D[
\tTable[
\t\t{EdgeForm[GrayLevel[0]],
\t\t{SurfaceColor[colorlist[[ dex[[k]] ]],GrayLevel[.5], 5],
\t\tPolygon /@ s[[ dex[[k]] ]]}},
\t{k, Length[dex]}]
\t];
Show[qaq,
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
   PlotRange->All,
ViewPoint->2.25*unit[{0,-1,1}]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Color Zonohedra by Distance From Origin", "Section"],

Cell[TextData[{
 "We sort the zonohedra by distance from the center of the zonotile (the \
origin), and then assign a random color to each set.\n\nWhen the zonotile is \
determined from the vertices of a Platonic\[LongDash]hence, the face-planes \
of its dual\[LongDash]and the plane distances are set to {-1/2, 1/2}, as in \
the example below, we obtain \[OpenCurlyDoubleQuote]something like\
\[CloseCurlyDoubleQuote] the ",
 StyleBox["reciprocal of the set of all mainline stellations of that \
polyhedron",
  FontSlant->"Italic"],
 ". In the example below, we use the vertices of the Dodecahedron, hence the \
face-planes of the Icosahedron, which has eight mainline stellations. We find \
that the zonohedra are divided into eight sets, according to their distances \
from the origin. In Step 6 below, ",
 StyleBox["Build Entire Zonotile",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontWeight->"Bold"],
 "we add each shell or layer of zonohedra in turn, that is, first ",
 StyleBox["shells[[1]]",
  FontWeight->"Bold"],
 ", then ",
 StyleBox["shells[[{1,2}]]",
  FontWeight->"Bold"],
 ", then ",
 StyleBox["shells[[{1,2,3}]]",
  FontWeight->"Bold"],
 ", etc. Perhaps these eight stages of construction correspond most closely \
to the eight mainline stellations. Also note that in the stellation diagram \
for the Icosahedron, points of intersection lie at eight distances from the \
origin."
}], "Text"],

Cell["1. Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Dodecahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

k=1/2;(*set Range limits: k=0, 1/2, 1, 3/2,etc.*)

dist=Table[Range[-k,k,1],{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["2. Find Distances", "Text",
 FontSize->18],

Cell["\<\
(*distances of zonohedral centers from origin*)
rawrad=Map[mag[ #[[1]] ]&, polyflat];
tol=.001;(*tolerance for Union*)
rad=Union[rawrad, SameTest->(#1 - #2 < tol &)]
Print[\"Zonohedra lie at \",Length[rad], \" distances from the center of the \
zonotile.\"];
Print[\"The greatest distance is \",maxrad=Max[rad], \".\"];\
\>", "Input"],

Cell["3. Sort Zonohedra by Distance", "Text",
 FontSize->18],

Cell["\<\
(*Make a list of zonohedra at each distance*)
shells=Table[
Map[#[[2]]&, Select[polyflat, (Chop[ mag[#[[1]]]-rad[[k]] ]==0)&] ],
{k, Length[rad]}];
Print[\"Zonohedra lie at \",Length[rad], \" distances from the center of the \
zonotile.\"];
Print[\"There are \",Length /@ shells, \" zonohedra at the \", Length[rad], \
\" distances.\"];\
\>", "Input"],

Cell["4. Color Zonohedral Sets", "Text",
 FontSize->18],

Cell["\<\
(*random colors*)
colorlist=Table[RGBColor[Random[Real,{0,1}],
\t\tRandom[Real,{0,1}],
\t\tRandom[Real,{0,1}]],{Length[shells]}];

coloredshells=Table[
Graphics3D[
{EdgeForm[GrayLevel[0]],
{SurfaceColor[colorlist[[i]],GrayLevel[.5], 5],
\t\tshells[[ i ]]}}],
\t\t
{i,Length[shells]}];\
\>", "Input"],

Cell["5. Display One Set", "Text",
 FontSize->18],

Cell["\<\
Show[coloredshells[[ 6 ]],
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
ViewPoint->2.25*unit[{0,-.5,1}]];\
\>", "Input"],

Cell["6. Build Entire Zonotile", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+2;(*set PlotRange*)
Table[
Show[coloredshells[[ Range[i] ]],
PlotRange->{{-r,r},{-r,r},{-r,r}},
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
ViewPoint->2.25*unit[{0,-.5,1}]],
{i, Length[coloredshells]}];\
\>", "Input"],

Cell["7. Display Each Stage", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+2;(*set PlotRange*)
Table[
Show[coloredshells[[ i ]],
PlotRange->{{-r,r},{-r,r},{-r,r}},
Boxed->False,
Background->GrayLevel[0],
LightSources -> 
   {
   {{0,0,2}, RGBColor[.5, .5, .5]},
   {{-2,-.5,1}, RGBColor[1, 1, 1]}
   },
ViewPoint->2.25*unit[{0,-.5,1}]],
{i, Length[coloredshells]}];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stellation Diagrams", "Section"],

Cell[TextData[{
 "Since some of the arrangements of planes treated above are just ",
 StyleBox["exactly those which give stellations of convex polyhedra",
  FontSlant->"Italic"],
 ", I provide some examples of stellation diagrams, first in 3D and then \
projected into a plane. Then intersection points are found in the plane, and \
the radii of those points, and circles are drawn containing those points.\n\n\
The method used here will work on any polyhedron such that all faces are \
perpendicular to the lines joining the center of the polyhedron to the \
centers of the faces. For instance, the Platonic solids. With modifications, \
it could produce stellation diagrams for at least some of the Archimedean \
solids; for in those cases, there are two or three types of polygon, and thus \
two or three different diagrams.\n\nUnmodified, it will work on polyhedra \
such as Kepler\[CloseCurlyQuote]s Rhombic Dodecahedron and Triacontahedron. \
To do so, one must change the code slightly at the beginning of Stage 1 of \
the ",
 StyleBox["Single Stellation",
  FontWeight->"Bold"],
 " subsection",
 ", ",
 StyleBox["Find Lines and Points of Intersection",
  FontWeight->"Bold"],
 ". The Pentagonal Dodecahedron is the default example.\n\nIn the last stage, \
",
 StyleBox["Mark Intersections and Find Radii",
  FontWeight->"Bold"],
 ", we have reduced the stellation diagram to a plane (as one usually sees \
it; the 3D diagram created here is unusual). The points of intersection in \
the plane are found and marked by red dots. The distances of these points \
from the center of the diagram are found, and marked by blue circles. In the \
case of the Pentagonal Dodecahedron, there are three distances (radii), and \
three circles comprehend all points of intersection. Note that these three \
correspond exactly to the three concentric shells of zonohedra in the \
corresponding zonotile. To make this zonotile, go to ",
 StyleBox["Zonotile Examples",
  FontWeight->"Bold"],
 ", subsection \[OpenCurlyDoubleQuote]",
 StyleBox["Platonic Zonotiles I\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " and set ",
 StyleBox["k to",
  FontWeight->"Bold"],
 " 1/2.\n"
}], "Text"],

Cell[CellGroupData[{

Cell["Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron", "Subsection"],

Cell[TextData[{
 "The KRT is the dual of the Archimedean Icosidodecahedron, and is bounded by \
thirty equal rhombs. Its stellations number in the hundreds of millions. We \
create a KRT here and scale it properly for use below, in the ",
 StyleBox["Single Stellation",
  FontWeight->"Bold"],
 " subsection, where the first lines must then be commented out."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{0},{i,n}];(*all planes intersect at the origin*)
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];

(*Show the zonohedron*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];

rawfaces=parse[ allpoly ];
sca=1/Chop[mag[cent[ rawfaces[[1]] ] ] ];(*scale factor*)
polyfaces1=sca*rawfaces;(*scale the KRT to unit inradius*)\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Stellation of the Pentagonal Dodecahedron", "Subsection"],

Cell["1. Find Lines and Points of Intersection", "Text",
 FontSize->18],

Cell["\<\
(*comment out the three lines below if using the KRT*)
rawfaces=parse[ Polyhedron[Dodecahedron] ];
sca=1/Chop[mag[cent[ rawfaces[[1]] ] ] ];(*scale factor*)
polyfaces1=sca*rawfaces;

rawplanes=Map[Chop[cent[#]]&, polyfaces1];(*all face-centers*)
(*get rid of any parallel to the first*)
planes=Select[rawplanes, Chop[rawplanes[[1]]+#]!={0,0,0}&];
Print[\"We find the intersections of \", Length[planes]-1, \" planes with the \
first plane.\"];

(*find lines of intersection with first plane in list*)
stel=Table[(*intersect all legal planes with the first*)
inter[{unit[planes[[k]]], mag[ planes[[k]] ]}, {unit[planes[[1]]], mag[ \
planes[[1]] ]} ],
{k,2,Length[planes]}];

(*make lines of intersection*)
lns=Map[{ #[[1]]+(30*(#[[2]])),#[[1]]-(30*(#[[2]])) }&, stel];

(*now for the points of intersection between all planes*)
plns=Map[unit[#]&, rawplanes];(*convert normals to unit vectors*)
dex=demi[ Length[rawplanes] ];(*indices of all plane triples*)
rawpts=DeleteCases[
Table[(*use unit vectors plus actual distances*)
inter3planes[ plns[[ dex[[k]] ]], mag /@ rawplanes[[ dex[[k]] ]] ],
{k, Length[dex]}],
Null];
Print[Length[pts=vunion[rawpts]], \" distinct points of intersection were \
found.\"];

(*and now, knowing the points, we find plane-distances and PlotRange*)
(*we must divide by actual inradius*)
inrad=mag[ rawplanes[[1]] ];(*we assume all planes equal*)
plndist=Union[ Map[ (Abs[#.plns[[1]]]/inrad)&, pts], SameTest->(#1 - #2 < \
.001 &)];
Print[\"The points lie on \", Length[spheres=Union[ Map[ mag[#]&, pts], \
SameTest->(#1 - #2 < .001 &)]], \" concentric spheres.\"];
maxrad=Max[spheres];(*minimum PlotRange*)\
\>", "Input"],

Cell["2. 3D Stellation Diagram", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+1;(*PlotRange*)
Show[Graphics3D[
{Polygon /@ polyfaces1,
Line /@ lns,
AbsolutePointSize[5], Point/@ pts}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ rawplanes[[1]] ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["3. Plane Projection of Diagram", "Text",
 FontSize->18],

Cell["\<\
gbas=NullSpace[ {N[ unit[planes[[1]]] ]} ];(*basis vectors*)

lns1=Map[ Dot[ gbas, # ]&, lns, {2}];(*project lines*)

diagram=Graphics[{AbsoluteThickness[1],Line /@ lns1}];(*project lines and \
points*)

r=maxrad;(*PlotRange*)
Show[diagram,
AspectRatio->Automatic,
PlotRange->{{-r,r},{-r,r}},
Frame->True];\
\>", "Input"],

Cell["4. Mark Intersections and Find Radii", "Text",
 FontSize->18],

Cell["\<\
n=Length[lns1];
dex=Flatten[Table[{i,j},{i,n-1},{j,i+1,n}],1];

points=DeleteCases[
Map[ Chop[ lineinter[ lns1[[ #[[1]] ]], lns1[[ #[[2]] ]] ] ]&, dex],
{}];
rad=Union[ Map[mag[#]&, points], SameTest->(#1 - #2 < tol &)];

redpts=Graphics[{AbsolutePointSize[8],RGBColor[1,0,0], Point /@ points}];
bluecircles=Graphics[{RGBColor[0,0,1], Map[Circle[{0,0}, #]&, rad]}];

r=maxrad+1;(*PlotRange*)
Show[{diagram,redpts,bluecircles},
AspectRatio->Automatic,
PlotRange->{{-r,r},{-r,r}},
Frame->True];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiple Stellations", "Section"],

Cell[TextData[{
 "Here is an arcane subject\[LongDash]doubly arcane, for we explore \
\[OpenCurlyDoubleQuote]double stellations\[CloseCurlyDoubleQuote] of \
polyhedra. Of course, we do not create the stellations themselves, only the \
arrangements of planes, and some stellation diagrams. We nestle one \
polyhedron inside another larger one\[LongDash]the default example uses two \
concentric Platonic dodecahedra. Then we create the zonotiles(s) determined \
by such planar arrangements.\n\nThis routine suffers from confusion about the \
inradius, and how to find the distances at which the face-planes of the \
second dodecahedron will intersect points of intersection from the first. \
Eventually various assumptions are made (faces all equal, all equal inradii) \
which make the routine of little general use. In the example, the Platonic \
dodecahedron is doubly stellated\[LongDash]two concentric dodecahedra are \
created such that the outer just kisses some ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-ic points of intersection of the first. Now ",
 StyleBox["k",
  FontSlant->"Italic"],
 "+1 planes meet there, and a (",
 StyleBox["k",
  FontSlant->"Italic"],
 "+1)-ic zonohedron is determined at its proper relative position."
}], "Text"],

Cell[CellGroupData[{

Cell["Kepler\[CloseCurlyQuote]s Rhombic Triacontahedron", "Subsection"],

Cell[TextData[{
 "The KRT is the dual of the Archimedean Icosidodecahedron, and is bounded by \
thirty equal rhombs. Its stellations number in the hundreds of millions. We \
create a KRT here and scale it properly for use below, in the ",
 StyleBox["Double Stellation",
  FontWeight->"Bold"],
 " subsection, where the first lines must then be",
 " commented out."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{0},{i,n}];(*all planes intersect at the origin*)
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];

(*Show the zonohedron*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];

rawfaces=parse[ allpoly ];
sca=1/Chop[mag[cent[ rawfaces[[1]] ] ] ];(*scale factor*)
polyfaces1=sca*rawfaces;(*scale the KRT to unit inradius*)\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Double Stellation of the Platonic Pentagonal Dodecahedron", "Subsection"],

Cell["1. Find Lines and Points of Intersection", "Text",
 FontSize->18],

Cell["\<\
(*comment out the three lines below if using the KRT*)
rawfaces=parse[ Polyhedron[Dodecahedron] ];
sca=1/Chop[mag[cent[ rawfaces[[1]] ] ] ];(*scale factor*)
polyfaces1=sca*rawfaces;

rawplanes=Map[Chop[cent[#]]&, polyfaces1];(*all face-centers*)
(*get rid of any parallel to the first*)
planes=Select[rawplanes, Chop[rawplanes[[1]]+#]!={0,0,0}&];
Print[\"We find the intersections of \", Length[planes]-1, \" planes with the \
first plane.\"];

(*find lines of intersection with first plane in list*)
stel=Table[(*intersect all legal planes with the first*)
inter[{unit[planes[[k]]], mag[ planes[[k]] ]}, {unit[planes[[1]]], mag[ \
planes[[1]] ]} ],
{k,2,Length[planes]}];

(*make lines of intersection*)
lns=Map[{ #[[1]]+(30*(#[[2]])),#[[1]]-(30*(#[[2]])) }&, stel];

(*now for the points of intersection between all planes*)
plns=Map[unit[#]&, rawplanes];(*convert normals to unit vectors*)
dex=demi[ Length[rawplanes] ];(*indices of all plane triples*)
rawpts=DeleteCases[
Table[(*use unit vectors plus actual distances*)
inter3planes[ plns[[ dex[[k]] ]], mag /@ rawplanes[[ dex[[k]] ]] ],
{k, Length[dex]}],
Null];
Print[Length[pts=vunion[rawpts]], \" distinct points of intersection were \
found.\"];

(*and now, knowing the points, we find plane-distances and PlotRange*)
(*we must divide by actual inradius*)
inrad=mag[ rawplanes[[1]] ];(*we assume all planes equal*)
plndist=Union[ Map[ (Abs[#.plns[[1]]]/inrad)&, pts], SameTest->(#1 - #2 < \
.001 &)];
Print[\"The points lie on \", Length[spheres=Union[ Map[ mag[#]&, pts], \
SameTest->(#1 - #2 < .001 &)]], \" concentric spheres.\"];
maxrad=Max[spheres];(*minimum PlotRange*)\
\>", "Input"],

Cell["2. 3D Stellation Diagram", "Text",
 FontSize->18],

Cell["\<\
r=maxrad+1;(*PlotRange*)
Show[Graphics3D[
{Polygon /@ polyfaces1,
Line /@ lns,
AbsolutePointSize[5], Point/@ pts}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ rawplanes[[1]] ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["Create and Display All Lines of Intersection", "Text",
 FontSize->16,
 FontWeight->"Bold"],

Cell["\<\
allsegs=Table[
rplns=RotateRight[rawplanes,j-1];(*cycle the list for outer loop*)
planes=Select[rplns, Chop[rplns[[1]]+#]!={0,0,0}&];


stel=Table[(*intersect all legal planes with the first*)
inter[{unit[planes[[k]]], mag[ planes[[k]] ]}, {unit[planes[[1]]], mag[ \
planes[[1]] ]} ],
{k,2,Length[planes]}];(*inner loop*)

(*make lines of intersection*)
Map[{ #[[1]]+(100*(#[[2]])),#[[1]]-(100*(#[[2]])) }&, stel],
{j, Length[rawplanes]}];(*outer loop*)
lnsall=Flatten[allsegs, 1];

r=maxrad+2;(*PlotRange*)
Show[Graphics3D[
{Polygon /@ polyfaces1,
Line /@ lnsall,
AbsolutePointSize[5], Point/@ pts}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ rawplanes[[1]] ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["3. Create Outer Polyhedron", "Text",
 FontSize->18],

Cell["\<\
Print[\"The \", Length[pts], \" intersection points are at the \", \
Length[plndist], \" plane distances \", Chop[plndist]];\
\>", "Input"],

Cell[TextData[{
 "The ratios between one plane-distance and another are the most significant \
factor in the determined zonotiles. In our default example, using the \
Pentagonal Dodecahedron, the distance-pair {1,2} is equivalent to {2,4} \
because the two ratios are equal. In fact, when doubly stellating the \
dodecahedron, there are only three possible outcomes, using distance-pairs \
{2, 3}, {2, 4}, and, say, {2, any random number greater than plane-distance[[ \
2 ]]}. For instance: {{1., 2.23607}, {1., 4.23607}, {1, 574.531}}.\n\n\
Similarly, in the other provided example, double stellation of Kepler\
\[CloseCurlyQuote]s Rhombic Triacontahedron, we may ignore all \
plane-distances less than 1, ",
 StyleBox["except",
  FontSlant->"Italic"],
 " 0. The unique distance 0, when applied to a zonotile, means that one set \
of fifteen planes intersects at the origin, and thirty other planes intersect \
outside the origin. Instead of the four plane-distances of the \
\[OpenCurlyDoubleQuote]usual\[CloseCurlyDoubleQuote] double stellation, {-d2, \
-d1, d1, d2}, we have {-d1, 0, d1}, and d1 can be set to any non-zero number \
whatsoever without affecting the zonotile. A zonotile of edge=3 is created.\n\
\nSetting aside this special type of double stellation, we ignore all \
plane-distances less than 1, and consider only all distinct ratios between \
pairs; for each distinct ratio gives a distinct zonotile. To do this, suppose \
there are just ",
 StyleBox["k",
  FontSlant->"Italic"],
 " distances, ",
 StyleBox["k",
  FontSlant->"Italic"],
 ">=1: then the number of ",
 StyleBox["k",
  FontSlant->"Italic"],
 " things taken two at a time equals how many pairs can be assembled. But \
some pairs will give equal ratios to others. By weeding these out, we are \
left with some number of pairs of distances embodying unique ratios. These \
will give unique zonotiles. Among these we will find the unique ratios given \
by {1, any other distance>1}."
}], "Text"],

Cell["\<\
polyfaces2=polyfaces1*plndist[[3]];(*this works on the default example, \
change as desired*)

r=maxrad+2;(*PlotRange*)
Show[Graphics3D[
{Polygon /@ polyfaces2,
Line /@ lns,
AbsolutePointSize[5], Point/@ pts
}
],
PlotRange->{{-r,r},{-r,r},{-r,r}},
ViewPoint->2.5*unit[ rawplanes[[1]] ],
Boxed->False];\
\>", "Input"],

Cell["4. Create Zonotile", "Text",
 FontSize->18],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=rawplanes;

v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];

dist=Table[{-plndist[[3]], -1, 1, plndist[[3]]},{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];\
\>", "Input"],

Cell["\<\
(*Show the whole zonotile*)
Show[Graphics3D[ allpoly ],
Axes->True,
Boxed->True];\
\>", "Input"],

Cell["\<\
(*Show just some of the subsets*)
Show[Graphics3D[ allpoly[[{4}]] ],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*explode the whole zonotile*)
Show[Graphics3D[ explode[ polyflat, .2] ]];\
\>", "Input"],

Cell["\<\
(*select all zonohedra with centers less than some distance from the z=0 \
plane*)
distance=2.5;(*set distance*)
shell=Map[#[[2]]&, Select[polyflat, Abs[#[[1,3]]]<distance&] ];
Show[Graphics3D[shell],
ViewPoint->2.5*unit[{0,0,1}],
Boxed->False];\
\>", "Input"],

Cell["\<\
(*select all zonohedra within a given radius from the origin*)
radius=6;
shell=Map[#[[2]]&, Select[ polyflat, mag[ #[[1]] ]<radius&] ];
Show[Graphics3D[ shell ],
ViewPoint->{0,-1.5,1},
Boxed->False];\
\>", "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zones of Zonohedra", "Section"],

Cell["\<\
Zonotiles are tiled by zonohedra, zonohedra are bounded by zonogons, and for \
any one such zonogon there is an equal and opposite zonogon on the other side \
of the zonohedron. When zonohedra close-pack, they share common zonogons. The \
idea here is to select a \[OpenCurlyDoubleQuote]zone\[CloseCurlyDoubleQuote] \
of zonohedra, such that the same zonogon arises again and again, connecting \
the zonohedra. These equal zonogons are called the \
\[OpenCurlyDoubleQuote]interfaces\[CloseCurlyDoubleQuote] of the solid zone.\
\>", "Text"],

Cell["1. Construct Zonotile, Preview Zonohedra", "Text",
 FontSize->18],

Cell[TextData[{
 "The method is somewhat as follows. Having created a zonotile, we have the \
list ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 ", {center of zonohedron, zonohedron}, where the second member \
\[OpenCurlyDoubleQuote]zonohedron\[CloseCurlyDoubleQuote] is itself a list of \
zonogons. We also have the crudely-sorted list ",
 StyleBox["allpoly",
  FontWeight->"Bold"],
 ", in which the sublists contain zonohedra of an equal number of faces. \
Those zonohedra within any one list may yet be, and most likely are, of more \
than one type. The first sublist is always the hexahedra. First, we display \
the first member of each sublist in turn (if the zonotile is composed \
entirely by hexahedra, there is but the one sublist)."
}], "Text"],

Cell["\<\
(*****MAKE ARRANGEMENT OF PLANES*****)
v1=N[Vertices[Icosahedron]];(*choose Platonic*)
v=Union[v1,SameTest->(Chop[#1+#2]=={0,0,0}&)];
n=Length[v];
dist=Table[{-1, 0, 1},{i,n}];
d=Length[dist[[1]]];
plns=Flatten[Table[
Chop[Join[ unit[ v[[i]] ],{dist[[i,j]]}]],
{i,Length[v]},{j, d}],1];
Print[\"There are \",r=Length[plns],\" planes altogether.\"];

(*****CREATE ZONOTILE*****)
zonotile3D[plns];


(*Show the first of each of the allpoly*)
If[Length[allpoly]>1,

Do[Show[Graphics3D[ allpoly[[k,1]] ],
Boxed->False],
{k, Length[allpoly]}],

(*else*)
Show[Graphics3D[ allpoly ],
Boxed->False]
]\
\>", "Input"],

Cell["2. Choose k-gonal Interface", "Text",
 FontSize->18],

Cell[TextData[{
 "Set ",
 StyleBox["k",
  FontSlant->"Italic"],
 " to 4, 6, 8, etc., to find rhombs, hexagons, octagons, etc."
}], "Text"],

Cell["\<\
k=4;(*what type of face do we want?*)
(*find k-gonal faces are*)
poly=Map[parse[#]&, polyflat];
types=Map[ Length[#]&, poly, {2}];
kgonal=Union[First /@ Position[types, k] ];\
\>", "Input"],

Cell[TextData[{
 "3. Find Zonohedron Containing a ",
 StyleBox["k",
  FontSlant->"Italic"],
 "-gonal face near the center of the zonotile."
}], "Text",
 FontSize->18],

Cell[TextData[{
 "It may be that one of our k-gons bounds a zonohedron at the center of the \
zonotile. Or perhaps not. We search within a radius of 3. If none are found, \
increase the radius. Or, look for a zonohedron near the periphery of the \
zonotile: set radius higher, and change \[OpenCurlyQuote]",
 StyleBox["< radius\[CloseCurlyQuote]",
  FontWeight->"Bold"],
 " to \[OpenCurlyQuote]",
 StyleBox[">radius\[CloseCurlyQuote]",
  FontWeight->"Bold"],
 ". No matter which zonohedron is chosen, a solid zone connects it with \
others.",
 "\n\nUsing the first of the list, we obtain the index into ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 " of a zonohedron within our solid zone, and then display. However, we may \
miss the desired zonohedron in this way."
}], "Text"],

Cell["\<\
radius=5;
hedra=Select[ polyflat[[ kgonal ]], mag[#[[1]]]<radius&];
If[Length[hedra]<1, Print[\"No zonohedra found, change radius\"],

Print[Length[hedra], \" zonohedra found\"];
cendex=kgonal[[ First@Flatten[Position[ polyflat[[ kgonal ]], hedra[[1,1]] ]] \
]];

Show[Graphics3D[ polyflat[[cendex,2]] ],
ViewPoint->{0,1,2},
Boxed->False];]\
\>", "Input"],

Cell[TextData[{
 "We may not have found the desired zonohedron upon which to root our solid \
zone. We can examine each one in turn, and note which member of the list \
makes our target. Caution: if many zonohedra compose the list ",
 StyleBox["hedra",
  FontWeight->"Bold"],
 ", we may overstrain available FrontEnd RAM."
}], "Text"],

Cell["\<\
Do[
Show[Graphics3D[ hedra[[k,2]] ],
PlotLabel->ToString[k]],
{k, Length[hedra]}];\
\>", "Input"],

Cell["Suppose the 5th zonohedron looks good.", "Text"],

Cell["\<\
cendex=kgonal[[ First@Flatten[Position[ polyflat[[ kgonal ]], hedra[[5,1]] ]] \
]];

Show[Graphics3D[ polyflat[[cendex,2]] ],
ViewPoint->{0,1,2},
Boxed->False];\
\>", "Input"],

Cell["4. Find and Display k-gon; Find Opposite k-gon", "Text",
 FontSize->18],

Cell["\<\
Having found a central zonohedron, we now find the k-gon and its opposite.\
\>", "Text"],

Cell["\<\
selected=Flatten[Position[countsides[ polyflat[[cendex]] ], k]]

Show[Graphics3D[ polyflat[[ cendex,2,selected[[1]] ]] ],
Boxed->False];

chos=mysurf[ polyflat[[ cendex,2,selected[[1]] ]] ];
opps=Select[polyflat[[cendex,2]], (Chop[ mysurf[#] + chos]=={0,0,0} || Chop[ \
mysurf[#] - chos]=={0,0,0})&]\
\>", "Input"],

Cell["5. Construct Solid Zone of Zonohedra and Display", "Text",
 FontSize->18],

Cell[TextData[{
 "Two ",
 StyleBox["While",
  FontWeight->"Bold"],
 " loops find the zonohedra within the zone, first to one side, then to the \
other side, of the central zonohedron. A list of indices into ",
 StyleBox["polyflat",
  FontWeight->"Bold"],
 " is returned from each ",
 StyleBox["While",
  FontWeight->"Bold"],
 ", and then the two are combined into the complete list, ",
 StyleBox["bothdex",
  FontWeight->"Bold"],
 "."
}], "Text"],

Cell["\<\
(*initialize*)
refpt=mycent[ opps[[1]] ];
newdex=cendex;
alldex={};
seldex={0,0};

While[Length[seldex]>1,

seldex=DeleteCases[
Table[
If[
Select[polyflat[[k,2]], ( Chop[mycent[#]-refpt]=={0,0,0} )&] != {},
k],
{k, Length[polyflat]}], Null];

If[Length[seldex]>1,
newdex=First@Complement[seldex,{newdex}];
alldex=Union[alldex,seldex];
refpt=Chop[ (polyflat[[newdex,1]]-refpt)+polyflat[[newdex,1]] ],

(*else*)
Print[\"Empty set reached after \", Length[alldex], \" zonohedra found\"]
]

];
fdex=alldex

(*initialize*)
refpt=mycent[ opps[[2]] ];
newdex=cendex;
alldex={};
seldex={0,0};

While[Length[seldex]>1,

seldex=DeleteCases[
Table[
If[
Select[polyflat[[k,2]], ( Chop[mycent[#]-refpt]=={0,0,0} )&] != {},
k],
{k, Length[polyflat]}], Null];

If[Length[seldex]>1,
newdex=First@Complement[seldex,{newdex}];
alldex=Union[alldex,seldex];
refpt=Chop[ (polyflat[[newdex,1]]-refpt)+polyflat[[newdex,1]] ],

(*else*)
Print[\"Empty set reached after \", Length[alldex], \" zonohedra found\"]
]

]
sdex=alldex

bothdex=Union[fdex,sdex]
Length[bothdex]

Show[Graphics3D[ polyflat[[bothdex,2]] ],
Axes->True,
Boxed->True,
ViewPoint->2.5*unit[{0,0,3}]];\
\>", "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section"],

Cell["\<\
The latest versions of both this notebook (3D_Zonotiles.nb) and my 2D \
zonotiles notebook (2D_Zonotiles.nb) can be found using the link below.\
\>", "Text"],

Cell[TextData[StyleBox["http://library.wolfram.com/infocenter/MathSource/1197/\
", "Hyperlink"]], "Text",
 FontFamily->"Courier",
 FontSize->12,
 FontWeight->"Bold"],

Cell["\<\
The Regular Polytopes notebook can be found at the link below. Create \
hidden-detail-removed projections of convex four-dimensional polytopes which \
are reminiscent of 3D zonotiles.\
\>", "Text"],

Cell[TextData[StyleBox["http://library.wolfram.com/infocenter/MathSource/593/\
", "Hyperlink"]], "Text",
 FontFamily->"Courier",
 FontSize->12,
 FontWeight->"Bold"],

Cell[TextData[{
 "My Rhombic Spirallohedra notebook can be found at the link below. These \
non-convex polyhedra, when considered to arise from the stripping-away of \
rhombic hexahedra from polar zonohedra, exemplify what I call \
\[OpenCurlyDoubleQuote]bitten\[CloseCurlyDoubleQuote] zonotiles, which seem \
to arise in any ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-dimensional space; and some, at least, are space-fillers. An attempt is \
made in the ",
 StyleBox["Zonotile Examples",
  FontWeight->"Bold"],
 " section, above, to create bitten zonotiles from (of course) an arrangement \
of planes. Bitten 2D zonotiles are created from line arrangements in my 2D \
zonotiles notebook (link above)."
}], "Text"],

Cell[TextData[StyleBox["http://library.wolfram.com/infocenter/MathSource/613/\
", "Hyperlink",
 FontFamily->"Courier",
 FontSize->12,
 FontWeight->"Bold"]], "Text"],

Cell["Some other references bearing upon zonotopal tilings:", "Text"],

Cell[TextData[{
 "J. RICHTER-GEBERT AND G. ZIEGLER, ",
 StyleBox["Zonotopal Tilings and the Bohne-Dress Theorem",
  FontSlant->"Italic"],
 ",\nin Jerusalem Combinatorics 1993 (H. Barcelo and G. Kalai, eds.), pp. 211\
\[Dash]232,\nContemporary Mathematics 178, Amer. Math. Soc. 1994.\n\nA. Bj\
\[OSlash]rner, M. Las Vergnas, B. Sturmfels, N. White and G.M. Ziegler, ",
 StyleBox["Oriented Matroids",
  FontSlant->"Italic"],
 ",\nEncyclopedia of Mathematics and Its Applications 46, Cambridge \
University Press, Cambridge, 1993.\n\nJ. RAMBAU AND G. M. ZIEGLER, ",
 StyleBox["Projections of Polytopes and the Generalized Baues Conjecture",
  FontSlant->"Italic"],
 ", Discrete Comput. Geom. 16 (1996), 215\[Dash]237.\n\nN.G. de Bruijn. ",
 StyleBox["Algebraic Theory of Penrose's Non-periodic Tilings of the Plane",
  FontSlant->"Italic"],
 ".\nKon. Nederl. Akad. Wetensch. Proc. Ser. A, 43(84), 1981.\n\nN.G. de \
Bruijn. ",
 StyleBox["Dualization of Multigrids",
  FontSlant->"Italic"],
 ". J. Phys. France, C(47):3{9, 1981."
}], "Text"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{877, 903},
WindowMargins->{{2, Automatic}, {Automatic, 7}},
Magnification->1,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e748\:670817\
\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Presentation"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{24, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 12], 
         Cell[
          StyleData[All, "Condensed"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{8, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 8], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          CellLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 5, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, CellFrameLabelMargins -> 
          6, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{12, Inherited}, {20, 40}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 36, FontWeight -> "Bold"], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 40}}, LineSpacing -> {1, 0}, 
             FontSize -> 44], 
            Cell[
             StyleData["Title", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 8}}, FontSize -> 20], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{2, 10}, {12, 30}}, FontSize -> 24]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
             FontSize -> 24], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 36], 
            Cell[
             StyleData["Subtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 4}}, FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 18]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Helvetica", FontSize -> 14, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Subsubtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {8, 8}}, FontSize -> 12], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> True, CellDingbat -> 
             "\[FilledSquare]", CellMargins -> {{25, Inherited}, {8, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 16, FontWeight -> "Bold", 
             Background -> GrayLevel[0.833326]], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellMargins -> {{40, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Section", "Condensed"], 
             CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{13, 0}, {7, 22}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellFrame -> {{0, 0}, {0.5, 0}}, 
             CellDingbat -> "\[FilledSmallSquare]", 
             CellMargins -> {{22, Inherited}, {8, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{36, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 22], 
            Cell[
             StyleData["Subsection", "Condensed"], 
             CellMargins -> {{16, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 22}}, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> 
             "\[FilledSmallSquare]", 
             CellMargins -> {{22, Inherited}, {8, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubsection", FontFamily -> "Times", FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{34, 10}, {11, 26}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Subsubsection", "Condensed"], 
             CellMargins -> {{17, Inherited}, {6, 12}}, FontSize -> 10], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 14}}, FontSize -> 11]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, Hyphenation -> 
             True, LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
             FontSize -> 14], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Text", "Condensed"], CellMargins -> {{8, 10}, {6, 6}},
              LineSpacing -> {1, 1}, FontSize -> 11], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{12, 10}, {6, 6}}, 
             DefaultNewInlineCellStyle -> "None", Hyphenation -> True, 
             LineSpacing -> {1, 3}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "SmallText", FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Presentation"], 
             CellMargins -> {{24, 10}, {8, 8}}, LineSpacing -> {1, 5}, 
             FontSize -> 12], 
            Cell[
             StyleData["SmallText", "Condensed"], 
             CellMargins -> {{8, 10}, {5, 5}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, 
             FontSize -> 7]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names. Some attributes for these styles are actually set in FormatType Styles \
(in the last section of this stylesheet). ", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{45, 10}, {5, 7}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Presentation"], 
             CellMargins -> {{72, Inherited}, {8, 10}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Input", "Condensed"], 
             CellMargins -> {{40, 10}, {2, 3}}, FontSize -> 11], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}},
              LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Closed]], 
         Cell[
          StyleData["InputOnly"], Evaluatable -> True, CellGroupingRules -> 
          "InputGrouping", CellHorizontalScrolling -> True, DefaultFormatType -> 
          DefaultInputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
          InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
          LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
          "Input", StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellMargins -> {{47, 10}, {7, 5}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, DefaultFormatType -> 
             DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, CounterIncrements -> "Output"], 
            Cell[
             StyleData["Output", "Presentation"], 
             CellMargins -> {{72, Inherited}, {10, 8}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Output", "Condensed"], 
             CellMargins -> {{41, Inherited}, {3, 2}}, FontSize -> 11], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{39, 0}, {6, 4}}, FontSize -> 9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Message", StyleMenuListing -> None, 
             FontSize -> 11, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Message", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 7, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Print", StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Print", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{4, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             None, FormatType -> InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None, FontFamily -> "Courier", FontSize -> 
             10], 
            Cell[
             StyleData["Graphics", "Presentation"], 
             ImageMargins -> {{62, Inherited}, {Inherited, 0}}], 
            Cell[
             StyleData["Graphics", "Condensed"], 
             ImageMargins -> {{38, Inherited}, {Inherited, 0}}, Magnification -> 
             0.6], 
            Cell[
             StyleData["Graphics", "Printout"], 
             ImageMargins -> {{30, Inherited}, {Inherited, 0}}, Magnification -> 
             0.8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["CellLabel", "Condensed"], FontSize -> 9], 
            Cell[
             StyleData["CellLabel", "Printout"], FontFamily -> "Courier", 
             FontSize -> 8, FontSlant -> "Italic", FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Inline Formatting", "Section"], 
         Cell[
         "These styles are for modifying individual words or letters in a \
cell exclusive of the cell tag.", "Text"], 
         Cell[
          StyleData["RM"], StyleMenuListing -> None, FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
          StyleData["BF"], StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          StyleData["IT"], StyleMenuListing -> None, FontSlant -> "Italic"], 
         Cell[
          StyleData["TR"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["TI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["TB"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["TBI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["MR"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["MO"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["MB"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["MBO"], StyleMenuListing -> None, FontFamily -> "Courier",
           FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["SR"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["SO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["SB"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["SBO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SO10"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 10, FontWeight -> "Plain", FontSlant -> 
             "Italic"], 
            Cell[
             StyleData["SO10", "Printout"], StyleMenuListing -> None, 
             FontFamily -> "Helvetica", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["SO10", "EnhancedPrintout"], StyleMenuListing -> None, 
             FontFamily -> "Futura", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Formulas and Programming", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 1, SingleLetterItalics -> True], 
            Cell[
             StyleData["InlineFormula", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["InlineFormula", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["InlineFormula", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], 
             CellMargins -> {{42, Inherited}, {Inherited, Inherited}}, 
             CellHorizontalScrolling -> True, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
            Cell[
             StyleData["DisplayFormula", "Presentation"], 
             LineSpacing -> {1, 5}, FontSize -> 16], 
            Cell[
             StyleData["DisplayFormula", "Condensed"], LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["DisplayFormula", "Printout"], FontSize -> 10]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
             CellMargins -> {{10, 4}, {0, 8}}, CellHorizontalScrolling -> 
             True, Hyphenation -> False, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, FontFamily -> "Courier"], 
            Cell[
             StyleData["Program", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Program", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 9]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Hyperlink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["MainBookLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["AddOnsLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["RefGuideLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["GettingStartedLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"], FontSize -> 
             16], 
            Cell[
             StyleData["OtherInformationLink", "Condensed"], FontSize -> 11], 
            
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 10, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Placeholder"], Placeholder -> True, StyleMenuListing -> 
             None, FontSlant -> "Italic", FontColor -> 
             RGBColor[0.890623, 0.864698, 0.384756], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["Placeholder", "Presentation"]], 
            Cell[
             StyleData["Placeholder", "Condensed"]], 
            Cell[
             StyleData["Placeholder", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrimaryPlaceholder"], StyleMenuListing -> None, 
             DrawHighlighted -> True, FontSlant -> "Italic", Background -> 
             RGBColor[0.912505, 0.891798, 0.507774], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["PrimaryPlaceholder", "Presentation"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Condensed"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Printout"]]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options. This is particularly true of Input and Output.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, Hyphenation -> False, 
          AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
         Cell[
          StyleData["InputForm"], InputAutoReplacements -> {}, 
          AllowInlineCells -> False, Hyphenation -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {0.6, 1}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          StyleData["InlineCell"], TextAlignment -> Left, ScriptLevel -> 1, 
          StyleMenuListing -> None], 
         Cell[
          StyleData["InlineCellEditing"], StyleMenuListing -> None, 
          Background -> RGBColor[1, 0.749996, 0.8]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Automatic Styles", "Section"], 
         Cell[
         "The cells below define styles that are used to affect the display \
of certain types of objects in typeset expressions.  For example, \
\"UnmatchedBracket\" style defines how unmatched bracket, curly bracket, and \
parenthesis characters are displayed (typically by coloring them to make them \
stand out).", "Text"], 
         Cell[
          StyleData["UnmatchedBracket"], StyleMenuListing -> None, FontColor -> 
          RGBColor[0.760006, 0.330007, 0.8]]}, Closed]]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (2016\:5e748\:670817\:65e5)", 
  StyleDefinitions -> "Default.nb"],
MacintoshSystemPageSetup -> \
"00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:001\n\
0000I00000400`<300000BL?00400@0000000000000006P801T1T00000000000\n\
00000000000000000000000000000000"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 29, 0, 103, "Title"],
Cell[612, 24, 95, 5, 102, "Subsubtitle"],
Cell[CellGroupData[{
Cell[732, 33, 26, 0, 67, "Section"],
Cell[761, 35, 1560, 29, 296, "Text"],
Cell[2324, 66, 1191, 24, 260, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3552, 95, 31, 0, 67, "Section"],
Cell[3586, 97, 6120, 128, 908, "Text"],
Cell[9709, 227, 66, 2, 38, "Text"],
Cell[9778, 231, 8322, 163, 1176, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18137, 399, 33, 0, 47, "Section"],
Cell[18173, 401, 92, 4, 42, "Input",
 InitializationCell->True],
Cell[18268, 407, 65, 1, 27, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[18358, 412, 26, 0, 54, "Subsection"],
Cell[18387, 414, 2289, 77, 1107, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[20713, 496, 27, 0, 38, "Subsection"],
Cell[20743, 498, 523, 17, 237, "Input",
 InitializationCell->True],
Cell[21269, 517, 383, 14, 192, "Input",
 InitializationCell->True],
Cell[21655, 533, 423, 11, 123, "Input",
 InitializationCell->True],
Cell[22081, 546, 137, 4, 42, "Input",
 InitializationCell->True],
Cell[22221, 552, 424, 15, 192, "Input",
 InitializationCell->True],
Cell[22648, 569, 424, 15, 207, "Input",
 InitializationCell->True],
Cell[23075, 586, 1177, 33, 462, "Input",
 InitializationCell->True],
Cell[24255, 621, 279, 6, 72, "Input",
 InitializationCell->True],
Cell[24537, 629, 142, 5, 57, "Input",
 InitializationCell->True],
Cell[24682, 636, 375, 10, 108, "Input",
 InitializationCell->True],
Cell[25060, 648, 545, 15, 207, "Input",
 InitializationCell->True],
Cell[25608, 665, 95, 1, 27, "Input",
 InitializationCell->True],
Cell[25706, 668, 603, 20, 267, "Input",
 InitializationCell->True],
Cell[26312, 690, 457, 14, 192, "Input",
 InitializationCell->True],
Cell[26772, 706, 366, 9, 117, "Input",
 InitializationCell->True],
Cell[27141, 717, 125, 4, 42, "Input",
 InitializationCell->True],
Cell[27269, 723, 62, 0, 27, "Input"],
Cell[27334, 725, 418, 15, 192, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[27789, 745, 32, 0, 38, "Subsection"],
Cell[27824, 747, 2077, 48, 323, "Text"],
Cell[29904, 797, 2737, 93, 1362, "Input",
 InitializationCell->True],
Cell[32644, 892, 2737, 101, 1482, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[35418, 998, 41, 0, 38, "Subsection"],
Cell[35462, 1000, 359, 14, 177, "Input",
 InitializationCell->True],
Cell[35824, 1016, 343, 13, 177, "Input",
 InitializationCell->True],
Cell[36170, 1031, 465, 12, 162, "Input",
 InitializationCell->True],
Cell[36638, 1045, 24, 0, 33, "Text"],
Cell[36665, 1047, 437, 15, 207, "Input",
 InitializationCell->True],
Cell[37105, 1064, 409, 10, 132, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[37551, 1079, 27, 0, 38, "Subsection"],
Cell[37581, 1081, 136, 7, 87, "Input",
 InitializationCell->True],
Cell[37720, 1090, 112, 7, 87, "Input",
 InitializationCell->True],
Cell[37835, 1099, 104, 4, 42, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37988, 1109, 36, 0, 47, "Section"],
Cell[CellGroupData[{
Cell[38049, 1113, 71, 1, 54, "Subsection"],
Cell[38123, 1116, 1425, 28, 225, "Text"],
Cell[39551, 1146, 474, 18, 267, "Input"],
Cell[40028, 1166, 667, 15, 91, "Text"],
Cell[40698, 1183, 63, 0, 27, "Input"],
Cell[40764, 1185, 65, 0, 27, "Input"],
Cell[40832, 1187, 445, 16, 54, "Text"],
Cell[41280, 1205, 82, 3, 42, "Input"],
Cell[41365, 1210, 347, 9, 53, "Text"],
Cell[41715, 1221, 123, 4, 57, "Input"],
Cell[41841, 1227, 460, 17, 53, "Text"],
Cell[42304, 1246, 73, 3, 42, "Input"],
Cell[42380, 1251, 2138, 61, 268, "Text"],
Cell[44521, 1314, 173, 6, 87, "Input"],
Cell[44697, 1322, 418, 14, 54, "Text"],
Cell[45118, 1338, 95, 4, 57, "Input"],
Cell[45216, 1344, 1642, 47, 266, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46895, 1396, 74, 1, 38, "Subsection"],
Cell[46972, 1399, 843, 18, 131, "Text"],
Cell[CellGroupData[{
Cell[47840, 1421, 36, 0, 42, "Subsubsection"],
Cell[47879, 1423, 701, 35, 522, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48617, 1463, 35, 0, 28, "Subsubsection"],
Cell[48655, 1465, 700, 35, 522, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49392, 1505, 29, 0, 28, "Subsubsection"],
Cell[49424, 1507, 694, 35, 522, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50155, 1547, 36, 0, 28, "Subsubsection"],
Cell[50194, 1549, 701, 35, 522, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50932, 1589, 48, 0, 28, "Subsubsection"],
Cell[50983, 1591, 702, 35, 522, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51734, 1632, 75, 1, 38, "Subsection"],
Cell[CellGroupData[{
Cell[51834, 1637, 35, 0, 42, "Subsubsection"],
Cell[51872, 1639, 1197, 19, 261, "Text"],
Cell[53072, 1660, 249, 6, 87, "Input"],
Cell[53324, 1668, 222, 6, 87, "Input"],
Cell[53549, 1676, 237, 6, 87, "Input"],
Cell[53789, 1684, 256, 6, 87, "Input"],
Cell[54048, 1692, 246, 6, 87, "Input"],
Cell[54297, 1700, 4783, 97, 683, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59117, 1802, 55, 0, 28, "Subsubsection"],
Cell[59175, 1804, 473, 17, 252, "Input"],
Cell[59651, 1823, 106, 5, 72, "Input"],
Cell[59760, 1830, 108, 4, 57, "Input"],
Cell[59871, 1836, 99, 3, 42, "Input"],
Cell[59973, 1841, 268, 8, 102, "Input"],
Cell[60244, 1851, 224, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60505, 1863, 59, 0, 28, "Subsubsection"],
Cell[60567, 1865, 1634, 32, 262, "Text"],
Cell[62204, 1899, 474, 19, 282, "Input"],
Cell[62681, 1920, 106, 5, 72, "Input"],
Cell[62790, 1927, 268, 8, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63095, 1940, 72, 0, 28, "Subsubsection"],
Cell[63170, 1942, 1512, 25, 244, "Text"],
Cell[64685, 1969, 452, 18, 267, "Input"],
Cell[65140, 1989, 104, 4, 57, "Input"],
Cell[65247, 1995, 131, 4, 57, "Input"],
Cell[65381, 2001, 131, 4, 57, "Input"],
Cell[65515, 2007, 270, 8, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65822, 2020, 68, 0, 28, "Subsubsection"],
Cell[65893, 2022, 658, 10, 109, "Text"],
Cell[66554, 2034, 564, 21, 297, "Input"],
Cell[67121, 2057, 104, 4, 57, "Input"],
Cell[67228, 2063, 131, 4, 57, "Input"],
Cell[67362, 2069, 131, 4, 57, "Input"],
Cell[67496, 2075, 129, 4, 57, "Input"],
Cell[67628, 2081, 270, 8, 102, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67947, 2095, 76, 1, 38, "Subsection"],
Cell[CellGroupData[{
Cell[68048, 2100, 35, 0, 42, "Subsubsection"],
Cell[68086, 2102, 1212, 21, 261, "Text"],
Cell[69301, 2125, 251, 6, 87, "Input"],
Cell[69555, 2133, 265, 6, 87, "Input"],
Cell[69823, 2141, 278, 6, 87, "Input"],
Cell[70104, 2149, 1470, 28, 356, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71611, 2182, 60, 0, 28, "Subsubsection"],
Cell[71674, 2184, 540, 20, 297, "Input"],
Cell[72217, 2206, 95, 4, 57, "Input"],
Cell[72315, 2212, 108, 4, 57, "Input"],
Cell[72426, 2218, 99, 3, 42, "Input"],
Cell[72528, 2223, 268, 8, 102, "Input"],
Cell[72799, 2233, 222, 7, 102, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73070, 2246, 75, 1, 38, "Subsection"],
Cell[73148, 2249, 1469, 27, 204, "Text"],
Cell[74620, 2278, 506, 19, 267, "Input"],
Cell[75129, 2299, 106, 5, 72, "Input"],
Cell[75238, 2306, 110, 4, 57, "Input"],
Cell[75351, 2312, 99, 3, 42, "Input"],
Cell[75453, 2317, 268, 8, 102, "Input"],
Cell[75724, 2327, 224, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75985, 2339, 104, 2, 38, "Subsection"],
Cell[76092, 2343, 819, 16, 206, "Text"],
Cell[76914, 2361, 705, 20, 297, "Input"],
Cell[77622, 2383, 95, 4, 57, "Input"],
Cell[77720, 2389, 221, 7, 102, "Input"],
Cell[77944, 2398, 124, 5, 72, "Input"],
Cell[78071, 2405, 99, 3, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78207, 2413, 93, 2, 38, "Subsection"],
Cell[78303, 2417, 886, 17, 206, "Text"],
Cell[79192, 2436, 727, 21, 312, "Input"],
Cell[79922, 2459, 95, 4, 57, "Input"],
Cell[80020, 2465, 221, 7, 102, "Input"],
Cell[80244, 2474, 128, 5, 72, "Input"],
Cell[80375, 2481, 99, 3, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80511, 2489, 122, 2, 38, "Subsection"],
Cell[80636, 2493, 1262, 32, 150, "Text"],
Cell[81901, 2527, 409, 15, 222, "Input"],
Cell[82313, 2544, 95, 4, 57, "Input"],
Cell[82411, 2550, 244, 8, 102, "Input"],
Cell[82658, 2560, 192, 6, 87, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82887, 2571, 47, 0, 38, "Subsection"],
Cell[82937, 2573, 421, 7, 71, "Text"],
Cell[83361, 2582, 739, 21, 312, "Input"],
Cell[84103, 2605, 95, 4, 57, "Input"],
Cell[84201, 2611, 222, 7, 102, "Input"],
Cell[84426, 2620, 124, 5, 72, "Input"],
Cell[84553, 2627, 99, 3, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84689, 2635, 57, 0, 38, "Subsection"],
Cell[84749, 2637, 328, 5, 71, "Text"],
Cell[85080, 2644, 432, 17, 252, "Input"],
Cell[85515, 2663, 95, 4, 57, "Input"],
Cell[85613, 2669, 99, 3, 42, "Input"],
Cell[85715, 2674, 219, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85971, 2686, 145, 5, 38, "Subsection"],
Cell[86119, 2693, 340, 7, 52, "Text"],
Cell[86462, 2702, 325, 16, 237, "Input"],
Cell[86790, 2720, 95, 4, 57, "Input"],
Cell[86888, 2726, 124, 5, 72, "Input"],
Cell[87015, 2733, 99, 3, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87151, 2741, 155, 5, 38, "Subsection"],
Cell[87309, 2748, 371, 10, 52, "Text"],
Cell[87683, 2760, 394, 17, 252, "Input"],
Cell[88080, 2779, 95, 4, 57, "Input"],
Cell[88178, 2785, 124, 5, 72, "Input"],
Cell[88305, 2792, 99, 3, 42, "Input"],
Cell[88407, 2797, 222, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88666, 2809, 59, 0, 38, "Subsection"],
Cell[88728, 2811, 502, 13, 72, "Text"],
Cell[89233, 2826, 433, 14, 207, "Input"],
Cell[89669, 2842, 95, 4, 57, "Input"],
Cell[89767, 2848, 126, 5, 72, "Input"],
Cell[89896, 2855, 243, 8, 102, "Input"],
Cell[90142, 2865, 223, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90402, 2877, 56, 0, 38, "Subsection"],
Cell[90461, 2879, 658, 10, 109, "Text"],
Cell[91122, 2891, 408, 14, 207, "Input"],
Cell[91533, 2907, 95, 4, 57, "Input"],
Cell[91631, 2913, 124, 5, 72, "Input"],
Cell[91758, 2920, 99, 3, 42, "Input"],
Cell[91860, 2925, 243, 8, 102, "Input"],
Cell[92106, 2935, 223, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92366, 2947, 134, 4, 38, "Subsection"],
Cell[92503, 2953, 618, 18, 73, "Text"],
Cell[93124, 2973, 423, 13, 192, "Input"],
Cell[93550, 2988, 85, 3, 42, "Input"],
Cell[93638, 2993, 95, 4, 57, "Input"],
Cell[93736, 2999, 128, 5, 72, "Input"],
Cell[93867, 3006, 244, 8, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94148, 3019, 90, 4, 38, "Subsection"],
Cell[94241, 3025, 972, 16, 167, "Text"],
Cell[CellGroupData[{
Cell[95238, 3045, 36, 0, 42, "Subsubsection"],
Cell[95277, 3047, 722, 30, 447, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96036, 3082, 37, 0, 28, "Subsubsection"],
Cell[96076, 3084, 623, 23, 342, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96736, 3112, 38, 0, 28, "Subsubsection"],
Cell[96777, 3114, 569, 21, 312, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97395, 3141, 62, 0, 38, "Subsection"],
Cell[97460, 3143, 607, 14, 90, "Text"],
Cell[98070, 3159, 483, 17, 252, "Input"],
Cell[98556, 3178, 95, 4, 57, "Input"],
Cell[98654, 3184, 72, 3, 42, "Input"],
Cell[98729, 3189, 99, 3, 42, "Input"],
Cell[98831, 3194, 220, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99088, 3206, 49, 0, 38, "Subsection"],
Cell[99140, 3208, 1712, 28, 280, "Text"],
Cell[CellGroupData[{
Cell[100877, 3240, 47, 0, 42, "Subsubsection"],
Cell[100927, 3242, 440, 17, 252, "Input"],
Cell[101370, 3261, 48, 1, 36, "Text"],
Cell[101421, 3264, 140, 3, 33, "Text"],
Cell[101564, 3269, 282, 9, 117, "Input"],
Cell[101849, 3280, 56, 1, 36, "Text"],
Cell[101908, 3283, 240, 8, 117, "Input"],
Cell[102151, 3293, 53, 1, 36, "Text"],
Cell[102207, 3296, 240, 8, 117, "Input"],
Cell[102450, 3306, 56, 1, 36, "Text"],
Cell[102509, 3309, 136, 6, 87, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102682, 3320, 51, 0, 28, "Subsubsection"],
Cell[102736, 3322, 501, 17, 252, "Input"],
Cell[103240, 3341, 48, 1, 36, "Text"],
Cell[103291, 3344, 128, 3, 33, "Text"],
Cell[103422, 3349, 282, 9, 117, "Input"],
Cell[103707, 3360, 61, 1, 36, "Text"],
Cell[103771, 3363, 240, 8, 117, "Input"],
Cell[104014, 3373, 58, 1, 36, "Text"],
Cell[104075, 3376, 240, 8, 117, "Input"],
Cell[104318, 3386, 61, 1, 36, "Text"],
Cell[104382, 3389, 136, 6, 87, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104555, 3400, 31, 0, 28, "Subsubsection"],
Cell[104589, 3402, 600, 11, 109, "Text"],
Cell[105192, 3415, 427, 17, 252, "Input"],
Cell[105622, 3434, 50, 1, 36, "Text"],
Cell[105675, 3437, 76, 0, 33, "Text"],
Cell[105754, 3439, 116, 5, 72, "Input"],
Cell[105873, 3446, 50, 1, 36, "Text"],
Cell[105926, 3449, 85, 2, 33, "Text"],
Cell[106014, 3453, 116, 5, 72, "Input"],
Cell[106133, 3460, 48, 1, 36, "Text"],
Cell[106184, 3463, 244, 4, 52, "Text"],
Cell[106431, 3469, 282, 9, 117, "Input"],
Cell[106716, 3480, 59, 1, 36, "Text"],
Cell[106778, 3483, 240, 8, 117, "Input"],
Cell[107021, 3493, 56, 1, 36, "Text"],
Cell[107080, 3496, 136, 6, 87, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107265, 3508, 70, 1, 38, "Subsection"],
Cell[107338, 3511, 521, 14, 71, "Text"],
Cell[107862, 3527, 467, 15, 222, "Input"],
Cell[108332, 3544, 95, 4, 57, "Input"],
Cell[108430, 3550, 99, 3, 42, "Input"],
Cell[108532, 3555, 240, 8, 117, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108809, 3568, 56, 0, 38, "Subsection"],
Cell[108868, 3570, 599, 17, 72, "Text"],
Cell[109470, 3589, 316, 14, 207, "Input"],
Cell[109789, 3605, 45, 0, 33, "Text"],
Cell[109837, 3607, 716, 20, 297, "Input"],
Cell[110556, 3629, 755, 20, 93, "Text"],
Cell[111314, 3651, 1957, 67, 987, "Input"],
Cell[113274, 3720, 95, 4, 57, "Input"],
Cell[113372, 3726, 110, 3, 42, "Input"],
Cell[113485, 3731, 192, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113714, 3743, 59, 0, 38, "Subsection"],
Cell[113776, 3745, 609, 15, 90, "Text"],
Cell[114388, 3762, 403, 19, 282, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114828, 3786, 38, 0, 38, "Subsection"],
Cell[114869, 3788, 1300, 32, 169, "Text"],
Cell[116172, 3822, 355, 15, 222, "Input"],
Cell[116530, 3839, 109, 5, 72, "Input"],
Cell[116642, 3846, 113, 5, 72, "Input"],
Cell[116758, 3853, 48, 1, 36, "Text"],
Cell[116809, 3856, 281, 9, 117, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117127, 3870, 50, 0, 38, "Subsection"],
Cell[117180, 3872, 2370, 57, 342, "Text"],
Cell[119553, 3931, 54, 1, 36, "Text"],
Cell[119610, 3934, 381, 16, 222, "Input"],
Cell[119994, 3952, 53, 1, 36, "Text"],
Cell[120050, 3955, 281, 9, 117, "Input"],
Cell[120334, 3966, 77, 1, 36, "Text"],
Cell[120414, 3969, 1287, 34, 447, "Input"],
Cell[121704, 4005, 101, 3, 36, "Text"],
Cell[121808, 4010, 237, 10, 147, "Input"],
Cell[122048, 4022, 61, 1, 36, "Text"],
Cell[122112, 4025, 412, 13, 192, "Input"],
Cell[122527, 4040, 63, 1, 36, "Text"],
Cell[122593, 4043, 242, 11, 162, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122884, 4060, 49, 0, 47, "Section"],
Cell[122936, 4062, 2414, 50, 359, "Text"],
Cell[CellGroupData[{
Cell[125375, 4116, 35, 0, 54, "Subsection"],
Cell[125413, 4118, 53, 1, 36, "Text"],
Cell[125469, 4121, 475, 18, 267, "Input"],
Cell[125947, 4141, 45, 1, 36, "Text"],
Cell[125995, 4144, 291, 11, 162, "Input"],
Cell[126289, 4157, 64, 1, 36, "Text"],
Cell[126356, 4160, 314, 12, 162, "Input"],
Cell[126673, 4174, 83, 1, 36, "Text"],
Cell[126759, 4177, 339, 13, 162, "Input"],
Cell[127101, 4192, 74, 1, 36, "Text"],
Cell[127178, 4195, 291, 11, 162, "Input"],
Cell[127472, 4208, 84, 1, 36, "Text"],
Cell[127559, 4211, 398, 13, 177, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127994, 4229, 59, 0, 38, "Subsection"],
Cell[128056, 4231, 1106, 22, 205, "Text"],
Cell[129165, 4255, 472, 18, 267, "Input"],
Cell[129640, 4275, 283, 7, 87, "Input"],
Cell[129926, 4284, 328, 9, 132, "Input"],
Cell[130257, 4295, 291, 8, 117, "Input"],
Cell[130551, 4305, 301, 8, 117, "Input"],
Cell[130855, 4315, 63, 1, 36, "Text"],
Cell[130921, 4318, 393, 9, 117, "Input"],
Cell[131317, 4329, 143, 6, 87, "Input"],
Cell[131463, 4337, 184, 7, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131684, 4349, 56, 0, 38, "Subsection"],
Cell[131743, 4351, 1883, 52, 325, "Text"],
Cell[133629, 4405, 474, 18, 267, "Input"],
Cell[134106, 4425, 107, 5, 72, "Input"],
Cell[134216, 4432, 101, 5, 72, "Input"],
Cell[134320, 4439, 72, 1, 36, "Text"],
Cell[134395, 4442, 493, 15, 222, "Input"],
Cell[134891, 4459, 77, 1, 36, "Text"],
Cell[134971, 4462, 300, 8, 117, "Input"],
Cell[135274, 4472, 65, 1, 36, "Text"],
Cell[135342, 4475, 430, 13, 177, "Input"],
Cell[135775, 4490, 70, 1, 36, "Text"],
Cell[135848, 4493, 216, 6, 87, "Input"],
Cell[136067, 4501, 111, 5, 72, "Input"],
Cell[136181, 4508, 71, 1, 36, "Text"],
Cell[136255, 4511, 333, 10, 147, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136625, 4526, 61, 0, 38, "Subsection"],
Cell[136689, 4528, 46, 1, 36, "Text"],
Cell[136738, 4531, 474, 18, 267, "Input"],
Cell[137215, 4551, 72, 1, 36, "Text"],
Cell[137290, 4554, 493, 15, 222, "Input"],
Cell[137786, 4571, 80, 1, 36, "Text"],
Cell[137869, 4574, 475, 17, 222, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138381, 4596, 69, 0, 38, "Subsection"],
Cell[138453, 4598, 1032, 33, 132, "Text"],
Cell[139488, 4633, 607, 22, 312, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140144, 4661, 48, 0, 47, "Section"],
Cell[140195, 4663, 557, 8, 90, "Text"],
Cell[CellGroupData[{
Cell[140777, 4675, 74, 0, 54, "Subsection"],
Cell[140854, 4677, 499, 10, 91, "Text"],
Cell[141356, 4689, 49, 1, 36, "Text"],
Cell[141408, 4692, 472, 18, 267, "Input"],
Cell[141883, 4712, 61, 1, 36, "Text"],
Cell[141947, 4715, 333, 8, 102, "Input"],
Cell[142283, 4725, 41, 1, 36, "Text"],
Cell[142327, 4728, 435, 17, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142799, 4750, 73, 0, 38, "Subsection"],
Cell[142875, 4752, 586, 17, 73, "Text"],
Cell[143464, 4771, 49, 1, 36, "Text"],
Cell[143516, 4774, 472, 18, 267, "Input"],
Cell[143991, 4794, 137, 7, 38, "Text"],
Cell[144131, 4803, 310, 7, 102, "Input"],
Cell[144444, 4812, 41, 1, 36, "Text"],
Cell[144488, 4815, 428, 14, 192, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144953, 4834, 92, 2, 38, "Subsection"],
Cell[145048, 4838, 49, 1, 36, "Text"],
Cell[145100, 4841, 472, 18, 267, "Input"],
Cell[145575, 4861, 72, 1, 36, "Text"],
Cell[145650, 4864, 493, 15, 222, "Input"],
Cell[146146, 4881, 57, 1, 36, "Text"],
Cell[146206, 4884, 784, 25, 327, "Input"],
Cell[146993, 4911, 41, 1, 36, "Text"],
Cell[147037, 4914, 339, 13, 192, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147425, 4933, 38, 0, 47, "Section"],
Cell[147466, 4935, 324, 10, 54, "Text"],
Cell[147793, 4947, 43, 0, 33, "Text"],
Cell[147839, 4949, 60, 0, 27, "Input"],
Cell[147902, 4951, 41, 0, 33, "Text"],
Cell[147946, 4953, 327, 10, 132, "Input"],
Cell[148276, 4965, 62, 2, 38, "Text"],
Cell[148341, 4969, 199, 4, 57, "Input"],
Cell[148543, 4975, 251, 8, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148831, 4988, 44, 0, 47, "Section"],
Cell[148878, 4990, 1277, 33, 189, "Text"],
Cell[150158, 5025, 52, 1, 36, "Text"],
Cell[150213, 5028, 477, 18, 267, "Input"],
Cell[150693, 5048, 57, 1, 36, "Text"],
Cell[150753, 5051, 85, 3, 42, "Input"],
Cell[150841, 5056, 97, 3, 42, "Input"],
Cell[150941, 5061, 147, 4, 57, "Input"],
Cell[151091, 5067, 51, 1, 36, "Text"],
Cell[151145, 5070, 184, 5, 72, "Input"],
Cell[151332, 5077, 275, 14, 207, "Input"],
Cell[151610, 5093, 64, 1, 36, "Text"],
Cell[151677, 5096, 398, 17, 252, "Input"],
Cell[152078, 5115, 72, 1, 36, "Text"],
Cell[152153, 5118, 413, 18, 267, "Input"],
Cell[152569, 5138, 81, 1, 36, "Text"],
Cell[152653, 5141, 50, 0, 27, "Input"],
Cell[152706, 5143, 478, 21, 312, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153221, 5169, 58, 0, 47, "Section"],
Cell[153282, 5171, 1412, 32, 187, "Text"],
Cell[154697, 5205, 49, 1, 36, "Text"],
Cell[154749, 5208, 477, 18, 267, "Input"],
Cell[155229, 5228, 48, 1, 36, "Text"],
Cell[155280, 5231, 344, 8, 102, "Input"],
Cell[155627, 5241, 60, 1, 36, "Text"],
Cell[155690, 5244, 361, 9, 102, "Input"],
Cell[156054, 5255, 55, 1, 36, "Text"],
Cell[156112, 5258, 309, 13, 192, "Input"],
Cell[156424, 5273, 49, 1, 36, "Text"],
Cell[156476, 5276, 224, 10, 147, "Input"],
Cell[156703, 5288, 55, 1, 36, "Text"],
Cell[156761, 5291, 331, 14, 207, "Input"],
Cell[157095, 5307, 52, 1, 36, "Text"],
Cell[157150, 5310, 324, 14, 207, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157511, 5329, 38, 0, 47, "Section"],
Cell[157552, 5331, 2182, 43, 359, "Text"],
Cell[CellGroupData[{
Cell[159759, 5378, 71, 0, 54, "Subsection"],
Cell[159833, 5380, 370, 7, 72, "Text"],
Cell[160206, 5389, 677, 25, 372, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160920, 5419, 70, 0, 38, "Subsection"],
Cell[160993, 5421, 71, 1, 36, "Text"],
Cell[161067, 5424, 1660, 40, 537, "Input"],
Cell[162730, 5466, 55, 1, 36, "Text"],
Cell[162788, 5469, 241, 11, 162, "Input"],
Cell[163032, 5482, 61, 1, 36, "Text"],
Cell[163096, 5485, 331, 13, 177, "Input"],
Cell[163430, 5500, 67, 1, 36, "Text"],
Cell[163500, 5503, 517, 17, 252, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164066, 5526, 39, 0, 47, "Section"],
Cell[164108, 5528, 1251, 23, 185, "Text"],
Cell[CellGroupData[{
Cell[165384, 5555, 71, 0, 54, "Subsection"],
Cell[165458, 5557, 375, 8, 72, "Text"],
Cell[165836, 5567, 677, 25, 372, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166550, 5597, 79, 0, 38, "Subsection"],
Cell[166632, 5599, 71, 1, 36, "Text"],
Cell[166706, 5602, 1660, 40, 537, "Input"],
Cell[168369, 5644, 55, 1, 36, "Text"],
Cell[168427, 5647, 241, 11, 162, "Input"],
Cell[168671, 5660, 96, 2, 34, "Text"],
Cell[168770, 5664, 727, 26, 372, "Input"],
Cell[169500, 5692, 57, 1, 36, "Text"],
Cell[169560, 5695, 149, 3, 42, "Input"],
Cell[169712, 5700, 1975, 36, 299, "Text"],
Cell[171690, 5738, 326, 14, 192, "Input"],
Cell[172019, 5754, 49, 1, 36, "Text"],
Cell[172071, 5757, 414, 16, 237, "Input"],
Cell[172488, 5775, 106, 5, 72, "Input"],
Cell[172597, 5782, 108, 4, 57, "Input"],
Cell[172708, 5788, 99, 3, 42, "Input"],
Cell[172810, 5793, 270, 8, 102, "Input"],
Cell[173083, 5803, 224, 7, 102, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173356, 5816, 37, 0, 47, "Section"],
Cell[173396, 5818, 549, 8, 90, "Text"],
Cell[173948, 5828, 71, 1, 36, "Text"],
Cell[174022, 5831, 757, 15, 111, "Text"],
Cell[174782, 5848, 617, 27, 402, "Input"],
Cell[175402, 5877, 58, 1, 36, "Text"],
Cell[175463, 5880, 138, 5, 33, "Text"],
Cell[175604, 5887, 199, 6, 87, "Input"],
Cell[175806, 5895, 166, 6, 38, "Text"],
Cell[175975, 5903, 782, 17, 131, "Text"],
Cell[176760, 5922, 365, 12, 162, "Input"],
Cell[177128, 5936, 334, 7, 53, "Text"],
Cell[177465, 5945, 107, 5, 72, "Input"],
Cell[177575, 5952, 54, 0, 33, "Text"],
Cell[177632, 5954, 185, 7, 87, "Input"],
Cell[177820, 5963, 77, 1, 36, "Text"],
Cell[177900, 5966, 98, 2, 33, "Text"],
Cell[178001, 5970, 324, 9, 132, "Input"],
Cell[178328, 5981, 79, 1, 36, "Text"],
Cell[178410, 5984, 446, 15, 54, "Text"],
Cell[178859, 6001, 1169, 62, 1048, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180065, 6068, 29, 0, 67, "Section"],
Cell[180097, 6070, 167, 3, 49, "Text"],
Cell[180267, 6075, 165, 4, 30, "Text"],
Cell[180435, 6081, 207, 4, 49, "Text"],
Cell[180645, 6087, 164, 4, 30, "Text"],
Cell[180812, 6093, 716, 15, 88, "Text"],
Cell[181531, 6110, 164, 4, 30, "Text"],
Cell[181698, 6116, 69, 0, 30, "Text"],
Cell[181770, 6118, 1037, 21, 277, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

