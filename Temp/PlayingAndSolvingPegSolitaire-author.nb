(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    203588,       4933]
NotebookOptionsPosition[    198313,       4771]
NotebookOutlinePosition[    199930,       4821]
CellTagsIndexPosition[    199594,       4809]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Playing and Solving Peg Solitaire", "DemoTitle"],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BoardGrid", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"Abs", "[", "#", "]"}], "]"}], "<", "2"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DirectAccess", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"problemLevels", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<very easy \>\"", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<easy \>\"", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<medium \>\"", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<hard \>\"", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<classic \>\"", ",", "1"}], "}"}]}], "}"}]}], ";", 
   RowBox[{"problemNames", "=", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"problemLevels", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Last", "@", 
          RowBox[{"problemLevels", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "problemLevels", "]"}]}], "}"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classicProblem", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"BoardGrid", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"problemLists", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "classicProblem"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initializeProblems", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"problemNames", "\[Rule]", "problemLists"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardLevels", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<hard \>\"", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<classic \>\"", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hardNames", "=", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"hardLevels", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Last", "@", 
          RowBox[{"hardLevels", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "hardLevels", "]"}]}], "}"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"hardSolutions", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Catch", "@", 
         RowBox[{"BackTracking", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", "}"}]}], "]"}]}], ")"}], "&"}], ",", 
      RowBox[{"hardNames", "/.", "initializeProblems"}]}], "]"}]}], " ", 
   "*)"}], 
  RowBox[{
   RowBox[{"hardSolutions", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"JumpingMatrix", "[", "pegs__", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"holes", ",", "checkHoles"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"holes", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{"BoardGrid", ",", "pegs"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Last", "@", 
        RowBox[{"Reap", "[", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"checkHoles", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"pegs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "#"}], ")"}], "&"}], 
                "/@", "DirectAccess"}], ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"holes", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"pegs", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pegs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"checkHoles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", "2"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"pegs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"checkHoles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "checkHoles", "]"}]}], "}"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "pegs", "]"}]}], "}"}]}], "]"}], 
         "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"doStepMove", "[", 
     RowBox[{"pegs__", ",", 
      RowBox[{"{", 
       RowBox[{"selectedPeg_", ",", "selectedHole_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{"Complement", "[", 
       RowBox[{"pegs", ",", " ", 
        RowBox[{"{", 
         RowBox[{"selectedPeg", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"selectedPeg", " ", "+", "selectedHole"}], ")"}], "/", 
           "2"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "selectedHole", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unDoStepMove", "[", 
     RowBox[{"pegs__", ",", 
      RowBox[{"{", 
       RowBox[{"selectedPeg_", ",", "selectedHole_"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{"Complement", "[", 
       RowBox[{"pegs", ",", 
        RowBox[{"{", "selectedHole", "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"selectedPeg", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"selectedPeg", " ", "+", "selectedHole"}], ")"}], "/", 
         "2"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BackTracking", "[", 
     RowBox[{"initialPegs__", ",", "initialOrder__"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pegs", ",", "solvingOrder", ",", "jM", ",", "candidates", ",", 
        "edges", ",", "node", ",", "i", ",", "lastStep"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pegs", "=", "initialPegs"}], ";", "\[IndentingNewLine]", 
       RowBox[{"solvingOrder", "=", "initialOrder"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "pegs", "]"}], "\[Equal]", "1"}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"pegs", "===", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ")"}]}], ",", 
         "       ", 
         RowBox[{"(*", " ", 
          RowBox[{"If", " ", "is", " ", "a", " ", "solution"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Throw", "@", 
           RowBox[{"Join", "[", "solvingOrder", "]"}]}], ";", 
          "                                            ", 
          RowBox[{"(*", " ", 
           RowBox[{"report", " ", "solution"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Abort", "[", "]"}]}], ",", 
         "                                                                    \
                 ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "one", " ", "solution", " ", "or", " ", "more", " ", "solution"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"jM", "=", 
           RowBox[{"JumpingMatrix", "[", "pegs", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"jM", "=!=", 
             RowBox[{"{", "}"}]}], ",", 
            "                                                                 \
         ", 
            RowBox[{"(*", " ", 
             RowBox[{"current", " ", "accept", " ", "condition"}], " ", 
             "*)"}], "\[IndentingNewLine]", " ", 
            RowBox[{"(*", " ", 
             RowBox[{"prepare", " ", "all", " ", "candidates"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"candidates", "=", 
              RowBox[{"First", "@", "jM"}]}], ";", "           ", 
             "\[IndentingNewLine]", 
             RowBox[{"edges", "=", 
              RowBox[{"Length", "[", "candidates", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", "edges"}], ",", 
               RowBox[{"i", "++"}], ",", 
               "                                          ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "go", " ", "for", " ", "all", " ", "nodes", " ", "as", " ", 
                 "candidates"}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"node", "=", 
                 RowBox[{"candidates", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"make", " ", "next", " ", "move"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"pegs", "=", 
                 RowBox[{"doStepMove", "[", 
                  RowBox[{"pegs", ",", "node"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"solvingOrder", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"solvingOrder", ",", "node"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"BackTracking", "[", 
                 RowBox[{"pegs", ",", "solvingOrder"}], "]"}], ";", 
                "                   ", 
                RowBox[{"(*", " ", 
                 RowBox[{"recursive", " ", ":", " ", "important"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"unmake", " ", "the", " ", "move"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"lastStep", "=", 
                 RowBox[{"Last", "@", "solvingOrder"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"pegs", "=", 
                 RowBox[{"unDoStepMove", "[", 
                  RowBox[{"pegs", ",", "lastStep"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"solvingOrder", "=", 
                 RowBox[{"Drop", "[", 
                  RowBox[{"solvingOrder", ",", 
                   RowBox[{"-", "1"}]}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pegsImage", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Hue", "[", ".6", "]"}], ",", 
       RowBox[{"Specularity", "[", 
        RowBox[{"White", ",", "10"}], "]"}], ",", 
       RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "Gray"}], ",", 
     RowBox[{"Boxed", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "46"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellID->734210257]
}, Closed]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"start", "=", 
     RowBox[{"problems", "/.", "initializeProblems"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"move", "=", 
     RowBox[{"Floor", "[", 
      RowBox[{"step", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"pegs", "=", 
     RowBox[{"If", "[", 
      RowBox[{"mode", ",", "start", ",", 
       RowBox[{"Fold", "[", 
        RowBox[{"doStepMove", ",", "start", ",", 
         RowBox[{"Take", "[", 
          RowBox[{"solu", ",", "move"}], "]"}]}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"selectedPeg", "=", 
     RowBox[{"If", "[", 
      RowBox[{"mode", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", "step", "]"}], ",", 
         RowBox[{"First", "@", 
          RowBox[{"solu", "[", 
           RowBox[{"[", 
            RowBox[{"move", "+", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"Last", "@", 
          RowBox[{"solu", "[", 
           RowBox[{"[", "move", "]"}], "]"}]}]}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Deploy", "@", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"fixed", " ", "layout"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Gray", ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "4.25"}], "]"}], ",", 
          "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "4.25"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"filled", " ", "position", " ", "for", " ", "selecting"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{"pegsImage", ",", "#"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"selectedPeg", "===", "#"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Yellow", ",", 
                    RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{".03", ",", ".04"}], "}"}], "+", "#"}], ",", 
                    ".36"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"selectedPeg", "=", "#"}]}], "]"}], "&"}], "/@", 
           "pegs"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"empty", " ", "position", " ", "for", " ", "moving"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"White", ",", 
                RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
                RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"5", "/", "24"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pegs", ",", "selectedPeg"}], "}"}], "=", 
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"selectedPeg", "=!=", 
                    RowBox[{"{", "}"}]}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"selectedPeg", "-", "#"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], ")"}], "&&", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"pegs", ",", "selectedPeg"}], "]"}], "&&", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"pegs", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"selectedPeg", "+", "#"}], ")"}], "/", "2"}]}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"Complement", "[", 
                    RowBox[{"pegs", ",", 
                    RowBox[{"{", 
                    RowBox[{"selectedPeg", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"selectedPeg", "+", "#"}], ")"}], "/", "2"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", "#", "}"}]}], "]"}], ",", "#"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"pegs", ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], "&"}], "/@", 
           RowBox[{"Complement", "[", 
            RowBox[{"BoardGrid", ",", "pegs"}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"Raster", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "100"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "100"}], "}"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Blend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"LightGray", ",", "White"}], "}"}], ",", "#"}], 
               "]"}], "&"}], ")"}]}]}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"problems", ",", "\"\<classic 1\>\"", ",", "\"\<problems\>\""}],
       "}"}], ",", "problemNames", ",", 
     RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{",", " ", 
      RowBox[{"AutoAction", "\[Rule]", "True"}]}], " ", "*)"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<restart and solve\>\"", ",", 
     RowBox[{
      RowBox[{"mode", "=", "False"}], ";", 
      RowBox[{"pegs", "=", "start"}], ";", 
      RowBox[{"step", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"solu", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"hardNames", ",", "problems"}], "]"}], ",", 
         RowBox[{"problems", "/.", 
          RowBox[{"Thread", "[", 
           RowBox[{"hardNames", "\[Rule]", "hardSolutions"}], "]"}]}], ",", 
         RowBox[{"Catch", "@", 
          RowBox[{"BackTracking", "[", 
           RowBox[{"start", ",", 
            RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "180"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"step", ",", "1", ",", " ", "\"\<solving steps\>\""}], "}"}], 
     ",", "1", ",", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"Length", "[", "solu", "]"}]}], ")"}]}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"move", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"start", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"pegs", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"selectedPeg", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"solu", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mode", ",", "True", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mode$$ = True, $CellContext`move$$ = 
    0, $CellContext`pegs$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
    0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1,
     3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
    1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 
    1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`problems$$ = 
    "classic 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
    0}, $CellContext`start$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
    0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1,
     3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
    1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 
    1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`step$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`problems$$], "classic 1", "problems"}, {
      "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
       "very easy 5", "very easy 6", "very easy 7", "very easy 8", "easy 1", 
       "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", "easy 7", "easy 8", 
       "easy 9", "easy 10", "easy 11", "medium 1", "medium 2", "medium 3", 
       "medium 4", "medium 5", "medium 6", "medium 7", "medium 8", "hard 1", 
       "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", "hard 7", "hard 8", 
       "classic 1"}}, {
      Hold[
       Button[
       "restart and solve", $CellContext`mode$$ = 
         False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
           MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
           ReplaceAll[$CellContext`problems$$, 
            Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
           Catch[
            $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
        180]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`step$$], 1, "solving steps"}, 1, 
      Dynamic[2 Length[$CellContext`solu$$]], 1}, {{
       Hold[$CellContext`move$$], 0}, {}}, {{
       Hold[$CellContext`start$$], {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2,
        0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
       2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
       1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 
       0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}}, {{
       Hold[$CellContext`pegs$$], {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
       0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
       2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
       1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 
       0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}}, {
      Hold[$CellContext`selectedPeg$$], {}}, {{
       Hold[$CellContext`solu$$], {0, 0}}, {{0, 0}, {0, 0}}}, {
      Hold[$CellContext`mode$$], True}}, Typeset`size$$ = {
    500., {248., 252.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`problems$515320$$ = 
    0, $CellContext`step$515321$$ = 0, $CellContext`solu$515322$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`mode$$ = True, $CellContext`move$$ = 
        0, $CellContext`pegs$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
         0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
         2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
         1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {
         2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`problems$$ = 
        "classic 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {
         0, 0}, $CellContext`start$$ = {{-3, -1}, {-3, 0}, {-3, 
         1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
         0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0,
          2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 
         3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 
         1}}, $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`problems$$, $CellContext`problems$515320$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$515321$$, 0], 
        Hold[$CellContext`solu$$, $CellContext`solu$515322$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`start$$ = 
        ReplaceAll[$CellContext`problems$$, $CellContext`initializeProblems]; \
$CellContext`move$$ = Floor[$CellContext`step$$/2]; $CellContext`pegs$$ = 
        If[$CellContext`mode$$, $CellContext`start$$, 
          Fold[$CellContext`doStepMove, $CellContext`start$$, 
           
           Take[$CellContext`solu$$, $CellContext`move$$]]]; \
$CellContext`selectedPeg$$ = If[$CellContext`mode$$, {}, 
          If[
           OddQ[$CellContext`step$$], 
           First[
            Part[$CellContext`solu$$, $CellContext`move$$ + 1]], 
           Last[
            Part[$CellContext`solu$$, $CellContext`move$$]]]]; Deploy[
         Dynamic[
          Graphics[{Gray, 
            Disk[{0, 0}, 4.25], Black, {
             AbsoluteThickness[3], 
             Circle[{0, 0}, 4.25]}, 
            Map[Button[{
               Inset[$CellContext`pegsImage, #], 
               If[$CellContext`selectedPeg$$ === #, {Yellow, 
                 Thickness[0.01], 
                 
                 Circle[{0.03, 0.04} + #, 
                  0.36]}, {}]}, $CellContext`selectedPeg$$ = #]& , \
$CellContext`pegs$$], 
            Map[Button[{White, 
               Opacity[0.8], 
               EdgeForm[Thin], 
               
               Disk[#, 5/
                24]}, {$CellContext`pegs$$, $CellContext`selectedPeg$$} = If[
                And[$CellContext`selectedPeg$$ =!= {}, Sort[
                   Abs[$CellContext`selectedPeg$$ - #]] == {0, 2}, 
                 MemberQ[$CellContext`pegs$$, $CellContext`selectedPeg$$], 
                 
                 MemberQ[$CellContext`pegs$$, ($CellContext`selectedPeg$$ + \
#)/2]], {
                 Union[
                  
                  Complement[$CellContext`pegs$$, \
{$CellContext`selectedPeg$$, ($CellContext`selectedPeg$$ + #)/
                    2}], {#}], #}, {$CellContext`pegs$$, {}}]]& , 
             Complement[$CellContext`BoardGrid, $CellContext`pegs$$]]}, 
           Prolog -> Raster[
             
             Table[$CellContext`i, {$CellContext`i, 100}, {$CellContext`j, 
               100}], {
              Scaled[{0, 0}], 
              Scaled[{1, 1}]}, {1, 100}, 
             ColorFunction -> (Blend[{LightGray, White}, #]& )], 
           PlotRange -> {{-5, 5}, {-5, 5}}, ImageSize -> 500]]]), 
      "Specifications" :> {{{$CellContext`problems$$, "classic 1", 
          "problems"}, {
         "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
          "very easy 5", "very easy 6", "very easy 7", "very easy 8", 
          "easy 1", "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", 
          "easy 7", "easy 8", "easy 9", "easy 10", "easy 11", "medium 1", 
          "medium 2", "medium 3", "medium 4", "medium 5", "medium 6", 
          "medium 7", "medium 8", "hard 1", "hard 2", "hard 3", "hard 4", 
          "hard 5", "hard 6", "hard 7", "hard 8", "classic 1"}, ControlType -> 
         PopupMenu}, 
        Button[
        "restart and solve", $CellContext`mode$$ = 
          False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
            MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
            ReplaceAll[$CellContext`problems$$, 
             Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
            Catch[
             $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
         180], {{$CellContext`step$$, 1, "solving steps"}, 1, 
         Dynamic[2 Length[$CellContext`solu$$]], 1, Appearance -> 
         "Labeled"}, {{$CellContext`move$$, 0}, {}, ControlType -> 
         None}, {{$CellContext`start$$, {{-3, -1}, {-3, 0}, {-3, 
          1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
          0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {
          0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {
          1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}, 
         ControlType -> 
         None}, {{$CellContext`pegs$$, {{-3, -1}, {-3, 0}, {-3, 
          1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
          0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {
          0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {
          1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}, 
         ControlType -> None}, {$CellContext`selectedPeg$$, {}, ControlType -> 
         None}, {{$CellContext`solu$$, {0, 0}}, {{0, 0}, {0, 0}}, ControlType -> 
         None}, {$CellContext`mode$$, True, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Top, TrackedSymbols -> True, SynchronousUpdating -> 
        False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{549., {324., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`initializeProblems = {
        "very easy 1" -> {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {0, -1}}, 
         "very easy 2" -> {{-1, 1}, {2, 1}, {-2, 0}, {1, 0}, {-1, -1}, {
          1, -1}, {0, -2}}, 
         "very easy 3" -> {{0, 1}, {1, 1}, {-2, 0}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "very easy 4" -> {{0, 1}, {0, 0}, {1, 0}, {2, 0}, {-1, -1}, {1, -1}},
          "very easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}}, 
         "very easy 6" -> {{1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 1}, {0, 0}, {
          1, 0}}, "very easy 7" -> {{0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}, {0, -2}, {1, -2}}, 
         "very easy 8" -> {{0, 2}, {-2, 1}, {1, 1}, {-1, 0}, {1, 
          0}, {-1, -1}, {1, -1}}, 
         "easy 1" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "easy 2" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {0, -1}}, 
         "easy 3" -> {{-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}}, 
         "easy 4" -> {{-1, 2}, {-1, 1}, {1, 1}, {1, 0}, {2, 0}, {0, -1}, {
          1, -1}, {0, -2}}, 
         "easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 
          0}, {-3, -1}, {-2, -1}, {-1, -2}}, 
         "easy 6" -> {{-1, 2}, {0, 1}, {-1, 0}, {0, 0}, {1, 0}, {-1, -1}, {
          0, -1}}, 
         "easy 7" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}}, 
         "easy 8" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-2, -1}, {-1, -1}, {0, -1}, {1, -1}, {1, -2}}, 
         "easy 9" -> {{0, 2}, {-3, 1}, {-2, 1}, {2, 1}, {3, 1}, {-2, 0}, {0, 
          0}, {2, 0}, {-3, -1}, {-2, -1}, {2, -1}, {3, -1}, {0, -2}, {0, -3}},
          "easy 10" -> {{0, 2}, {-1, 1}, {1, 1}, {-3, 0}, {-2, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {0, -2}, {0, -3}}, 
         "easy 11" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "medium 1" -> {{0, 3}, {0, 2}, {1, 1}, {2, 1}, {-2, 0}, {-1, 0}, {0, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "medium 2" -> {{-1, 2}, {0, 2}, {-2, 1}, {-1, 1}, {1, 1}, {-2, 
          0}, {-1, 0}, {2, 0}, {-1, -1}, {1, -1}}, 
         "medium 3" -> {{-1, 2}, {0, 2}, {-1, 1}, {1, 1}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "medium 4" -> {{0, 2}, {1, 1}, {0, 0}, {1, 0}, {-1, -1}, {0, -1}, {
          1, -1}, {2, -1}}, 
         "medium 5" -> {{1, 2}, {-1, 1}, {1, 1}, {2, 1}, {0, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {-1, -2}, {1, -2}}, 
         "medium 6" -> {{0, 1}, {1, 1}, {-1, 0}, {0, 0}, {2, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {-1, -2}}, 
         "medium 7" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {0, 0}}, 
         "medium 8" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 0}}, 
         "hard 1" -> {{0, 2}, {1, 2}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "hard 2" -> {{1, 3}, {-1, 2}, {0, 2}, {1, 1}, {-2, 0}, {0, 0}, {1, 
          0}, {2, 0}, {2, -1}, {0, -2}, {1, -2}}, 
         "hard 3" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
          0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 4" -> {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, 
         "hard 5" -> {{3, 1}, {1, 0}, {2, 0}, {3, 0}, {-1, -1}, {2, -1}, {
          3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 6" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {-2, 0}, {-1, 0}, {1, 0}, {2, 0}, {-2, -1}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "hard 7" -> {{-1, 3}, {0, 3}, {-1, 2}, {0, 1}, {-3, 0}, {-2, 0}, {0, 
          0}, {1, 0}, {2, 0}, {0, -1}, {2, -1}, {3, -1}, {0, -2}}, 
         "hard 8" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {1, 1}, {2, 
          1}, {-2, 0}, {2, 0}, {-2, -1}, {-1, -1}, {1, -1}, {
          2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "classic 1" -> {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 0}, {-2, 
          1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
          3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
          1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {
          2, 1}, {3, -1}, {3, 0}, {3, 1}}}, $CellContext`doStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedPeg, \
($CellContext`selectedPeg + $CellContext`selectedHole)/
           2}], {$CellContext`selectedHole}], $CellContext`pegsImage = 
       Graphics3D[{
          Hue[0.6], 
          Specularity[
           GrayLevel[1], 10], 
          Sphere[{0, 0, 0}]}, Background -> GrayLevel[0.5], Boxed -> False, 
         ImageSize -> 46], $CellContext`BoardGrid = {{-3, -1}, {-3, 0}, {-3, 
        1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
        0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
        1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 
        2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`hardNames = {
        "hard 1", "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", 
         "classic 1"}, $CellContext`hardSolutions = {{{{0, 2}, {0, 
         0}}, {{-1, -2}, {1, -2}}, {{-1, -1}, {-1, 1}}, {{0, -1}, {0, 1}}, {{
         1, 1}, {1, -1}}, {{-1, 1}, {1, 1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}, {{1, 2}, {1, 0}}, {{1, 0}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{-1, 
         2}, {1, 2}}, {{1, -2}, {-1, -2}}, {{1, 0}, {-1, 0}}, {{2, -1}, {2, 
         1}}, {{2, 1}, {0, 1}}, {{1, 3}, {1, 1}}, {{1, 1}, {-1, 1}}, {{-1, 
         1}, {-1, -1}}, {{-1, -2}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{0, 
         1}, {-2, 1}}, {{-2, 1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         1, -3}, {1, -1}}, {{0, -1}, {2, -1}}, {{0, -3}, {0, -1}}, {{3, -1}, {
         1, -1}}, {{0, -1}, {2, -1}}, {{2, -1}, {2, 1}}, {{2, 1}, {0, 1}}, {{
         0, 2}, {0, 0}}}, {{{-3, 1}, {-3, -1}}, {{-2, 
         1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{-1, -1}, {1, -1}}, {{-1, 
         0}, {-1, 2}}, {{-1, 2}, {1, 2}}, {{0, -3}, {0, -1}}, {{0, -1}, {
         2, -1}}, {{0, 0}, {0, 2}}, {{0, 3}, {0, 1}}, {{1, 1}, {1, -1}}, {{
         1, -1}, {3, -1}}, {{3, 1}, {1, 1}}, {{0, 1}, {2, 1}}, {{3, -1}, {3, 
         1}}, {{3, 1}, {1, 1}}, {{1, 2}, {1, 0}}, {{2, 0}, {0, 0}}}, {{{
         3, -1}, {1, -1}}, {{0, -3}, {0, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         0, -1}, {2, -1}}, {{1, -3}, {1, -1}}, {{1, 0}, {1, -2}}, {{3, 1}, {
         3, -1}}, {{3, -1}, {1, -1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}}, CompressedData["
1:eJx1kNEJgDAMRHPtCE7gSo7gALr/Rz0bucBR8OBI82iTJvt5H1ePiG26yWEx
9ZCEzlCeKk7TmA6xjMM4lFvprw/MXW+LN+MwRutTdWE5f1T/93l81lW1E7+/
7ucF2Btlhg==
         "], CompressedData["
1:eJxtUEEKwDAIU/uQsS/tCXvA9v/D6ioopEFBrGmMac/7vZ4hIsdKy5zuLhCr
9cA88c/3iF4J5zmeKb4mb2TVZifPlofidR5RJ+rIXqHOxofmHe5D3c47axrt
0dyPZ4f50jX4C+QxH73zm0z2dyjgxTPZ4wf5p+Ed
         "]}, $CellContext`BackTracking[
         Pattern[$CellContext`initialPegs, 
          BlankSequence[]], 
         Pattern[$CellContext`initialOrder, 
          BlankSequence[]]] := 
       Module[{$CellContext`pegs, $CellContext`solvingOrder, $CellContext`jM, \
$CellContext`candidates, $CellContext`edges, $CellContext`node, \
$CellContext`i, $CellContext`lastStep}, $CellContext`pegs = \
$CellContext`initialPegs; $CellContext`solvingOrder = \
$CellContext`initialOrder; If[
           And[
           Length[$CellContext`pegs] == 1, $CellContext`pegs === {{0, 0}}], 
           Throw[
             Join[$CellContext`solvingOrder]]; 
           Abort[], $CellContext`jM = \
$CellContext`JumpingMatrix[$CellContext`pegs]; 
           If[$CellContext`jM =!= {}, $CellContext`candidates = 
              First[$CellContext`jM]; $CellContext`edges = 
              Length[$CellContext`candidates]; 
             For[$CellContext`i = 1, $CellContext`i <= $CellContext`edges, 
               
               Increment[$CellContext`i], $CellContext`node = 
                Part[$CellContext`candidates, $CellContext`i]; \
$CellContext`pegs = $CellContext`doStepMove[$CellContext`pegs, \
$CellContext`node]; $CellContext`solvingOrder = 
                Append[$CellContext`solvingOrder, $CellContext`node]; \
$CellContext`BackTracking[$CellContext`pegs, $CellContext`solvingOrder]; \
$CellContext`lastStep = 
                Last[$CellContext`solvingOrder]; $CellContext`pegs = \
$CellContext`unDoStepMove[$CellContext`pegs, $CellContext`lastStep]; \
$CellContext`solvingOrder = Drop[$CellContext`solvingOrder, -1]; 
               Null]]]], $CellContext`JumpingMatrix[
         Pattern[$CellContext`pegs, 
          BlankSequence[]]] := 
       Module[{$CellContext`holes, $CellContext`checkHoles}, \
$CellContext`holes = Complement[$CellContext`BoardGrid, $CellContext`pegs]; 
         Last[
           Reap[
            Do[$CellContext`checkHoles = Select[
                Map[
                Part[$CellContext`pegs, $CellContext`i] - #& , \
$CellContext`DirectAccess], MemberQ[$CellContext`holes, #]& ]; Do[
               If[
                
                MemberQ[$CellContext`pegs, (
                  Part[$CellContext`pegs, $CellContext`i] + 
                  Part[$CellContext`checkHoles, $CellContext`j])/2], 
                Sow[{
                  Part[$CellContext`pegs, $CellContext`i], 
                  
                  Part[$CellContext`checkHoles, $CellContext`j]}]], \
{$CellContext`j, 
                Length[$CellContext`checkHoles]}], {$CellContext`i, 
              Length[$CellContext`pegs]}]]]], $CellContext`DirectAccess = {{0,
         2}, {0, -2}, {2, 0}, {-2, 0}}, $CellContext`unDoStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedHole}], \
{$CellContext`selectedPeg, ($CellContext`selectedPeg + \
$CellContext`selectedHole)/2}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->159208556]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Peg solitaire is a popular board game for one player. Choose a challenge \
problem and start to play. \
\>", "ManipulateCaption",
 CellID->278475071],

Cell["\<\
Moves are made horizontally or vertically. A move can be made if a middle peg \
has another peg on one side and a hole on the other. In that case, the side \
peg jumps over the middle peg into the hole, and the middle peg is removed. \
The object is to remove all but one of the pegs on the board, with the last \
peg in the center of the board.\
\>", "ManipulateCaption",
 CellID->93560552],

Cell["\<\
Tip: If you cannot solve a puzzle, press the \"restart and solve\" button to \
step through a solution.\
\>", "ManipulateCaption",
 CellID->156987479]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mode$$ = True, $CellContext`move$$ = 
    0, $CellContext`pegs$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
    0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1,
     3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
    1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 
    1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`problems$$ = 
    "classic 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
    0}, $CellContext`start$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
    0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1,
     3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
    1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 
    1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`step$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`problems$$], "classic 1", "problems"}, {
      "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
       "very easy 5", "very easy 6", "very easy 7", "very easy 8", "easy 1", 
       "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", "easy 7", "easy 8", 
       "easy 9", "easy 10", "easy 11", "medium 1", "medium 2", "medium 3", 
       "medium 4", "medium 5", "medium 6", "medium 7", "medium 8", "hard 1", 
       "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", "hard 7", "hard 8", 
       "classic 1"}}, {
      Hold[
       Button[
       "restart and solve", $CellContext`mode$$ = 
         False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
           MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
           ReplaceAll[$CellContext`problems$$, 
            Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
           Catch[
            $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
        180]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`step$$], 1, "solving steps"}, 1, 
      Dynamic[2 Length[$CellContext`solu$$]], 1}, {{
       Hold[$CellContext`move$$], 0}, {}}, {{
       Hold[$CellContext`start$$], {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2,
        0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
       2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
       1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 
       0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}}, {{
       Hold[$CellContext`pegs$$], {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
       0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
       2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
       1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 
       0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}}, {
      Hold[$CellContext`selectedPeg$$], {}}, {{
       Hold[$CellContext`solu$$], {0, 0}}, {{0, 0}, {0, 0}}}, {
      Hold[$CellContext`mode$$], True}}, Typeset`size$$ = {
    500., {248., 252.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`problems$515398$$ = 
    0, $CellContext`step$515399$$ = 0, $CellContext`solu$515400$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`mode$$ = True, $CellContext`move$$ = 
        0, $CellContext`pegs$$ = {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 
         0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 
         2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {
         1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {
         2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, $CellContext`problems$$ = 
        "classic 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {
         0, 0}, $CellContext`start$$ = {{-3, -1}, {-3, 0}, {-3, 
         1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
         0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0,
          2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 
         3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 
         1}}, $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`problems$$, $CellContext`problems$515398$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$515399$$, 0], 
        Hold[$CellContext`solu$$, $CellContext`solu$515400$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`start$$ = 
        ReplaceAll[$CellContext`problems$$, $CellContext`initializeProblems]; \
$CellContext`move$$ = Floor[$CellContext`step$$/2]; $CellContext`pegs$$ = 
        If[$CellContext`mode$$, $CellContext`start$$, 
          Fold[$CellContext`doStepMove, $CellContext`start$$, 
           
           Take[$CellContext`solu$$, $CellContext`move$$]]]; \
$CellContext`selectedPeg$$ = If[$CellContext`mode$$, {}, 
          If[
           OddQ[$CellContext`step$$], 
           First[
            Part[$CellContext`solu$$, $CellContext`move$$ + 1]], 
           Last[
            Part[$CellContext`solu$$, $CellContext`move$$]]]]; Deploy[
         Dynamic[
          Graphics[{Gray, 
            Disk[{0, 0}, 4.25], Black, {
             AbsoluteThickness[3], 
             Circle[{0, 0}, 4.25]}, 
            Map[Button[{
               Inset[$CellContext`pegsImage, #], 
               If[$CellContext`selectedPeg$$ === #, {Yellow, 
                 Thickness[0.01], 
                 
                 Circle[{0.03, 0.04} + #, 
                  0.36]}, {}]}, $CellContext`selectedPeg$$ = #]& , \
$CellContext`pegs$$], 
            Map[Button[{White, 
               Opacity[0.8], 
               EdgeForm[Thin], 
               
               Disk[#, 5/
                24]}, {$CellContext`pegs$$, $CellContext`selectedPeg$$} = If[
                And[$CellContext`selectedPeg$$ =!= {}, Sort[
                   Abs[$CellContext`selectedPeg$$ - #]] == {0, 2}, 
                 MemberQ[$CellContext`pegs$$, $CellContext`selectedPeg$$], 
                 
                 MemberQ[$CellContext`pegs$$, ($CellContext`selectedPeg$$ + \
#)/2]], {
                 Union[
                  
                  Complement[$CellContext`pegs$$, \
{$CellContext`selectedPeg$$, ($CellContext`selectedPeg$$ + #)/
                    2}], {#}], #}, {$CellContext`pegs$$, {}}]]& , 
             Complement[$CellContext`BoardGrid, $CellContext`pegs$$]]}, 
           Prolog -> Raster[
             
             Table[$CellContext`i, {$CellContext`i, 100}, {$CellContext`j, 
               100}], {
              Scaled[{0, 0}], 
              Scaled[{1, 1}]}, {1, 100}, 
             ColorFunction -> (Blend[{LightGray, White}, #]& )], 
           PlotRange -> {{-5, 5}, {-5, 5}}, ImageSize -> 500]]]), 
      "Specifications" :> {{{$CellContext`problems$$, "classic 1", 
          "problems"}, {
         "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
          "very easy 5", "very easy 6", "very easy 7", "very easy 8", 
          "easy 1", "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", 
          "easy 7", "easy 8", "easy 9", "easy 10", "easy 11", "medium 1", 
          "medium 2", "medium 3", "medium 4", "medium 5", "medium 6", 
          "medium 7", "medium 8", "hard 1", "hard 2", "hard 3", "hard 4", 
          "hard 5", "hard 6", "hard 7", "hard 8", "classic 1"}, ControlType -> 
         PopupMenu}, 
        Button[
        "restart and solve", $CellContext`mode$$ = 
          False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
            MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
            ReplaceAll[$CellContext`problems$$, 
             Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
            Catch[
             $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
         180], {{$CellContext`step$$, 1, "solving steps"}, 1, 
         Dynamic[2 Length[$CellContext`solu$$]], 1, Appearance -> 
         "Labeled"}, {{$CellContext`move$$, 0}, {}, ControlType -> 
         None}, {{$CellContext`start$$, {{-3, -1}, {-3, 0}, {-3, 
          1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
          0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {
          0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {
          1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}, 
         ControlType -> 
         None}, {{$CellContext`pegs$$, {{-3, -1}, {-3, 0}, {-3, 
          1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
          0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {
          0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {
          1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}}, {}, 
         ControlType -> None}, {$CellContext`selectedPeg$$, {}, ControlType -> 
         None}, {{$CellContext`solu$$, {0, 0}}, {{0, 0}, {0, 0}}, ControlType -> 
         None}, {$CellContext`mode$$, True, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Top, TrackedSymbols -> True, SynchronousUpdating -> 
        False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{549., {324., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`initializeProblems = {
        "very easy 1" -> {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {0, -1}}, 
         "very easy 2" -> {{-1, 1}, {2, 1}, {-2, 0}, {1, 0}, {-1, -1}, {
          1, -1}, {0, -2}}, 
         "very easy 3" -> {{0, 1}, {1, 1}, {-2, 0}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "very easy 4" -> {{0, 1}, {0, 0}, {1, 0}, {2, 0}, {-1, -1}, {1, -1}},
          "very easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}}, 
         "very easy 6" -> {{1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 1}, {0, 0}, {
          1, 0}}, "very easy 7" -> {{0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}, {0, -2}, {1, -2}}, 
         "very easy 8" -> {{0, 2}, {-2, 1}, {1, 1}, {-1, 0}, {1, 
          0}, {-1, -1}, {1, -1}}, 
         "easy 1" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "easy 2" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {0, -1}}, 
         "easy 3" -> {{-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}}, 
         "easy 4" -> {{-1, 2}, {-1, 1}, {1, 1}, {1, 0}, {2, 0}, {0, -1}, {
          1, -1}, {0, -2}}, 
         "easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 
          0}, {-3, -1}, {-2, -1}, {-1, -2}}, 
         "easy 6" -> {{-1, 2}, {0, 1}, {-1, 0}, {0, 0}, {1, 0}, {-1, -1}, {
          0, -1}}, 
         "easy 7" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}}, 
         "easy 8" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-2, -1}, {-1, -1}, {0, -1}, {1, -1}, {1, -2}}, 
         "easy 9" -> {{0, 2}, {-3, 1}, {-2, 1}, {2, 1}, {3, 1}, {-2, 0}, {0, 
          0}, {2, 0}, {-3, -1}, {-2, -1}, {2, -1}, {3, -1}, {0, -2}, {0, -3}},
          "easy 10" -> {{0, 2}, {-1, 1}, {1, 1}, {-3, 0}, {-2, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {0, -2}, {0, -3}}, 
         "easy 11" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "medium 1" -> {{0, 3}, {0, 2}, {1, 1}, {2, 1}, {-2, 0}, {-1, 0}, {0, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "medium 2" -> {{-1, 2}, {0, 2}, {-2, 1}, {-1, 1}, {1, 1}, {-2, 
          0}, {-1, 0}, {2, 0}, {-1, -1}, {1, -1}}, 
         "medium 3" -> {{-1, 2}, {0, 2}, {-1, 1}, {1, 1}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "medium 4" -> {{0, 2}, {1, 1}, {0, 0}, {1, 0}, {-1, -1}, {0, -1}, {
          1, -1}, {2, -1}}, 
         "medium 5" -> {{1, 2}, {-1, 1}, {1, 1}, {2, 1}, {0, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {-1, -2}, {1, -2}}, 
         "medium 6" -> {{0, 1}, {1, 1}, {-1, 0}, {0, 0}, {2, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {-1, -2}}, 
         "medium 7" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {0, 0}}, 
         "medium 8" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 0}}, 
         "hard 1" -> {{0, 2}, {1, 2}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "hard 2" -> {{1, 3}, {-1, 2}, {0, 2}, {1, 1}, {-2, 0}, {0, 0}, {1, 
          0}, {2, 0}, {2, -1}, {0, -2}, {1, -2}}, 
         "hard 3" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
          0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 4" -> {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, 
         "hard 5" -> {{3, 1}, {1, 0}, {2, 0}, {3, 0}, {-1, -1}, {2, -1}, {
          3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 6" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {-2, 0}, {-1, 0}, {1, 0}, {2, 0}, {-2, -1}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "hard 7" -> {{-1, 3}, {0, 3}, {-1, 2}, {0, 1}, {-3, 0}, {-2, 0}, {0, 
          0}, {1, 0}, {2, 0}, {0, -1}, {2, -1}, {3, -1}, {0, -2}}, 
         "hard 8" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {1, 1}, {2, 
          1}, {-2, 0}, {2, 0}, {-2, -1}, {-1, -1}, {1, -1}, {
          2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "classic 1" -> {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 0}, {-2, 
          1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
          3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
          1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {
          2, 1}, {3, -1}, {3, 0}, {3, 1}}}, $CellContext`doStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedPeg, \
($CellContext`selectedPeg + $CellContext`selectedHole)/
           2}], {$CellContext`selectedHole}], $CellContext`pegsImage = 
       Graphics3D[{
          Hue[0.6], 
          Specularity[
           GrayLevel[1], 10], 
          Sphere[{0, 0, 0}]}, Background -> GrayLevel[0.5], Boxed -> False, 
         ImageSize -> 46], $CellContext`BoardGrid = {{-3, -1}, {-3, 0}, {-3, 
        1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
        0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
        1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 
        2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`hardNames = {
        "hard 1", "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", 
         "classic 1"}, $CellContext`hardSolutions = {{{{0, 2}, {0, 
         0}}, {{-1, -2}, {1, -2}}, {{-1, -1}, {-1, 1}}, {{0, -1}, {0, 1}}, {{
         1, 1}, {1, -1}}, {{-1, 1}, {1, 1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}, {{1, 2}, {1, 0}}, {{1, 0}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{-1, 
         2}, {1, 2}}, {{1, -2}, {-1, -2}}, {{1, 0}, {-1, 0}}, {{2, -1}, {2, 
         1}}, {{2, 1}, {0, 1}}, {{1, 3}, {1, 1}}, {{1, 1}, {-1, 1}}, {{-1, 
         1}, {-1, -1}}, {{-1, -2}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{0, 
         1}, {-2, 1}}, {{-2, 1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         1, -3}, {1, -1}}, {{0, -1}, {2, -1}}, {{0, -3}, {0, -1}}, {{3, -1}, {
         1, -1}}, {{0, -1}, {2, -1}}, {{2, -1}, {2, 1}}, {{2, 1}, {0, 1}}, {{
         0, 2}, {0, 0}}}, {{{-3, 1}, {-3, -1}}, {{-2, 
         1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{-1, -1}, {1, -1}}, {{-1, 
         0}, {-1, 2}}, {{-1, 2}, {1, 2}}, {{0, -3}, {0, -1}}, {{0, -1}, {
         2, -1}}, {{0, 0}, {0, 2}}, {{0, 3}, {0, 1}}, {{1, 1}, {1, -1}}, {{
         1, -1}, {3, -1}}, {{3, 1}, {1, 1}}, {{0, 1}, {2, 1}}, {{3, -1}, {3, 
         1}}, {{3, 1}, {1, 1}}, {{1, 2}, {1, 0}}, {{2, 0}, {0, 0}}}, {{{
         3, -1}, {1, -1}}, {{0, -3}, {0, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         0, -1}, {2, -1}}, {{1, -3}, {1, -1}}, {{1, 0}, {1, -2}}, {{3, 1}, {
         3, -1}}, {{3, -1}, {1, -1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}}, CompressedData["
1:eJx1kNEJgDAMRHPtCE7gSo7gALr/Rz0bucBR8OBI82iTJvt5H1ePiG26yWEx
9ZCEzlCeKk7TmA6xjMM4lFvprw/MXW+LN+MwRutTdWE5f1T/93l81lW1E7+/
7ucF2Btlhg==
         "], CompressedData["
1:eJxtUEEKwDAIU/uQsS/tCXvA9v/D6ioopEFBrGmMac/7vZ4hIsdKy5zuLhCr
9cA88c/3iF4J5zmeKb4mb2TVZifPlofidR5RJ+rIXqHOxofmHe5D3c47axrt
0dyPZ4f50jX4C+QxH73zm0z2dyjgxTPZ4wf5p+Ed
         "]}, $CellContext`BackTracking[
         Pattern[$CellContext`initialPegs, 
          BlankSequence[]], 
         Pattern[$CellContext`initialOrder, 
          BlankSequence[]]] := 
       Module[{$CellContext`pegs, $CellContext`solvingOrder, $CellContext`jM, \
$CellContext`candidates, $CellContext`edges, $CellContext`node, \
$CellContext`i, $CellContext`lastStep}, $CellContext`pegs = \
$CellContext`initialPegs; $CellContext`solvingOrder = \
$CellContext`initialOrder; If[
           And[
           Length[$CellContext`pegs] == 1, $CellContext`pegs === {{0, 0}}], 
           Throw[
             Join[$CellContext`solvingOrder]]; 
           Abort[], $CellContext`jM = \
$CellContext`JumpingMatrix[$CellContext`pegs]; 
           If[$CellContext`jM =!= {}, $CellContext`candidates = 
              First[$CellContext`jM]; $CellContext`edges = 
              Length[$CellContext`candidates]; 
             For[$CellContext`i = 1, $CellContext`i <= $CellContext`edges, 
               
               Increment[$CellContext`i], $CellContext`node = 
                Part[$CellContext`candidates, $CellContext`i]; \
$CellContext`pegs = $CellContext`doStepMove[$CellContext`pegs, \
$CellContext`node]; $CellContext`solvingOrder = 
                Append[$CellContext`solvingOrder, $CellContext`node]; \
$CellContext`BackTracking[$CellContext`pegs, $CellContext`solvingOrder]; \
$CellContext`lastStep = 
                Last[$CellContext`solvingOrder]; $CellContext`pegs = \
$CellContext`unDoStepMove[$CellContext`pegs, $CellContext`lastStep]; \
$CellContext`solvingOrder = Drop[$CellContext`solvingOrder, -1]; 
               Null]]]], $CellContext`JumpingMatrix[
         Pattern[$CellContext`pegs, 
          BlankSequence[]]] := 
       Module[{$CellContext`holes, $CellContext`checkHoles}, \
$CellContext`holes = Complement[$CellContext`BoardGrid, $CellContext`pegs]; 
         Last[
           Reap[
            Do[$CellContext`checkHoles = Select[
                Map[
                Part[$CellContext`pegs, $CellContext`i] - #& , \
$CellContext`DirectAccess], MemberQ[$CellContext`holes, #]& ]; Do[
               If[
                
                MemberQ[$CellContext`pegs, (
                  Part[$CellContext`pegs, $CellContext`i] + 
                  Part[$CellContext`checkHoles, $CellContext`j])/2], 
                Sow[{
                  Part[$CellContext`pegs, $CellContext`i], 
                  
                  Part[$CellContext`checkHoles, $CellContext`j]}]], \
{$CellContext`j, 
                Length[$CellContext`checkHoles]}], {$CellContext`i, 
              Length[$CellContext`pegs]}]]]], $CellContext`DirectAccess = {{0,
         2}, {0, -2}, {2, 0}, {-2, 0}}, $CellContext`unDoStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedHole}], \
{$CellContext`selectedPeg, ($CellContext`selectedPeg + \
$CellContext`selectedHole)/2}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->415332532]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mode$$ = True, $CellContext`move$$ = 
    0, $CellContext`pegs$$ = {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
    0, -1}}, $CellContext`problems$$ = 
    "very easy 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
    0}, $CellContext`start$$ = {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
    0, -1}}, $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`problems$$], "very easy 1", "problems"}, {
      "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
       "very easy 5", "very easy 6", "very easy 7", "very easy 8", "easy 1", 
       "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", "easy 7", "easy 8", 
       "easy 9", "easy 10", "easy 11", "medium 1", "medium 2", "medium 3", 
       "medium 4", "medium 5", "medium 6", "medium 7", "medium 8", "hard 1", 
       "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", "hard 7", "hard 8", 
       "classic 1"}}, {
      Hold[
       Button[
       "restart and solve", $CellContext`mode$$ = 
         False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
           MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
           ReplaceAll[$CellContext`problems$$, 
            Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
           Catch[
            $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
        180]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`step$$], 1, "solving steps"}, 1, 
      Dynamic[2 Length[$CellContext`solu$$]], 1}, {{
       Hold[$CellContext`move$$], 0}, {}}, {{
       Hold[$CellContext`start$$], {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
       0, -1}}}, {}}, {{
       Hold[$CellContext`pegs$$], {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
       0, -1}}}, {}}, {
      Hold[$CellContext`selectedPeg$$], {}}, {{
       Hold[$CellContext`solu$$], {0, 0}}, {{0, 0}, {0, 0}}}, {
      Hold[$CellContext`mode$$], True}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`problems$515476$$ = 0, $CellContext`step$515477$$ = 
    0, $CellContext`solu$515478$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`mode$$ = True, $CellContext`move$$ = 
        0, $CellContext`pegs$$ = {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
         0, -1}}, $CellContext`problems$$ = 
        "very easy 1", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = \
{0, 0}, $CellContext`start$$ = {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
         0, -1}}, $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`problems$$, $CellContext`problems$515476$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$515477$$, 0], 
        Hold[$CellContext`solu$$, $CellContext`solu$515478$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`start$$ = 
        ReplaceAll[$CellContext`problems$$, $CellContext`initializeProblems]; \
$CellContext`move$$ = Floor[$CellContext`step$$/2]; $CellContext`pegs$$ = 
        If[$CellContext`mode$$, $CellContext`start$$, 
          Fold[$CellContext`doStepMove, $CellContext`start$$, 
           
           Take[$CellContext`solu$$, $CellContext`move$$]]]; \
$CellContext`selectedPeg$$ = If[$CellContext`mode$$, {}, 
          If[
           OddQ[$CellContext`step$$], 
           First[
            Part[$CellContext`solu$$, $CellContext`move$$ + 1]], 
           Last[
            Part[$CellContext`solu$$, $CellContext`move$$]]]]; Deploy[
         Dynamic[
          Graphics[{Gray, 
            Disk[{0, 0}, 4.25], Black, {
             AbsoluteThickness[3], 
             Circle[{0, 0}, 4.25]}, 
            Map[Button[{
               Inset[$CellContext`pegsImage, #], 
               If[$CellContext`selectedPeg$$ === #, {Yellow, 
                 Thickness[0.01], 
                 
                 Circle[{0.03, 0.04} + #, 
                  0.36]}, {}]}, $CellContext`selectedPeg$$ = #]& , \
$CellContext`pegs$$], 
            Map[Button[{White, 
               Opacity[0.8], 
               EdgeForm[Thin], 
               
               Disk[#, 5/
                24]}, {$CellContext`pegs$$, $CellContext`selectedPeg$$} = If[
                And[$CellContext`selectedPeg$$ =!= {}, Sort[
                   Abs[$CellContext`selectedPeg$$ - #]] == {0, 2}, 
                 MemberQ[$CellContext`pegs$$, $CellContext`selectedPeg$$], 
                 
                 MemberQ[$CellContext`pegs$$, ($CellContext`selectedPeg$$ + \
#)/2]], {
                 Union[
                  
                  Complement[$CellContext`pegs$$, \
{$CellContext`selectedPeg$$, ($CellContext`selectedPeg$$ + #)/
                    2}], {#}], #}, {$CellContext`pegs$$, {}}]]& , 
             Complement[$CellContext`BoardGrid, $CellContext`pegs$$]]}, 
           Prolog -> Raster[
             
             Table[$CellContext`i, {$CellContext`i, 100}, {$CellContext`j, 
               100}], {
              Scaled[{0, 0}], 
              Scaled[{1, 1}]}, {1, 100}, 
             ColorFunction -> (Blend[{LightGray, White}, #]& )], 
           PlotRange -> {{-5, 5}, {-5, 5}}, ImageSize -> 500]]]), 
      "Specifications" :> {{{$CellContext`problems$$, "very easy 1", 
          "problems"}, {
         "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
          "very easy 5", "very easy 6", "very easy 7", "very easy 8", 
          "easy 1", "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", 
          "easy 7", "easy 8", "easy 9", "easy 10", "easy 11", "medium 1", 
          "medium 2", "medium 3", "medium 4", "medium 5", "medium 6", 
          "medium 7", "medium 8", "hard 1", "hard 2", "hard 3", "hard 4", 
          "hard 5", "hard 6", "hard 7", "hard 8", "classic 1"}, ControlType -> 
         PopupMenu}, 
        Button[
        "restart and solve", $CellContext`mode$$ = 
          False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
            MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
            ReplaceAll[$CellContext`problems$$, 
             Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
            Catch[
             $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
         180], {{$CellContext`step$$, 1, "solving steps"}, 1, 
         Dynamic[2 Length[$CellContext`solu$$]], 1, Appearance -> 
         "Labeled"}, {{$CellContext`move$$, 0}, {}, ControlType -> 
         None}, {{$CellContext`start$$, {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
          0, -1}}}, {}, ControlType -> 
         None}, {{$CellContext`pegs$$, {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {
          0, -1}}}, {}, ControlType -> None}, {$CellContext`selectedPeg$$, {},
          ControlType -> None}, {{$CellContext`solu$$, {0, 0}}, {{0, 0}, {0, 
         0}}, ControlType -> None}, {$CellContext`mode$$, True, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Top, TrackedSymbols -> True, SynchronousUpdating -> 
        False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`initializeProblems = {
        "very easy 1" -> {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {0, -1}}, 
         "very easy 2" -> {{-1, 1}, {2, 1}, {-2, 0}, {1, 0}, {-1, -1}, {
          1, -1}, {0, -2}}, 
         "very easy 3" -> {{0, 1}, {1, 1}, {-2, 0}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "very easy 4" -> {{0, 1}, {0, 0}, {1, 0}, {2, 0}, {-1, -1}, {1, -1}},
          "very easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}}, 
         "very easy 6" -> {{1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 1}, {0, 0}, {
          1, 0}}, "very easy 7" -> {{0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}, {0, -2}, {1, -2}}, 
         "very easy 8" -> {{0, 2}, {-2, 1}, {1, 1}, {-1, 0}, {1, 
          0}, {-1, -1}, {1, -1}}, 
         "easy 1" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "easy 2" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {0, -1}}, 
         "easy 3" -> {{-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}}, 
         "easy 4" -> {{-1, 2}, {-1, 1}, {1, 1}, {1, 0}, {2, 0}, {0, -1}, {
          1, -1}, {0, -2}}, 
         "easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 
          0}, {-3, -1}, {-2, -1}, {-1, -2}}, 
         "easy 6" -> {{-1, 2}, {0, 1}, {-1, 0}, {0, 0}, {1, 0}, {-1, -1}, {
          0, -1}}, 
         "easy 7" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}}, 
         "easy 8" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-2, -1}, {-1, -1}, {0, -1}, {1, -1}, {1, -2}}, 
         "easy 9" -> {{0, 2}, {-3, 1}, {-2, 1}, {2, 1}, {3, 1}, {-2, 0}, {0, 
          0}, {2, 0}, {-3, -1}, {-2, -1}, {2, -1}, {3, -1}, {0, -2}, {0, -3}},
          "easy 10" -> {{0, 2}, {-1, 1}, {1, 1}, {-3, 0}, {-2, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {0, -2}, {0, -3}}, 
         "easy 11" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "medium 1" -> {{0, 3}, {0, 2}, {1, 1}, {2, 1}, {-2, 0}, {-1, 0}, {0, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "medium 2" -> {{-1, 2}, {0, 2}, {-2, 1}, {-1, 1}, {1, 1}, {-2, 
          0}, {-1, 0}, {2, 0}, {-1, -1}, {1, -1}}, 
         "medium 3" -> {{-1, 2}, {0, 2}, {-1, 1}, {1, 1}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "medium 4" -> {{0, 2}, {1, 1}, {0, 0}, {1, 0}, {-1, -1}, {0, -1}, {
          1, -1}, {2, -1}}, 
         "medium 5" -> {{1, 2}, {-1, 1}, {1, 1}, {2, 1}, {0, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {-1, -2}, {1, -2}}, 
         "medium 6" -> {{0, 1}, {1, 1}, {-1, 0}, {0, 0}, {2, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {-1, -2}}, 
         "medium 7" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {0, 0}}, 
         "medium 8" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 0}}, 
         "hard 1" -> {{0, 2}, {1, 2}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "hard 2" -> {{1, 3}, {-1, 2}, {0, 2}, {1, 1}, {-2, 0}, {0, 0}, {1, 
          0}, {2, 0}, {2, -1}, {0, -2}, {1, -2}}, 
         "hard 3" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
          0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 4" -> {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, 
         "hard 5" -> {{3, 1}, {1, 0}, {2, 0}, {3, 0}, {-1, -1}, {2, -1}, {
          3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 6" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {-2, 0}, {-1, 0}, {1, 0}, {2, 0}, {-2, -1}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "hard 7" -> {{-1, 3}, {0, 3}, {-1, 2}, {0, 1}, {-3, 0}, {-2, 0}, {0, 
          0}, {1, 0}, {2, 0}, {0, -1}, {2, -1}, {3, -1}, {0, -2}}, 
         "hard 8" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {1, 1}, {2, 
          1}, {-2, 0}, {2, 0}, {-2, -1}, {-1, -1}, {1, -1}, {
          2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "classic 1" -> {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 0}, {-2, 
          1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
          3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
          1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {
          2, 1}, {3, -1}, {3, 0}, {3, 1}}}, $CellContext`doStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedPeg, \
($CellContext`selectedPeg + $CellContext`selectedHole)/
           2}], {$CellContext`selectedHole}], $CellContext`pegsImage = 
       Graphics3D[{
          Hue[0.6], 
          Specularity[
           GrayLevel[1], 10], 
          Sphere[{0, 0, 0}]}, Background -> GrayLevel[0.5], Boxed -> False, 
         ImageSize -> 46], $CellContext`BoardGrid = {{-3, -1}, {-3, 0}, {-3, 
        1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
        0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
        1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 
        2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`hardNames = {
        "hard 1", "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", 
         "classic 1"}, $CellContext`hardSolutions = {{{{0, 2}, {0, 
         0}}, {{-1, -2}, {1, -2}}, {{-1, -1}, {-1, 1}}, {{0, -1}, {0, 1}}, {{
         1, 1}, {1, -1}}, {{-1, 1}, {1, 1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}, {{1, 2}, {1, 0}}, {{1, 0}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{-1, 
         2}, {1, 2}}, {{1, -2}, {-1, -2}}, {{1, 0}, {-1, 0}}, {{2, -1}, {2, 
         1}}, {{2, 1}, {0, 1}}, {{1, 3}, {1, 1}}, {{1, 1}, {-1, 1}}, {{-1, 
         1}, {-1, -1}}, {{-1, -2}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{0, 
         1}, {-2, 1}}, {{-2, 1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         1, -3}, {1, -1}}, {{0, -1}, {2, -1}}, {{0, -3}, {0, -1}}, {{3, -1}, {
         1, -1}}, {{0, -1}, {2, -1}}, {{2, -1}, {2, 1}}, {{2, 1}, {0, 1}}, {{
         0, 2}, {0, 0}}}, {{{-3, 1}, {-3, -1}}, {{-2, 
         1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{-1, -1}, {1, -1}}, {{-1, 
         0}, {-1, 2}}, {{-1, 2}, {1, 2}}, {{0, -3}, {0, -1}}, {{0, -1}, {
         2, -1}}, {{0, 0}, {0, 2}}, {{0, 3}, {0, 1}}, {{1, 1}, {1, -1}}, {{
         1, -1}, {3, -1}}, {{3, 1}, {1, 1}}, {{0, 1}, {2, 1}}, {{3, -1}, {3, 
         1}}, {{3, 1}, {1, 1}}, {{1, 2}, {1, 0}}, {{2, 0}, {0, 0}}}, {{{
         3, -1}, {1, -1}}, {{0, -3}, {0, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         0, -1}, {2, -1}}, {{1, -3}, {1, -1}}, {{1, 0}, {1, -2}}, {{3, 1}, {
         3, -1}}, {{3, -1}, {1, -1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}}, CompressedData["
1:eJx1kNEJgDAMRHPtCE7gSo7gALr/Rz0bucBR8OBI82iTJvt5H1ePiG26yWEx
9ZCEzlCeKk7TmA6xjMM4lFvprw/MXW+LN+MwRutTdWE5f1T/93l81lW1E7+/
7ucF2Btlhg==
         "], CompressedData["
1:eJxtUEEKwDAIU/uQsS/tCXvA9v/D6ioopEFBrGmMac/7vZ4hIsdKy5zuLhCr
9cA88c/3iF4J5zmeKb4mb2TVZifPlofidR5RJ+rIXqHOxofmHe5D3c47axrt
0dyPZ4f50jX4C+QxH73zm0z2dyjgxTPZ4wf5p+Ed
         "]}, $CellContext`BackTracking[
         Pattern[$CellContext`initialPegs, 
          BlankSequence[]], 
         Pattern[$CellContext`initialOrder, 
          BlankSequence[]]] := 
       Module[{$CellContext`pegs, $CellContext`solvingOrder, $CellContext`jM, \
$CellContext`candidates, $CellContext`edges, $CellContext`node, \
$CellContext`i, $CellContext`lastStep}, $CellContext`pegs = \
$CellContext`initialPegs; $CellContext`solvingOrder = \
$CellContext`initialOrder; If[
           And[
           Length[$CellContext`pegs] == 1, $CellContext`pegs === {{0, 0}}], 
           Throw[
             Join[$CellContext`solvingOrder]]; 
           Abort[], $CellContext`jM = \
$CellContext`JumpingMatrix[$CellContext`pegs]; 
           If[$CellContext`jM =!= {}, $CellContext`candidates = 
              First[$CellContext`jM]; $CellContext`edges = 
              Length[$CellContext`candidates]; 
             For[$CellContext`i = 1, $CellContext`i <= $CellContext`edges, 
               
               Increment[$CellContext`i], $CellContext`node = 
                Part[$CellContext`candidates, $CellContext`i]; \
$CellContext`pegs = $CellContext`doStepMove[$CellContext`pegs, \
$CellContext`node]; $CellContext`solvingOrder = 
                Append[$CellContext`solvingOrder, $CellContext`node]; \
$CellContext`BackTracking[$CellContext`pegs, $CellContext`solvingOrder]; \
$CellContext`lastStep = 
                Last[$CellContext`solvingOrder]; $CellContext`pegs = \
$CellContext`unDoStepMove[$CellContext`pegs, $CellContext`lastStep]; \
$CellContext`solvingOrder = Drop[$CellContext`solvingOrder, -1]; 
               Null]]]], $CellContext`JumpingMatrix[
         Pattern[$CellContext`pegs, 
          BlankSequence[]]] := 
       Module[{$CellContext`holes, $CellContext`checkHoles}, \
$CellContext`holes = Complement[$CellContext`BoardGrid, $CellContext`pegs]; 
         Last[
           Reap[
            Do[$CellContext`checkHoles = Select[
                Map[
                Part[$CellContext`pegs, $CellContext`i] - #& , \
$CellContext`DirectAccess], MemberQ[$CellContext`holes, #]& ]; Do[
               If[
                
                MemberQ[$CellContext`pegs, (
                  Part[$CellContext`pegs, $CellContext`i] + 
                  Part[$CellContext`checkHoles, $CellContext`j])/2], 
                Sow[{
                  Part[$CellContext`pegs, $CellContext`i], 
                  
                  Part[$CellContext`checkHoles, $CellContext`j]}]], \
{$CellContext`j, 
                Length[$CellContext`checkHoles]}], {$CellContext`i, 
              Length[$CellContext`pegs]}]]]], $CellContext`DirectAccess = {{0,
         2}, {0, -2}, {2, 0}, {-2, 0}}, $CellContext`unDoStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedHole}], \
{$CellContext`selectedPeg, ($CellContext`selectedPeg + \
$CellContext`selectedHole)/2}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->14391521],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mode$$ = True, $CellContext`move$$ = 
    0, $CellContext`pegs$$ = {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
    0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {
    0, -3}, {1, -3}}, $CellContext`problems$$ = 
    "hard 3", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
    0}, $CellContext`start$$ = {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
    0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {
    0, -3}, {1, -3}}, $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`problems$$], "hard 3", "problems"}, {
      "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
       "very easy 5", "very easy 6", "very easy 7", "very easy 8", "easy 1", 
       "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", "easy 7", "easy 8", 
       "easy 9", "easy 10", "easy 11", "medium 1", "medium 2", "medium 3", 
       "medium 4", "medium 5", "medium 6", "medium 7", "medium 8", "hard 1", 
       "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", "hard 7", "hard 8", 
       "classic 1"}}, {
      Hold[
       Button[
       "restart and solve", $CellContext`mode$$ = 
         False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
           MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
           ReplaceAll[$CellContext`problems$$, 
            Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
           Catch[
            $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
        180]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`step$$], 1, "solving steps"}, 1, 
      Dynamic[2 Length[$CellContext`solu$$]], 1}, {{
       Hold[$CellContext`move$$], 0}, {}}, {{
       Hold[$CellContext`start$$], {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 
       0}, {2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
       1, -2}, {-1, -3}, {0, -3}, {1, -3}}}, {}}, {{
       Hold[$CellContext`pegs$$], {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {
       2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
       1, -2}, {-1, -3}, {0, -3}, {1, -3}}}, {}}, {
      Hold[$CellContext`selectedPeg$$], {}}, {{
       Hold[$CellContext`solu$$], {0, 0}}, {{0, 0}, {0, 0}}}, {
      Hold[$CellContext`mode$$], True}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`problems$515554$$ = 0, $CellContext`step$515555$$ = 
    0, $CellContext`solu$515556$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`mode$$ = True, $CellContext`move$$ = 
        0, $CellContext`pegs$$ = {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {
         2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
         1, -2}, {-1, -3}, {0, -3}, {1, -3}}, $CellContext`problems$$ = 
        "hard 3", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
         0}, $CellContext`start$$ = {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 
         0}, {2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
         1, -2}, {-1, -3}, {0, -3}, {1, -3}}, $CellContext`step$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`problems$$, $CellContext`problems$515554$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$515555$$, 0], 
        Hold[$CellContext`solu$$, $CellContext`solu$515556$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`start$$ = 
        ReplaceAll[$CellContext`problems$$, $CellContext`initializeProblems]; 
       $CellContext`move$$ = 
        Floor[$CellContext`step$$/2]; $CellContext`pegs$$ = 
        If[$CellContext`mode$$, $CellContext`start$$, 
          Fold[$CellContext`doStepMove, $CellContext`start$$, 
           
           Take[$CellContext`solu$$, $CellContext`move$$]]]; \
$CellContext`selectedPeg$$ = If[$CellContext`mode$$, {}, 
          If[
           OddQ[$CellContext`step$$], 
           First[
            Part[$CellContext`solu$$, $CellContext`move$$ + 1]], 
           Last[
            Part[$CellContext`solu$$, $CellContext`move$$]]]]; Deploy[
         Dynamic[
          Graphics[{Gray, 
            Disk[{0, 0}, 4.25], Black, {
             AbsoluteThickness[3], 
             Circle[{0, 0}, 4.25]}, 
            Map[Button[{
               Inset[$CellContext`pegsImage, #], 
               If[$CellContext`selectedPeg$$ === #, {Yellow, 
                 Thickness[0.01], 
                 
                 Circle[{0.03, 0.04} + #, 
                  0.36]}, {}]}, $CellContext`selectedPeg$$ = #]& , \
$CellContext`pegs$$], 
            Map[Button[{White, 
               Opacity[0.8], 
               EdgeForm[Thin], 
               
               Disk[#, 5/
                24]}, {$CellContext`pegs$$, $CellContext`selectedPeg$$} = If[
                And[$CellContext`selectedPeg$$ =!= {}, Sort[
                   Abs[$CellContext`selectedPeg$$ - #]] == {0, 2}, 
                 MemberQ[$CellContext`pegs$$, $CellContext`selectedPeg$$], 
                 
                 MemberQ[$CellContext`pegs$$, ($CellContext`selectedPeg$$ + \
#)/2]], {
                 Union[
                  
                  Complement[$CellContext`pegs$$, \
{$CellContext`selectedPeg$$, ($CellContext`selectedPeg$$ + #)/
                    2}], {#}], #}, {$CellContext`pegs$$, {}}]]& , 
             Complement[$CellContext`BoardGrid, $CellContext`pegs$$]]}, 
           Prolog -> Raster[
             
             Table[$CellContext`i, {$CellContext`i, 100}, {$CellContext`j, 
               100}], {
              Scaled[{0, 0}], 
              Scaled[{1, 1}]}, {1, 100}, 
             ColorFunction -> (Blend[{LightGray, White}, #]& )], 
           PlotRange -> {{-5, 5}, {-5, 5}}, ImageSize -> 500]]]), 
      "Specifications" :> {{{$CellContext`problems$$, "hard 3", "problems"}, {
         "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
          "very easy 5", "very easy 6", "very easy 7", "very easy 8", 
          "easy 1", "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", 
          "easy 7", "easy 8", "easy 9", "easy 10", "easy 11", "medium 1", 
          "medium 2", "medium 3", "medium 4", "medium 5", "medium 6", 
          "medium 7", "medium 8", "hard 1", "hard 2", "hard 3", "hard 4", 
          "hard 5", "hard 6", "hard 7", "hard 8", "classic 1"}, ControlType -> 
         PopupMenu}, 
        Button[
        "restart and solve", $CellContext`mode$$ = 
          False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
            MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
            ReplaceAll[$CellContext`problems$$, 
             Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
            Catch[
             $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
         180], {{$CellContext`step$$, 1, "solving steps"}, 1, 
         Dynamic[2 Length[$CellContext`solu$$]], 1, Appearance -> 
         "Labeled"}, {{$CellContext`move$$, 0}, {}, ControlType -> 
         None}, {{$CellContext`start$$, {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2,
           0}, {2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}}, {}, ControlType -> 
         None}, {{$CellContext`pegs$$, {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 
          0}, {2, 0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}}, {}, ControlType -> 
         None}, {$CellContext`selectedPeg$$, {}, ControlType -> 
         None}, {{$CellContext`solu$$, {0, 0}}, {{0, 0}, {0, 0}}, ControlType -> 
         None}, {$CellContext`mode$$, True, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Top, TrackedSymbols -> True, SynchronousUpdating -> 
        False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`initializeProblems = {
        "very easy 1" -> {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {0, -1}}, 
         "very easy 2" -> {{-1, 1}, {2, 1}, {-2, 0}, {1, 0}, {-1, -1}, {
          1, -1}, {0, -2}}, 
         "very easy 3" -> {{0, 1}, {1, 1}, {-2, 0}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "very easy 4" -> {{0, 1}, {0, 0}, {1, 0}, {2, 0}, {-1, -1}, {1, -1}},
          "very easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}}, 
         "very easy 6" -> {{1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 1}, {0, 0}, {
          1, 0}}, "very easy 7" -> {{0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}, {0, -2}, {1, -2}}, 
         "very easy 8" -> {{0, 2}, {-2, 1}, {1, 1}, {-1, 0}, {1, 
          0}, {-1, -1}, {1, -1}}, 
         "easy 1" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "easy 2" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {0, -1}}, 
         "easy 3" -> {{-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}}, 
         "easy 4" -> {{-1, 2}, {-1, 1}, {1, 1}, {1, 0}, {2, 0}, {0, -1}, {
          1, -1}, {0, -2}}, 
         "easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 
          0}, {-3, -1}, {-2, -1}, {-1, -2}}, 
         "easy 6" -> {{-1, 2}, {0, 1}, {-1, 0}, {0, 0}, {1, 0}, {-1, -1}, {
          0, -1}}, 
         "easy 7" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}}, 
         "easy 8" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-2, -1}, {-1, -1}, {0, -1}, {1, -1}, {1, -2}}, 
         "easy 9" -> {{0, 2}, {-3, 1}, {-2, 1}, {2, 1}, {3, 1}, {-2, 0}, {0, 
          0}, {2, 0}, {-3, -1}, {-2, -1}, {2, -1}, {3, -1}, {0, -2}, {0, -3}},
          "easy 10" -> {{0, 2}, {-1, 1}, {1, 1}, {-3, 0}, {-2, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {0, -2}, {0, -3}}, 
         "easy 11" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "medium 1" -> {{0, 3}, {0, 2}, {1, 1}, {2, 1}, {-2, 0}, {-1, 0}, {0, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "medium 2" -> {{-1, 2}, {0, 2}, {-2, 1}, {-1, 1}, {1, 1}, {-2, 
          0}, {-1, 0}, {2, 0}, {-1, -1}, {1, -1}}, 
         "medium 3" -> {{-1, 2}, {0, 2}, {-1, 1}, {1, 1}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "medium 4" -> {{0, 2}, {1, 1}, {0, 0}, {1, 0}, {-1, -1}, {0, -1}, {
          1, -1}, {2, -1}}, 
         "medium 5" -> {{1, 2}, {-1, 1}, {1, 1}, {2, 1}, {0, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {-1, -2}, {1, -2}}, 
         "medium 6" -> {{0, 1}, {1, 1}, {-1, 0}, {0, 0}, {2, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {-1, -2}}, 
         "medium 7" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {0, 0}}, 
         "medium 8" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 0}}, 
         "hard 1" -> {{0, 2}, {1, 2}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "hard 2" -> {{1, 3}, {-1, 2}, {0, 2}, {1, 1}, {-2, 0}, {0, 0}, {1, 
          0}, {2, 0}, {2, -1}, {0, -2}, {1, -2}}, 
         "hard 3" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
          0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 4" -> {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, 
         "hard 5" -> {{3, 1}, {1, 0}, {2, 0}, {3, 0}, {-1, -1}, {2, -1}, {
          3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 6" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {-2, 0}, {-1, 0}, {1, 0}, {2, 0}, {-2, -1}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "hard 7" -> {{-1, 3}, {0, 3}, {-1, 2}, {0, 1}, {-3, 0}, {-2, 0}, {0, 
          0}, {1, 0}, {2, 0}, {0, -1}, {2, -1}, {3, -1}, {0, -2}}, 
         "hard 8" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {1, 1}, {2, 
          1}, {-2, 0}, {2, 0}, {-2, -1}, {-1, -1}, {1, -1}, {
          2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "classic 1" -> {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 0}, {-2, 
          1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
          3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
          1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {
          2, 1}, {3, -1}, {3, 0}, {3, 1}}}, $CellContext`doStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedPeg, \
($CellContext`selectedPeg + $CellContext`selectedHole)/
           2}], {$CellContext`selectedHole}], $CellContext`pegsImage = 
       Graphics3D[{
          Hue[0.6], 
          Specularity[
           GrayLevel[1], 10], 
          Sphere[{0, 0, 0}]}, Background -> GrayLevel[0.5], Boxed -> False, 
         ImageSize -> 46], $CellContext`BoardGrid = {{-3, -1}, {-3, 0}, {-3, 
        1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
        0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
        1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 
        2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`hardNames = {
        "hard 1", "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", 
         "classic 1"}, $CellContext`hardSolutions = {{{{0, 2}, {0, 
         0}}, {{-1, -2}, {1, -2}}, {{-1, -1}, {-1, 1}}, {{0, -1}, {0, 1}}, {{
         1, 1}, {1, -1}}, {{-1, 1}, {1, 1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}, {{1, 2}, {1, 0}}, {{1, 0}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{-1, 
         2}, {1, 2}}, {{1, -2}, {-1, -2}}, {{1, 0}, {-1, 0}}, {{2, -1}, {2, 
         1}}, {{2, 1}, {0, 1}}, {{1, 3}, {1, 1}}, {{1, 1}, {-1, 1}}, {{-1, 
         1}, {-1, -1}}, {{-1, -2}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{0, 
         1}, {-2, 1}}, {{-2, 1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         1, -3}, {1, -1}}, {{0, -1}, {2, -1}}, {{0, -3}, {0, -1}}, {{3, -1}, {
         1, -1}}, {{0, -1}, {2, -1}}, {{2, -1}, {2, 1}}, {{2, 1}, {0, 1}}, {{
         0, 2}, {0, 0}}}, {{{-3, 1}, {-3, -1}}, {{-2, 
         1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{-1, -1}, {1, -1}}, {{-1, 
         0}, {-1, 2}}, {{-1, 2}, {1, 2}}, {{0, -3}, {0, -1}}, {{0, -1}, {
         2, -1}}, {{0, 0}, {0, 2}}, {{0, 3}, {0, 1}}, {{1, 1}, {1, -1}}, {{
         1, -1}, {3, -1}}, {{3, 1}, {1, 1}}, {{0, 1}, {2, 1}}, {{3, -1}, {3, 
         1}}, {{3, 1}, {1, 1}}, {{1, 2}, {1, 0}}, {{2, 0}, {0, 0}}}, {{{
         3, -1}, {1, -1}}, {{0, -3}, {0, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         0, -1}, {2, -1}}, {{1, -3}, {1, -1}}, {{1, 0}, {1, -2}}, {{3, 1}, {
         3, -1}}, {{3, -1}, {1, -1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}}, CompressedData["
1:eJx1kNEJgDAMRHPtCE7gSo7gALr/Rz0bucBR8OBI82iTJvt5H1ePiG26yWEx
9ZCEzlCeKk7TmA6xjMM4lFvprw/MXW+LN+MwRutTdWE5f1T/93l81lW1E7+/
7ucF2Btlhg==
         "], CompressedData["
1:eJxtUEEKwDAIU/uQsS/tCXvA9v/D6ioopEFBrGmMac/7vZ4hIsdKy5zuLhCr
9cA88c/3iF4J5zmeKb4mb2TVZifPlofidR5RJ+rIXqHOxofmHe5D3c47axrt
0dyPZ4f50jX4C+QxH73zm0z2dyjgxTPZ4wf5p+Ed
         "]}, $CellContext`BackTracking[
         Pattern[$CellContext`initialPegs, 
          BlankSequence[]], 
         Pattern[$CellContext`initialOrder, 
          BlankSequence[]]] := 
       Module[{$CellContext`pegs, $CellContext`solvingOrder, $CellContext`jM, \
$CellContext`candidates, $CellContext`edges, $CellContext`node, \
$CellContext`i, $CellContext`lastStep}, $CellContext`pegs = \
$CellContext`initialPegs; $CellContext`solvingOrder = \
$CellContext`initialOrder; If[
           And[
           Length[$CellContext`pegs] == 1, $CellContext`pegs === {{0, 0}}], 
           Throw[
             Join[$CellContext`solvingOrder]]; 
           Abort[], $CellContext`jM = \
$CellContext`JumpingMatrix[$CellContext`pegs]; 
           If[$CellContext`jM =!= {}, $CellContext`candidates = 
              First[$CellContext`jM]; $CellContext`edges = 
              Length[$CellContext`candidates]; 
             For[$CellContext`i = 1, $CellContext`i <= $CellContext`edges, 
               
               Increment[$CellContext`i], $CellContext`node = 
                Part[$CellContext`candidates, $CellContext`i]; \
$CellContext`pegs = $CellContext`doStepMove[$CellContext`pegs, \
$CellContext`node]; $CellContext`solvingOrder = 
                Append[$CellContext`solvingOrder, $CellContext`node]; \
$CellContext`BackTracking[$CellContext`pegs, $CellContext`solvingOrder]; \
$CellContext`lastStep = 
                Last[$CellContext`solvingOrder]; $CellContext`pegs = \
$CellContext`unDoStepMove[$CellContext`pegs, $CellContext`lastStep]; \
$CellContext`solvingOrder = Drop[$CellContext`solvingOrder, -1]; 
               Null]]]], $CellContext`JumpingMatrix[
         Pattern[$CellContext`pegs, 
          BlankSequence[]]] := 
       Module[{$CellContext`holes, $CellContext`checkHoles}, \
$CellContext`holes = Complement[$CellContext`BoardGrid, $CellContext`pegs]; 
         Last[
           Reap[
            Do[$CellContext`checkHoles = Select[
                Map[
                Part[$CellContext`pegs, $CellContext`i] - #& , \
$CellContext`DirectAccess], MemberQ[$CellContext`holes, #]& ]; Do[
               If[
                
                MemberQ[$CellContext`pegs, (
                  Part[$CellContext`pegs, $CellContext`i] + 
                  Part[$CellContext`checkHoles, $CellContext`j])/2], 
                Sow[{
                  Part[$CellContext`pegs, $CellContext`i], 
                  
                  Part[$CellContext`checkHoles, $CellContext`j]}]], \
{$CellContext`j, 
                Length[$CellContext`checkHoles]}], {$CellContext`i, 
              Length[$CellContext`pegs]}]]]], $CellContext`DirectAccess = {{0,
         2}, {0, -2}, {2, 0}, {-2, 0}}, $CellContext`unDoStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedHole}], \
{$CellContext`selectedPeg, ($CellContext`selectedPeg + \
$CellContext`selectedHole)/2}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->609607520],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mode$$ = True, $CellContext`move$$ = 
    0, $CellContext`pegs$$ = {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 
    1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2,
     0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, $CellContext`problems$$ = 
    "hard 4", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
    0}, $CellContext`start$$ = {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0,
     1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {
    2, 0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, $CellContext`step$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`problems$$], "hard 4", "problems"}, {
      "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
       "very easy 5", "very easy 6", "very easy 7", "very easy 8", "easy 1", 
       "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", "easy 7", "easy 8", 
       "easy 9", "easy 10", "easy 11", "medium 1", "medium 2", "medium 3", 
       "medium 4", "medium 5", "medium 6", "medium 7", "medium 8", "hard 1", 
       "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", "hard 7", "hard 8", 
       "classic 1"}}, {
      Hold[
       Button[
       "restart and solve", $CellContext`mode$$ = 
         False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
           MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
           ReplaceAll[$CellContext`problems$$, 
            Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
           Catch[
            $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
        180]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`step$$], 1, "solving steps"}, 1, 
      Dynamic[2 Length[$CellContext`solu$$]], 1}, {{
       Hold[$CellContext`move$$], 0}, {}}, {{
       Hold[$CellContext`start$$], {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 
       1}, {0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 
       0}, {1, 0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}}, {}}, {{
       Hold[$CellContext`pegs$$], {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 
       1}, {0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 
       0}, {1, 0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}}, {}}, {
      Hold[$CellContext`selectedPeg$$], {}}, {{
       Hold[$CellContext`solu$$], {0, 0}}, {{0, 0}, {0, 0}}}, {
      Hold[$CellContext`mode$$], True}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`problems$515632$$ = 0, $CellContext`step$515633$$ = 
    0, $CellContext`solu$515634$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`mode$$ = True, $CellContext`move$$ = 
        0, $CellContext`pegs$$ = {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {
         0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1,
          0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {
         0, -3}}, $CellContext`problems$$ = 
        "hard 4", $CellContext`selectedPeg$$ = {}, $CellContext`solu$$ = {0, 
         0}, $CellContext`start$$ = {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 
         1}, {0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 
         0}, {1, 0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {
         0, -3}}, $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`problems$$, $CellContext`problems$515632$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$515633$$, 0], 
        Hold[$CellContext`solu$$, $CellContext`solu$515634$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`start$$ = 
        ReplaceAll[$CellContext`problems$$, $CellContext`initializeProblems]; \
$CellContext`move$$ = Floor[$CellContext`step$$/2]; $CellContext`pegs$$ = 
        If[$CellContext`mode$$, $CellContext`start$$, 
          Fold[$CellContext`doStepMove, $CellContext`start$$, 
           
           Take[$CellContext`solu$$, $CellContext`move$$]]]; \
$CellContext`selectedPeg$$ = If[$CellContext`mode$$, {}, 
          If[
           OddQ[$CellContext`step$$], 
           First[
            Part[$CellContext`solu$$, $CellContext`move$$ + 1]], 
           Last[
            Part[$CellContext`solu$$, $CellContext`move$$]]]]; Deploy[
         Dynamic[
          Graphics[{Gray, 
            Disk[{0, 0}, 4.25], Black, {
             AbsoluteThickness[3], 
             Circle[{0, 0}, 4.25]}, 
            Map[Button[{
               Inset[$CellContext`pegsImage, #], 
               If[$CellContext`selectedPeg$$ === #, {Yellow, 
                 Thickness[0.01], 
                 
                 Circle[{0.03, 0.04} + #, 
                  0.36]}, {}]}, $CellContext`selectedPeg$$ = #]& , \
$CellContext`pegs$$], 
            Map[Button[{White, 
               Opacity[0.8], 
               EdgeForm[Thin], 
               
               Disk[#, 5/
                24]}, {$CellContext`pegs$$, $CellContext`selectedPeg$$} = If[
                And[$CellContext`selectedPeg$$ =!= {}, Sort[
                   Abs[$CellContext`selectedPeg$$ - #]] == {0, 2}, 
                 MemberQ[$CellContext`pegs$$, $CellContext`selectedPeg$$], 
                 
                 MemberQ[$CellContext`pegs$$, ($CellContext`selectedPeg$$ + \
#)/2]], {
                 Union[
                  
                  Complement[$CellContext`pegs$$, \
{$CellContext`selectedPeg$$, ($CellContext`selectedPeg$$ + #)/
                    2}], {#}], #}, {$CellContext`pegs$$, {}}]]& , 
             Complement[$CellContext`BoardGrid, $CellContext`pegs$$]]}, 
           Prolog -> Raster[
             
             Table[$CellContext`i, {$CellContext`i, 100}, {$CellContext`j, 
               100}], {
              Scaled[{0, 0}], 
              Scaled[{1, 1}]}, {1, 100}, 
             ColorFunction -> (Blend[{LightGray, White}, #]& )], 
           PlotRange -> {{-5, 5}, {-5, 5}}, ImageSize -> 500]]]), 
      "Specifications" :> {{{$CellContext`problems$$, "hard 4", "problems"}, {
         "very easy 1", "very easy 2", "very easy 3", "very easy 4", 
          "very easy 5", "very easy 6", "very easy 7", "very easy 8", 
          "easy 1", "easy 2", "easy 3", "easy 4", "easy 5", "easy 6", 
          "easy 7", "easy 8", "easy 9", "easy 10", "easy 11", "medium 1", 
          "medium 2", "medium 3", "medium 4", "medium 5", "medium 6", 
          "medium 7", "medium 8", "hard 1", "hard 2", "hard 3", "hard 4", 
          "hard 5", "hard 6", "hard 7", "hard 8", "classic 1"}, ControlType -> 
         PopupMenu}, 
        Button[
        "restart and solve", $CellContext`mode$$ = 
          False; $CellContext`pegs$$ = $CellContext`start$$; \
$CellContext`step$$ = 1; $CellContext`solu$$ = If[
            MemberQ[$CellContext`hardNames, $CellContext`problems$$], 
            ReplaceAll[$CellContext`problems$$, 
             Thread[$CellContext`hardNames -> $CellContext`hardSolutions]], 
            Catch[
             $CellContext`BackTracking[$CellContext`start$$, {}]]], ImageSize -> 
         180], {{$CellContext`step$$, 1, "solving steps"}, 1, 
         Dynamic[2 Length[$CellContext`solu$$]], 1, Appearance -> 
         "Labeled"}, {{$CellContext`move$$, 0}, {}, ControlType -> 
         None}, {{$CellContext`start$$, {{0, 3}, {0, 2}, {-3, 1}, {-2, 
          1}, {-1, 1}, {0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 
          0}, {0, 0}, {1, 0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}}, {},
          ControlType -> 
         None}, {{$CellContext`pegs$$, {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1,
           1}, {0, 1}, {1, 1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 
          0}, {1, 0}, {2, 0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}}, {}, 
         ControlType -> None}, {$CellContext`selectedPeg$$, {}, ControlType -> 
         None}, {{$CellContext`solu$$, {0, 0}}, {{0, 0}, {0, 0}}, ControlType -> 
         None}, {$CellContext`mode$$, True, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Top, TrackedSymbols -> True, SynchronousUpdating -> 
        False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`initializeProblems = {
        "very easy 1" -> {{0, 2}, {-1, 1}, {-2, 0}, {-1, -1}, {0, -1}}, 
         "very easy 2" -> {{-1, 1}, {2, 1}, {-2, 0}, {1, 0}, {-1, -1}, {
          1, -1}, {0, -2}}, 
         "very easy 3" -> {{0, 1}, {1, 1}, {-2, 0}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "very easy 4" -> {{0, 1}, {0, 0}, {1, 0}, {2, 0}, {-1, -1}, {1, -1}},
          "very easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}}, 
         "very easy 6" -> {{1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 1}, {0, 0}, {
          1, 0}}, "very easy 7" -> {{0, 1}, {1, 1}, {2, 1}, {-1, 0}, {0, 
          0}, {-1, -1}, {0, -2}, {1, -2}}, 
         "very easy 8" -> {{0, 2}, {-2, 1}, {1, 1}, {-1, 0}, {1, 
          0}, {-1, -1}, {1, -1}}, 
         "easy 1" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "easy 2" -> {{-1, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {0, -1}}, 
         "easy 3" -> {{-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}}, 
         "easy 4" -> {{-1, 2}, {-1, 1}, {1, 1}, {1, 0}, {2, 0}, {0, -1}, {
          1, -1}, {0, -2}}, 
         "easy 5" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 
          0}, {-3, -1}, {-2, -1}, {-1, -2}}, 
         "easy 6" -> {{-1, 2}, {0, 1}, {-1, 0}, {0, 0}, {1, 0}, {-1, -1}, {
          0, -1}}, 
         "easy 7" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}}, 
         "easy 8" -> {{-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {-2, -1}, {-1, -1}, {0, -1}, {1, -1}, {1, -2}}, 
         "easy 9" -> {{0, 2}, {-3, 1}, {-2, 1}, {2, 1}, {3, 1}, {-2, 0}, {0, 
          0}, {2, 0}, {-3, -1}, {-2, -1}, {2, -1}, {3, -1}, {0, -2}, {0, -3}},
          "easy 10" -> {{0, 2}, {-1, 1}, {1, 1}, {-3, 0}, {-2, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {0, -2}, {0, -3}}, 
         "easy 11" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {1, -1}, {0, -2}}, 
         "medium 1" -> {{0, 3}, {0, 2}, {1, 1}, {2, 1}, {-2, 0}, {-1, 0}, {0, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "medium 2" -> {{-1, 2}, {0, 2}, {-2, 1}, {-1, 1}, {1, 1}, {-2, 
          0}, {-1, 0}, {2, 0}, {-1, -1}, {1, -1}}, 
         "medium 3" -> {{-1, 2}, {0, 2}, {-1, 1}, {1, 1}, {0, 0}, {-1, -1}, {
          1, -1}, {2, -1}, {0, -2}}, 
         "medium 4" -> {{0, 2}, {1, 1}, {0, 0}, {1, 0}, {-1, -1}, {0, -1}, {
          1, -1}, {2, -1}}, 
         "medium 5" -> {{1, 2}, {-1, 1}, {1, 1}, {2, 1}, {0, 0}, {2, 
          0}, {-1, -1}, {1, -1}, {-1, -2}, {1, -2}}, 
         "medium 6" -> {{0, 1}, {1, 1}, {-1, 0}, {0, 0}, {2, 0}, {-1, -1}, {
          0, -1}, {1, -1}, {-1, -2}}, 
         "medium 7" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {0, 0}}, 
         "medium 8" -> {{-1, 3}, {0, 3}, {1, 3}, {-1, 2}, {0, 2}, {1, 2}, {-1,
           1}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 0}}, 
         "hard 1" -> {{0, 2}, {1, 2}, {0, 1}, {1, 1}, {-2, 0}, {-1, 0}, {1, 
          0}, {2, 0}, {-1, -1}, {0, -1}, {-1, -2}, {0, -2}}, 
         "hard 2" -> {{1, 3}, {-1, 2}, {0, 2}, {1, 1}, {-2, 0}, {0, 0}, {1, 
          0}, {2, 0}, {2, -1}, {0, -2}, {1, -2}}, 
         "hard 3" -> {{0, 2}, {-1, 1}, {0, 1}, {1, 1}, {-2, 0}, {2, 
          0}, {-3, -1}, {0, -1}, {3, -1}, {-1, -2}, {0, -2}, {
          1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 4" -> {{0, 3}, {0, 2}, {-3, 1}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {3, 1}, {-3, 0}, {-2, 0}, {-1, 0}, {0, 0}, {1, 0}, {2, 
          0}, {3, 0}, {0, -1}, {0, -2}, {0, -3}}, 
         "hard 5" -> {{3, 1}, {1, 0}, {2, 0}, {3, 0}, {-1, -1}, {2, -1}, {
          3, -1}, {-1, -2}, {0, -2}, {1, -2}, {-1, -3}, {0, -3}, {1, -3}}, 
         "hard 6" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {0, 1}, {1, 
          1}, {2, 1}, {-2, 0}, {-1, 0}, {1, 0}, {2, 0}, {-2, -1}, {-1, -1}, {
          0, -1}, {1, -1}, {2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "hard 7" -> {{-1, 3}, {0, 3}, {-1, 2}, {0, 1}, {-3, 0}, {-2, 0}, {0, 
          0}, {1, 0}, {2, 0}, {0, -1}, {2, -1}, {3, -1}, {0, -2}}, 
         "hard 8" -> {{-1, 2}, {0, 2}, {1, 2}, {-2, 1}, {-1, 1}, {1, 1}, {2, 
          1}, {-2, 0}, {2, 0}, {-2, -1}, {-1, -1}, {1, -1}, {
          2, -1}, {-1, -2}, {0, -2}, {1, -2}}, 
         "classic 1" -> {{-3, -1}, {-3, 0}, {-3, 1}, {-2, -1}, {-2, 0}, {-2, 
          1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
          3}, {0, -3}, {0, -2}, {0, -1}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
          1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {
          2, 1}, {3, -1}, {3, 0}, {3, 1}}}, $CellContext`doStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedPeg, \
($CellContext`selectedPeg + $CellContext`selectedHole)/
           2}], {$CellContext`selectedHole}], $CellContext`pegsImage = 
       Graphics3D[{
          Hue[0.6], 
          Specularity[
           GrayLevel[1], 10], 
          Sphere[{0, 0, 0}]}, Background -> GrayLevel[0.5], Boxed -> False, 
         ImageSize -> 46], $CellContext`BoardGrid = {{-3, -1}, {-3, 0}, {-3, 
        1}, {-2, -1}, {-2, 0}, {-2, 1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 
        0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
        1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 
        2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {3, -1}, {3, 0}, {3, 1}}, 
       Attributes[PlotRange] = {ReadProtected}, $CellContext`hardNames = {
        "hard 1", "hard 2", "hard 3", "hard 4", "hard 5", "hard 6", 
         "classic 1"}, $CellContext`hardSolutions = {{{{0, 2}, {0, 
         0}}, {{-1, -2}, {1, -2}}, {{-1, -1}, {-1, 1}}, {{0, -1}, {0, 1}}, {{
         1, 1}, {1, -1}}, {{-1, 1}, {1, 1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}, {{1, 2}, {1, 0}}, {{1, 0}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{-1, 
         2}, {1, 2}}, {{1, -2}, {-1, -2}}, {{1, 0}, {-1, 0}}, {{2, -1}, {2, 
         1}}, {{2, 1}, {0, 1}}, {{1, 3}, {1, 1}}, {{1, 1}, {-1, 1}}, {{-1, 
         1}, {-1, -1}}, {{-1, -2}, {-1, 0}}, {{-2, 0}, {0, 0}}}, {{{0, 
         1}, {-2, 1}}, {{-2, 1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         1, -3}, {1, -1}}, {{0, -1}, {2, -1}}, {{0, -3}, {0, -1}}, {{3, -1}, {
         1, -1}}, {{0, -1}, {2, -1}}, {{2, -1}, {2, 1}}, {{2, 1}, {0, 1}}, {{
         0, 2}, {0, 0}}}, {{{-3, 1}, {-3, -1}}, {{-2, 
         1}, {-2, -1}}, {{-3, -1}, {-1, -1}}, {{-1, -1}, {1, -1}}, {{-1, 
         0}, {-1, 2}}, {{-1, 2}, {1, 2}}, {{0, -3}, {0, -1}}, {{0, -1}, {
         2, -1}}, {{0, 0}, {0, 2}}, {{0, 3}, {0, 1}}, {{1, 1}, {1, -1}}, {{
         1, -1}, {3, -1}}, {{3, 1}, {1, 1}}, {{0, 1}, {2, 1}}, {{3, -1}, {3, 
         1}}, {{3, 1}, {1, 1}}, {{1, 2}, {1, 0}}, {{2, 0}, {0, 0}}}, {{{
         3, -1}, {1, -1}}, {{0, -3}, {0, -1}}, {{
         0, -1}, {-2, -1}}, {{-1, -3}, {-1, -1}}, {{-2, -1}, {0, -1}}, {{
         0, -1}, {2, -1}}, {{1, -3}, {1, -1}}, {{1, 0}, {1, -2}}, {{3, 1}, {
         3, -1}}, {{3, -1}, {1, -1}}, {{1, -2}, {1, 0}}, {{2, 0}, {0, 
         0}}}, CompressedData["
1:eJx1kNEJgDAMRHPtCE7gSo7gALr/Rz0bucBR8OBI82iTJvt5H1ePiG26yWEx
9ZCEzlCeKk7TmA6xjMM4lFvprw/MXW+LN+MwRutTdWE5f1T/93l81lW1E7+/
7ucF2Btlhg==
         "], CompressedData["
1:eJxtUEEKwDAIU/uQsS/tCXvA9v/D6ioopEFBrGmMac/7vZ4hIsdKy5zuLhCr
9cA88c/3iF4J5zmeKb4mb2TVZifPlofidR5RJ+rIXqHOxofmHe5D3c47axrt
0dyPZ4f50jX4C+QxH73zm0z2dyjgxTPZ4wf5p+Ed
         "]}, $CellContext`BackTracking[
         Pattern[$CellContext`initialPegs, 
          BlankSequence[]], 
         Pattern[$CellContext`initialOrder, 
          BlankSequence[]]] := 
       Module[{$CellContext`pegs, $CellContext`solvingOrder, $CellContext`jM, \
$CellContext`candidates, $CellContext`edges, $CellContext`node, \
$CellContext`i, $CellContext`lastStep}, $CellContext`pegs = \
$CellContext`initialPegs; $CellContext`solvingOrder = \
$CellContext`initialOrder; If[
           And[
           Length[$CellContext`pegs] == 1, $CellContext`pegs === {{0, 0}}], 
           Throw[
             Join[$CellContext`solvingOrder]]; 
           Abort[], $CellContext`jM = \
$CellContext`JumpingMatrix[$CellContext`pegs]; 
           If[$CellContext`jM =!= {}, $CellContext`candidates = 
              First[$CellContext`jM]; $CellContext`edges = 
              Length[$CellContext`candidates]; 
             For[$CellContext`i = 1, $CellContext`i <= $CellContext`edges, 
               
               Increment[$CellContext`i], $CellContext`node = 
                Part[$CellContext`candidates, $CellContext`i]; \
$CellContext`pegs = $CellContext`doStepMove[$CellContext`pegs, \
$CellContext`node]; $CellContext`solvingOrder = 
                Append[$CellContext`solvingOrder, $CellContext`node]; \
$CellContext`BackTracking[$CellContext`pegs, $CellContext`solvingOrder]; \
$CellContext`lastStep = 
                Last[$CellContext`solvingOrder]; $CellContext`pegs = \
$CellContext`unDoStepMove[$CellContext`pegs, $CellContext`lastStep]; \
$CellContext`solvingOrder = Drop[$CellContext`solvingOrder, -1]; 
               Null]]]], $CellContext`JumpingMatrix[
         Pattern[$CellContext`pegs, 
          BlankSequence[]]] := 
       Module[{$CellContext`holes, $CellContext`checkHoles}, \
$CellContext`holes = Complement[$CellContext`BoardGrid, $CellContext`pegs]; 
         Last[
           Reap[
            Do[$CellContext`checkHoles = Select[
                Map[
                Part[$CellContext`pegs, $CellContext`i] - #& , \
$CellContext`DirectAccess], MemberQ[$CellContext`holes, #]& ]; Do[
               If[
                
                MemberQ[$CellContext`pegs, (
                  Part[$CellContext`pegs, $CellContext`i] + 
                  Part[$CellContext`checkHoles, $CellContext`j])/2], 
                Sow[{
                  Part[$CellContext`pegs, $CellContext`i], 
                  
                  Part[$CellContext`checkHoles, $CellContext`j]}]], \
{$CellContext`j, 
                Length[$CellContext`checkHoles]}], {$CellContext`i, 
              Length[$CellContext`pegs]}]]]], $CellContext`DirectAccess = {{0,
         2}, {0, -2}, {2, 0}, {-2, 0}}, $CellContext`unDoStepMove[
         Pattern[$CellContext`pegs, 
          BlankSequence[]], {
          Pattern[$CellContext`selectedPeg, 
           Blank[]], 
          Pattern[$CellContext`selectedHole, 
           Blank[]]}] := Union[
         Complement[$CellContext`pegs, {$CellContext`selectedHole}], \
{$CellContext`selectedPeg, ($CellContext`selectedPeg + \
$CellContext`selectedHole)/2}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->64478611]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["References:", "DetailNotes",
 CellID->570455503],

Cell[TextData[{
 "[1] M. Kiyomi and T. Matsui, \"Integer Programming Based Algorithms for Peg \
Solitaire Problems,\" ",
 StyleBox["Computers and Games",
  FontSlant->"Italic"],
 ", 2001 pp. 229\[Dash]240."
}], "DetailNotes",
 CellID->32074987],

Cell[TextData[{
 "[2] C. Jefferson, A. Miguel, I. Miguel, and A. Tarim, \"Modelling and \
Solving English Peg Solitaire,\" ",
 StyleBox["Computers and Operations Research",
  FontSlant->"Italic"],
 ", ",
 StyleBox["33",
  FontWeight->"Bold"],
 "(10), 2006 pp. 2935\[Dash]2959."
}], "DetailNotes",
 CellChangeTimes->{3.35696210375764*^9, 3.468759979328125*^9},
 CellID->3967472],

Cell[TextData[{
 "[3] S. S. Skiena, ",
 StyleBox["The Algorithm Design Manual, ",
  FontSlant->"Italic"],
 "2nd ed., New York: Springer, 2008 pp. 231\[Dash]233."
}], "DetailNotes",
 CellID->598494391],

Cell[TextData[{
 "[4] D. E. Knuth, \"Estimating the Efficiency of Backtrack Programs,\" ",
 StyleBox["Mathematics of Computation,",
  FontSlant->"Italic"],
 " ",
 StyleBox["29",
  FontWeight->"Bold"],
 "(3), 1975 pp. 121\[Dash]136."
}], "DetailNotes",
 CellID->1948600]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["", "SearchTerms",
 CellID->105654826],

Cell["peg solitaire", "SearchTerms",
 CellID->7398318],

Cell["board game", "SearchTerms",
 CellID->11654596],

Cell["chess", "SearchTerms",
 CellID->424808396],

Cell["tree searching", "SearchTerms",
 CellID->845222335],

Cell["depth first ", "SearchTerms",
 CellID->159998440],

Cell["backtracking", "SearchTerms",
 CellID->507179973],

Cell["recursion", "SearchTerms",
 CellID->145264209],

Cell["image processing", "SearchTerms",
 CellID->300239931]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Problems in Peg Solitaire",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/ProblemsInPegSolitaire/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/ProblemsInPegSolitaire/"]], \
"RelatedLinks",
 CellID->28904428],

Cell[TextData[ButtonBox["Peg Solitaire",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/PegSolitaire.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/PegSolitaire.html"]], "RelatedLinks",
 CellID->357236803],

Cell[TextData[ButtonBox["Tree Searching",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/TreeSearching.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/TreeSearching.html"]], "RelatedLinks",
 CellID->22269600],

Cell[TextData[ButtonBox["Depth-First Traversal",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Depth-FirstTraversal.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/Depth-FirstTraversal.html"]], "RelatedLinks",
 CellID->61015509],

Cell[TextData[ButtonBox["Backtracking",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Backtracking.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/Backtracking.html"]], "RelatedLinks",
 CellID->131405001],

Cell[TextData[ButtonBox["Recursion",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Recursion.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Recursion.html"]], "RelatedLinks",
 CellID->265283802]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Frederick Wu",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Frederick+Wu"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Frederick+Wu"]
}], "Author",
 CellID->617421218],

Cell[TextData[{
 "Based on a program by: ",
 ButtonBox["Jacob A. Siehler",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Jacob+A.+\
Siehler"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Jacob+A.+Siehler"]
}], "Author",
 CellID->358038734]
}, Open  ]]
}, Open  ]]
},
WindowSize->{887, 890},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[189867, 4508, 312, 8, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[190182, 4518, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[190863, 4536, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[191206, 4549, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[191846, 4566, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[192693, 4589, 304, 8, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[193000, 4599, 1463, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[194466, 4632, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 198687, 4782},
 {"RotateAndZoomIn3D", 198797, 4785},
 {"DragLocators", 198908, 4788},
 {"CreateAndDeleteLocators", 199025, 4791},
 {"SliderZoom", 199140, 4794},
 {"GamepadControls", 199247, 4797},
 {"AutomaticAnimation", 199361, 4800},
 {"BookmarkAnimation", 199479, 4803}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 54, 0, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[646, 26, 33, 0, 266, "InitializationSection"],
Cell[682, 28, 75341, 2312, 2148, "Input",
 InitializationCell->True,
 CellID->734210257]
}, Closed]],
Cell[CellGroupData[{
Cell[76060, 2345, 29, 0, 188, "ManipulateSection"],
Cell[CellGroupData[{
Cell[76114, 2349, 10207, 259, 688, "Input"],
Cell[86324, 2610, 21208, 372, 665, "Output",
 CellID->159208556]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107578, 2988, 36, 0, 166, "ManipulateCaptionSection"],
Cell[107617, 2990, 159, 4, 22, "ManipulateCaption",
 CellID->278475071],
Cell[107779, 2996, 401, 7, 52, "ManipulateCaption",
 CellID->93560552],
Cell[108183, 3005, 160, 4, 22, "ManipulateCaption",
 CellID->156987479]
}, Open  ]],
Cell[CellGroupData[{
Cell[108380, 3014, 28, 0, 168, "ThumbnailSection"],
Cell[108411, 3016, 21208, 372, 665, "Output",
 CellID->415332532]
}, Open  ]],
Cell[CellGroupData[{
Cell[129656, 3393, 28, 0, 138, "SnapshotsSection"],
Cell[129687, 3395, 19026, 344, 37, "Output",
 CellID->14391521],
Cell[148716, 3741, 19813, 354, 37, "Output",
 CellID->609607520],
Cell[168532, 4097, 20036, 355, 37, "Output",
 CellID->64478611]
}, Open  ]],
Cell[CellGroupData[{
Cell[188605, 4457, 26, 0, 332, "DetailsSection"],
Cell[188634, 4459, 54, 1, 22, "DetailNotes",
 CellID->570455503],
Cell[188691, 4462, 244, 7, 37, "DetailNotes",
 CellID->32074987],
Cell[188938, 4471, 377, 11, 37, "DetailNotes",
 CellID->3967472],
Cell[189318, 4484, 200, 6, 22, "DetailNotes",
 CellID->598494391],
Cell[189521, 4492, 269, 9, 22, "DetailNotes",
 CellID->1948600]
}, Open  ]],
Cell[CellGroupData[{
Cell[189827, 4506, 37, 0, 120, "ControlSuggestionsSection"],
Cell[189867, 4508, 312, 8, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[190182, 4518, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[190863, 4536, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[191206, 4549, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[191846, 4566, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[192693, 4589, 304, 8, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[193000, 4599, 1463, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[194466, 4632, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195411, 4658, 30, 0, 152, "SearchTermsSection"],
Cell[195444, 4660, 43, 1, 22, "SearchTerms",
 CellID->105654826],
Cell[195490, 4663, 54, 1, 22, "SearchTerms",
 CellID->7398318],
Cell[195547, 4666, 52, 1, 22, "SearchTerms",
 CellID->11654596],
Cell[195602, 4669, 48, 1, 22, "SearchTerms",
 CellID->424808396],
Cell[195653, 4672, 57, 1, 22, "SearchTerms",
 CellID->845222335],
Cell[195713, 4675, 55, 1, 22, "SearchTerms",
 CellID->159998440],
Cell[195771, 4678, 55, 1, 22, "SearchTerms",
 CellID->507179973],
Cell[195829, 4681, 52, 1, 22, "SearchTerms",
 CellID->145264209],
Cell[195884, 4684, 59, 1, 22, "SearchTerms",
 CellID->300239931]
}, Open  ]],
Cell[CellGroupData[{
Cell[195980, 4690, 31, 0, 138, "RelatedLinksSection"],
Cell[196014, 4692, 284, 7, 22, "RelatedLinks",
 CellID->28904428],
Cell[196301, 4701, 249, 6, 22, "RelatedLinks",
 CellID->357236803],
Cell[196553, 4709, 251, 6, 22, "RelatedLinks",
 CellID->22269600],
Cell[196807, 4717, 272, 6, 22, "RelatedLinks",
 CellID->61015509],
Cell[197082, 4725, 248, 6, 22, "RelatedLinks",
 CellID->131405001],
Cell[197333, 4733, 236, 5, 22, "RelatedLinks",
 CellID->265283802]
}, Open  ]],
Cell[CellGroupData[{
Cell[197606, 4743, 25, 0, 136, "AuthorSection"],
Cell[197634, 4745, 316, 10, 22, "Author",
 CellID->617421218],
Cell[197953, 4757, 332, 10, 22, "Author",
 CellID->358038734]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
