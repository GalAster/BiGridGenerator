(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    434076,       8244]
NotebookOptionsPosition[    429108,       8094]
NotebookOutlinePosition[    430727,       8144]
CellTagsIndexPosition[    430391,       8132]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Catacaustics Generated by a Point Source", "DemoTitle",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459006860962905*^9, 3.459006875184713*^9}, {
   3.4591767710667458`*^9, 3.459176788542665*^9}, {3.459249756992455*^9, 
   3.4592497574403477`*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "mirrorPlot", ",", "angleData", ",", "tdom"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"mirror", "/.", "$causticDB"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tdom", "=", 
       RowBox[{"\"\<MirrorPlotDomain\>\"", "/.", "data"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"px", "=", 
           RowBox[{"\"\<Xt\>\"", "/.", "data"}]}], ",", 
          RowBox[{"py", "=", 
           RowBox[{"\"\<Yt\>\"", "/.", "data"}]}], ",", 
          RowBox[{"t1", "=", 
           RowBox[{
           "tdom", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"t2", "=", 
           RowBox[{
           "tdom", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"r", "=", 
           RowBox[{
            RowBox[{
            "pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"1.", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "11"}]]}]}]}], ",", 
          RowBox[{"s", "=", 
           RowBox[{
           "pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"nlines", "=", 
           RowBox[{"ControlActive", "[", 
            RowBox[{"10", ",", "nlines"}], "]"}]}], ",", 
          RowBox[{"plotRange", "=", 
           RowBox[{"\"\<PlotRange\>\"", "/.", "data"}]}]}], "}"}], ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sol", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "\[Rule]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["s", "2"]}], "-", 
                    RowBox[{"r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    RowBox[{"4", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "-", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "-", 
                    RowBox[{"3", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"px", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "r"}], "-", 
                    RowBox[{"4", " ", 
                    RowBox[{"px", "[", "t", "]"}]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"px", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ",", 
              RowBox[{"y", "\[Rule]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"3", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "s"}], "-", 
                    RowBox[{"4", " ", 
                    RowBox[{"py", "[", "t", "]"}]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"py", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "-", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"4", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"py", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"px", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["px", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["px", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", 
                    RowBox[{"py", "[", "t", "]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", 
                    SuperscriptBox["s", "2"], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{"px", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"px", "[", "t", "]"}], "2"], "-", 
                    RowBox[{"2", " ", "s", " ", 
                    RowBox[{"py", "[", "t", "]"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"py", "[", "t", "]"}], "2"]}], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["py", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mirrorPlot", ",", 
              RowBox[{"{", "angleData", "}"}]}], "}"}], "=", 
            RowBox[{"Reap", "[", 
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"px", "[", "t", "]"}], ",", 
                  RowBox[{"py", "[", "t", "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", 
                  RowBox[{
                   RowBox[{"ColorData", "[", "1", "]"}], "[", "2", "]"}]}], 
                 "}"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"Automatic", ",", "100"}], "]"}]}], ",", 
               RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
                RowBox[{"Sow", "[", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", 
                   RowBox[{"ArcTan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"px", "[", "t", "]"}], "-", "r"}], ",", 
                    RowBox[{
                    RowBox[{"py", "[", "t", "]"}], "-", "s"}]}], "]"}]}], 
                  "}"}], "]"}]}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"angleData", "=", 
            RowBox[{"Sort", "[", "angleData", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ints", "=", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nlines", "\[GreaterEqual]", "50"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Flatten", "@", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Tau]1", "=", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\[Tau]2", "=", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\[Theta]1", "=", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]2", "=", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    "\[Pi]"}]}], "]"}]}], ",", 
                    RowBox[{"\[Theta]0", "=", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"\[Theta]1", ",", 
                    FractionBox["\[Pi]", "nlines"]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]0", "<", "\[Theta]2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"t", "/.", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", "=", "\[Theta]"}], "}"}], ",", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"py", "[", "t", "]"}], "-", "s"}], ")"}]}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"px", "[", "t", "]"}], "-", "r"}], ")"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"\[Tau]1", "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Theta]", "-", "\[Theta]1"}], 
                    RowBox[{"\[Theta]2", "-", "\[Theta]1"}]], 
                    RowBox[{"(", 
                    RowBox[{"\[Tau]2", "-", "\[Tau]1"}], ")"}]}]}], ",", "t1",
                     ",", "t2"}], "}"}]}], "]"}]}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\[Theta]", ",", "\[Theta]0", ",", "\[Theta]2", ",", 
                    FractionBox["\[Pi]", "nlines"]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]0", "==", "\[Theta]2"}], ",", 
                    RowBox[{"{", "\[Tau]2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
                    "&"}], "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "\[Pi]"}]}], "]"}], "<", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "\[Pi]"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "x"}], "}"}]}], "]"}]}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Most", "[", "angleData", "]"}], ",", 
                   RowBox[{"Rest", "[", "angleData", "]"}]}], "}"}]}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Flatten", "@", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Tau]1", "=", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\[Tau]2", "=", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"\[Theta]1", "=", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    "\[Pi]"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]2", "=", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    "\[Pi]"}]}], "]"}]}], ",", 
                    RowBox[{"\[Theta]0", "=", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"\[Theta]1", ",", 
                    FractionBox["\[Pi]", "nlines"]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]0", "<", "\[Theta]2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]1", "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Theta]", "-", "\[Theta]1"}], 
                    RowBox[{"\[Theta]2", "-", "\[Theta]1"}]], 
                    RowBox[{"(", 
                    RowBox[{"\[Tau]2", "-", "\[Tau]1"}], ")"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\[Theta]", ",", "\[Theta]0", ",", "\[Theta]2", ",", 
                    FractionBox["\[Pi]", "nlines"]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]0", "==", "\[Theta]2"}], ",", 
                    RowBox[{"{", "\[Tau]2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
                    "&"}], "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "\[Pi]"}]}], "]"}], "<", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "\[Pi]"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "x"}], "}"}]}], "]"}]}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Most", "[", "angleData", "]"}], ",", 
                   RowBox[{"Rest", "[", "angleData", "]"}]}], "}"}]}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", 
                 RowBox[{"4.", "/", 
                  RowBox[{"(", 
                   RowBox[{"20", "+", 
                    RowBox[{"0.13", "nlines"}]}], ")"}]}], "]"}], ",", 
                RowBox[{"ControlActive", "[", 
                 RowBox[{"Yellow", ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Yellow", ",", "0.3"}], "]"}]}], "]"}], ",", 
                RowBox[{"Line", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pt", "-", 
                    RowBox[{"25", "#"}]}], ",", 
                    RowBox[{"pt", "+", 
                    RowBox[{"25", "#"}]}]}], "}"}], "&"}], "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", 
                    RowBox[{"\[Pi]", "-", 
                    FractionBox["\[Pi]", "nlines"]}], ",", 
                    FractionBox["\[Pi]", "nlines"]}], "}"}]}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Opacity", "[", "0.2", "]"}], ",", "White", ",", 
                RowBox[{"Line", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", 
                    RowBox[{"px", "[", "tt", "]"}]}], ",", 
                    RowBox[{"y0", "=", 
                    RowBox[{"py", "[", "tt", "]"}]}], ",", 
                    RowBox[{"dx0", "=", 
                    RowBox[{
                    RowBox[{"px", "'"}], "[", "tt", "]"}]}], ",", 
                    RowBox[{"dy0", "=", 
                    RowBox[{
                    RowBox[{"py", "'"}], "[", "tt", "]"}]}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]x", "=", 
                    RowBox[{
                    RowBox[{"-", "r"}], "+", "x0"}]}], ",", 
                    RowBox[{"\[CapitalDelta]y", "=", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", "y0"}]}], ",", 
                    RowBox[{"dx2", "=", 
                    SuperscriptBox["dx0", "2"]}], ",", 
                    RowBox[{"dy2", "=", 
                    SuperscriptBox["dy0", "2"]}]}], "}"}], ",", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"Abs", "[", "x0", "]"}], "+", 
                    RowBox[{"Abs", "[", "y0", "]"}]}], ")"}], "#"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"Abs", "[", "x0", "]"}], "+", 
                    RowBox[{"Abs", "[", "y0", "]"}]}], ")"}], "#"}]}]}], 
                    "}"}], "&"}], "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dy2", " ", "\[CapitalDelta]x"}], "-", 
                    RowBox[{"dx2", " ", "\[CapitalDelta]x"}], "-", 
                    RowBox[{
                    "2", " ", "dx0", " ", "dy0", " ", "\[CapitalDelta]y"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"dx2", "+", "dy2"}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[CapitalDelta]x", "2"], "+", 
                    SuperscriptBox["\[CapitalDelta]y", "2"]}], ")"}]}], 
                    ")"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dx2", " ", "\[CapitalDelta]y"}], "-", 
                    RowBox[{"dy2", " ", "\[CapitalDelta]y"}], "-", 
                    RowBox[{
                    "2", " ", "dx0", " ", "dy0", " ", "\[CapitalDelta]x"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"dx2", "+", "dy2"}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[CapitalDelta]x", "2"], "+", 
                    SuperscriptBox["\[CapitalDelta]y", "2"]}], ")"}]}], 
                    ")"}]}], ")"}]}]}], "}"}]}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tt", ",", "ints"}], "}"}]}], "]"}]}], ",", 
                "\[IndentingNewLine]", "Yellow", ",", 
                RowBox[{"Opacity", "[", "1", "]"}], ",", 
                RowBox[{"Tooltip", "[", 
                 RowBox[{
                  RowBox[{"Disk", "[", 
                   RowBox[{"pt", ",", 
                    RowBox[{
                    RowBox[{"-", "0.005"}], 
                    RowBox[{"Subtract", "@@", 
                    RowBox[{
                    "plotRange", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", "pt"}], 
                 "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             "mirrorPlot", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"ControlActive", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ParametricPlot", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "/.", "sol"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"White", ",", 
                    RowBox[{"Thickness", "[", "Medium", "]"}]}], "}"}]}], ",", 
                   RowBox[{"PlotPoints", "\[Rule]", "24"}], ",", 
                   RowBox[{"MaxRecursion", "\[Rule]", "1"}], ",", 
                   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
                  "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"ParametricPlot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "/.", "sol"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"White", ",", 
                    RowBox[{"Thickness", "[", "Medium", "]"}]}], "}"}]}], ",", 
                   RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"plotRange", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[LessEqual]", "x", "\[LessEqual]", 
                    RowBox[{"plotRange", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"plotRange", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[LessEqual]", "y", "\[LessEqual]", 
                    RowBox[{"plotRange", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], "@", 
              RowBox[{"(", 
               RowBox[{"\"\<CausticDomain\>\"", "/.", "data"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"450", ",", "450"}], "}"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
             RowBox[{"PlotRangePadding", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Scaled", "[", "0.02", "]"}], ";", "0"}], ")"}]}], 
             ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"Background", "\[Rule]", "Black"}]}], 
            "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mirror", ",", "\"\<cardioid\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<circle\>\"", ",", "\"\<ellipse\>\"", ",", "\"\<parabola\>\"", ",", 
       "\"\<poly\>\"", ",", "\"\<sine\>\"", ",", "\"\<cardioid\>\"", ",", 
       "\"\<deltoid\>\"", ",", "\"\<cissoid\>\"", ",", "\"\<spiral\>\"", ",", 
       "\"\<node\>\""}], "}"}], ",", "SetterBar"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nlines", ",", "100", ",", "\"\<rays\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", 
        RowBox[{"2", "#"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "20", ",", "50", ",", "100", ",", "200", ",", "500", ",", 
        "1000", ",", "2000"}], "}"}]}], ",", "SetterBar"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"{", 
        RowBox[{"1.2", ",", "0"}], "}"}]}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"ints", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{"mirror", ",", "nlines", ",", "pt"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Bookmarks", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<circle \[Rule] cardioid\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<circle\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"17.", 
              RowBox[{"\[Pi]", "/", "200"}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"17.", 
               RowBox[{"\[Pi]", "/", "200"}]}], "]"}]}]}], "}"}]}]}], ")"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<ellipse \[Rule] embryonic\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<ellipse\>\""}], ";", 
         RowBox[{"nlines", "=", "1000"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"2.175", ",", "1.448"}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<ellipse \[Rule] no. 2\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<ellipse\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.63"}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<parabola \[Rule] parabolic fog\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<parabola\>\""}], ";", 
         RowBox[{"nlines", "=", "200"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.225", ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<parabola \[Rule] node\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<parabola\>\""}], ";", 
         RowBox[{"nlines", "=", "1000"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.25", ",", 
            RowBox[{"-", "20."}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<polynomial \[Rule] no. 1\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<poly\>\""}], ";", 
         RowBox[{"nlines", "=", "1000"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"1.33", ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<polynomial \[Rule] no. 2\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<poly\>\""}], ";", 
         RowBox[{"nlines", "=", "200"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.271", ",", 
            RowBox[{"-", "0.068"}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<sine \[Rule] no. 1\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<sine\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.135"}], ",", 
            RowBox[{"-", "0.54"}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<sine \[Rule] no. 2\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<sine\>\""}], ";", 
         RowBox[{"nlines", "=", "500"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2."}], ",", "0.98758"}], "}"}]}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<cardioid \[Rule] nephroid\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<cardioid\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<cardioid \[Rule] no. 2\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<cardioid\>\""}], ";", 
         RowBox[{"nlines", "=", "200"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.0708", ",", 
            RowBox[{"-", "0.933"}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<deltoid \[Rule] deltoid comet\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<deltoid\>\""}], ";", 
         RowBox[{"nlines", "=", "1000"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"1.92", ",", "0.205"}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<deltoid \[Rule] psuedo-astroid\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<deltoid\>\""}], ";", 
         RowBox[{"nlines", "=", "1000"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"15.", ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<deltoid \[Rule] supersonic\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<deltoid\>\""}], ";", 
         RowBox[{"nlines", "=", "500"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.935"}], ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<cissoid \[Rule] cardioid\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<cissoid\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", 
            RowBox[{"-", "4."}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<cissoid \[Rule] mountain range\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<cissoid\>\""}], ";", 
         RowBox[{"nlines", "=", "500"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.5615", ",", 
            RowBox[{"-", "1.072"}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<spiral \[Rule] spiral\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<spiral\>\""}], ";", 
         RowBox[{"nlines", "=", "200"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0."}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<spiral \[Rule] cuspy spiral\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<spiral\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{"0.21", ",", 
            RowBox[{"-", "0.54"}]}], "}"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<node \[Rule] cusp\>\"", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mirror", "=", "\"\<node\>\""}], ";", 
         RowBox[{"nlines", "=", "100"}], ";", 
         RowBox[{"pt", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], "/", "3."}], ",", "0."}], "}"}]}]}], 
        ")"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$causticDB", "=", 
       RowBox[{"Reverse", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "#", "]"}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", "#", "]"}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "-", "0.000001"}]}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "3.2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2.3"}], ",", "2.3"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<circle\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.5", "+", 
                 RowBox[{"1.2", 
                  RowBox[{"Cos", "[", "#", "]"}]}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.8", 
                 RowBox[{"Sin", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "-", "0.000001"}]}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "}"}], 
           "\[Rule]", "\"\<ellipse\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["#", "2"], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"#", "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2.85"}], ",", "2.85"}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.8"}], ",", "3.8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2.8"}], ",", "2.8"}], "}"}]}], "}"}]}]}], "}"}
            ], "\[Rule]", "\"\<parabola\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"#", "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["#", "5"], "-", 
                 SuperscriptBox["#", "3"]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.8"}], ",", "1.5"}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.8"}], ",", "1.5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.75"}], ",", "1.55"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<poly\>\""}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"#", "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", "#", "]"}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], "-", "0.25"}], ",", 
                RowBox[{"\[Pi]", "+", "0.25"}]}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "3.2"}], ",", "3.2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "3.2"}], ",", "3.2"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<sine\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
                 RowBox[{"Cos", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
                 RowBox[{"Sin", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "-", "0.000001"}]}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.5"}], ",", "3.5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<cardioid\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "#", "]"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "#"}], "]"}], "/", "2"}]}], "&"}], ")"}]}], 
             ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", "#", "]"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", "#"}], "]"}], "/", "2"}]}], "&"}], ")"}]}], 
             ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", 
                RowBox[{"\[Pi]", "-", "0.000001"}]}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2.75"}], ",", "4.75"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "3.75"}], ",", "3.75"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<deltoid\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "#", "]"}], "3"], 
                 RowBox[{"1", "+", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", "#", "]"}], "2"]}]], "&"}], ")"}]}], 
             ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"Tan", "[", "#", "]"}], "2"], 
                  RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "#", "]"}], "2"]}]]}], "&"}], ")"}]}],
              ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.57"}], ",", "1.57"}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.5702"}], ",", "1.5702"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4."}], ",", "4."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4.5"}], ",", "3.5"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<cissoid\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"0.25", "#"}]]}], 
                 RowBox[{"Cos", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"0.25", "#"}]]}], 
                 RowBox[{"Sin", "[", "#", "]"}]}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "15"}], ",", "12.75"}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "15"}], ",", "12.5"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4."}], ",", "4."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4.5"}], ",", "3.5"}], "}"}]}], "}"}]}]}], 
            "}"}], "\[Rule]", "\"\<spiral\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Xt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["#", "2"], "-", "3"}], "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Yt\>\"", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["#", "2"], "-", "3"}], ")"}], "/", "3"}]}],
                 "&"}], ")"}]}], ",", 
             RowBox[{"\"\<MirrorPlotDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "5.5"}], ",", "5.5"}], "}"}]}], ",", 
             RowBox[{"\"\<CausticDomain\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3.2"}], ",", "3.2"}], "}"}]}], ",", 
             RowBox[{"\"\<PlotRange\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4.5"}], ",", "3.5"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "}"}], 
           "\[Rule]", "\"\<node\>\""}]}], "\[IndentingNewLine]", "}"}]}]}], 
      ";"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.458994449479124*^9, 3.458994794075198*^9}, {
   3.4589948246731043`*^9, 3.4589948319273167`*^9}, {3.458994896165846*^9, 
   3.458994905424336*^9}, {3.458994994976042*^9, 3.458995045264229*^9}, {
   3.4589950787847757`*^9, 3.4589950803830357`*^9}, {3.4589951321682053`*^9, 
   3.458995163207899*^9}, {3.458995223253574*^9, 3.458995259868599*^9}, {
   3.4589953242675753`*^9, 3.4589953884597054`*^9}, {3.458995426090972*^9, 
   3.458995503099245*^9}, {3.458995551956107*^9, 3.458995678202858*^9}, {
   3.4589957645711927`*^9, 3.458995787632269*^9}, {3.4589958185171013`*^9, 
   3.4589959434304943`*^9}, {3.458995986527405*^9, 3.458996071446776*^9}, {
   3.4589961798129063`*^9, 3.458996186852623*^9}, {3.458996228650422*^9, 
   3.4589963012369013`*^9}, {3.45899634608245*^9, 3.458996485470087*^9}, {
   3.4589965383988867`*^9, 3.458996616998208*^9}, {3.458996653202201*^9, 
   3.458996735725541*^9}, {3.458996787888998*^9, 3.4589969041642313`*^9}, {
   3.4589969919866123`*^9, 3.458997009501464*^9}, {3.458997521583399*^9, 
   3.4589975381907387`*^9}, 3.458997598089423*^9, {3.459000346061981*^9, 
   3.4590003567275867`*^9}, {3.45900039381828*^9, 3.459000415703981*^9}, {
   3.459000540186832*^9, 3.459000542537673*^9}, {3.4590005985945797`*^9, 
   3.459000600086557*^9}, {3.4590006838079567`*^9, 3.459000684793058*^9}, {
   3.459000827300582*^9, 3.45900086002264*^9}, {3.459000975007724*^9, 
   3.459001013648863*^9}, 3.459001045793737*^9, 3.459001197239902*^9, {
   3.459001239117688*^9, 3.4590012543328876`*^9}, {3.459001287161388*^9, 
   3.4590012913216047`*^9}, 3.459001326960387*^9, {3.459001402943171*^9, 
   3.45900142845479*^9}, {3.4590014592295313`*^9, 3.459001463152224*^9}, 
   3.459001549150056*^9, {3.4590015823718157`*^9, 3.459001605661229*^9}, {
   3.4590016725846167`*^9, 3.459001695387623*^9}, {3.459002529814288*^9, 
   3.459002533100075*^9}, {3.459002567616362*^9, 3.459002598991379*^9}, {
   3.459002636157577*^9, 3.4590026652387657`*^9}, {3.459002707931344*^9, 
   3.459002717935343*^9}, {3.4590027526391697`*^9, 3.459002839704915*^9}, 
   3.459002872410946*^9, {3.4590029115775337`*^9, 3.4590029996857433`*^9}, 
   3.459003041429387*^9, {3.459003105423758*^9, 3.459003131258456*^9}, {
   3.459003207074737*^9, 3.459003233644886*^9}, {3.4590033293914948`*^9, 
   3.459003330633615*^9}, {3.459003385005748*^9, 3.459003403389657*^9}, {
   3.459003473091055*^9, 3.459003490306163*^9}, {3.459003559824894*^9, 
   3.4590035651874437`*^9}, {3.4590036009470787`*^9, 
   3.4590036028812017`*^9}, {3.459003646361521*^9, 3.459003749527925*^9}, {
   3.459003809400169*^9, 3.459003813405138*^9}, {3.4590039212320023`*^9, 
   3.459003928687769*^9}, {3.459004003173628*^9, 3.459004079960226*^9}, {
   3.459004141185944*^9, 3.459004152797262*^9}, {3.4590042209609947`*^9, 
   3.459004255437496*^9}, {3.4590043365928993`*^9, 3.4590043454836693`*^9}, {
   3.459004500084611*^9, 3.459004521401557*^9}, {3.45900462129347*^9, 
   3.459004659136698*^9}, {3.4590047057139893`*^9, 3.459004708850762*^9}, {
   3.459004758700569*^9, 3.459004770283259*^9}, {3.4590048120331297`*^9, 
   3.4590048205329447`*^9}, {3.45900485974743*^9, 3.45900486596288*^9}, {
   3.4590049119701853`*^9, 3.4590049400014887`*^9}, {3.459004999323846*^9, 
   3.459005132839884*^9}, {3.459005173944532*^9, 3.4590052914264927`*^9}, {
   3.459005324904429*^9, 3.459005335326322*^9}, {3.459005379170519*^9, 
   3.459005406437745*^9}, {3.459005440970111*^9, 3.459005474955081*^9}, {
   3.459005507866721*^9, 3.459005532339003*^9}, {3.459005579327997*^9, 
   3.459005581695126*^9}, {3.459005621807727*^9, 3.459005670766541*^9}, {
   3.459005724433599*^9, 3.459005743061277*^9}, {3.4590057916450157`*^9, 
   3.459005897409704*^9}, {3.459005938909252*^9, 3.459006048083377*^9}, {
   3.459006080733021*^9, 3.459006202535322*^9}, {3.459006255895458*^9, 
   3.459006265267789*^9}, {3.4590063177542753`*^9, 3.459006339557976*^9}, {
   3.4590067776838293`*^9, 3.459006788035828*^9}, {3.459008437102247*^9, 
   3.45900844990744*^9}, 3.459008519268961*^9, {3.4590088154429502`*^9, 
   3.459008820082015*^9}, 3.459008867156801*^9, 3.4590089526712627`*^9, {
   3.459009056647524*^9, 3.4590090821696243`*^9}, 3.459009222170226*^9, {
   3.459026579988323*^9, 3.4590266286114817`*^9}, {3.4590266634778147`*^9, 
   3.4590266920780697`*^9}, {3.459026740664921*^9, 3.459026945519232*^9}, {
   3.459026996006062*^9, 3.4590271277495193`*^9}, {3.4590272064517612`*^9, 
   3.459027245632402*^9}, {3.459027303486668*^9, 3.459027304380661*^9}, {
   3.459027398080956*^9, 3.45902741116088*^9}, {3.459027460034808*^9, 
   3.459027495648299*^9}, {3.459027619329644*^9, 3.459027642292303*^9}, {
   3.4590278693268633`*^9, 3.459027870671043*^9}, {3.459027939816696*^9, 
   3.459027945574925*^9}, {3.459028128627885*^9, 3.459028223856207*^9}, {
   3.4590283223616657`*^9, 3.459028354804901*^9}, 3.459061744957177*^9, {
   3.459061779123711*^9, 3.45906183812906*^9}, {3.4590619275448513`*^9, 
   3.4590619317249327`*^9}, {3.459062024975115*^9, 3.4590620811572847`*^9}, {
   3.459062111625532*^9, 3.459062190608869*^9}, {3.459062270621228*^9, 
   3.459062288572233*^9}, {3.4590623818375807`*^9, 3.459062382148312*^9}, {
   3.4590626926097717`*^9, 3.459062694902194*^9}, {3.459063265380377*^9, 
   3.4590632892548513`*^9}, {3.459063347622555*^9, 3.459063445522833*^9}, {
   3.459063511616304*^9, 3.459063520117002*^9}, {3.459063697863455*^9, 
   3.45906373007041*^9}, {3.459063760519105*^9, 3.459063760782124*^9}, {
   3.459064029632464*^9, 3.459064035838266*^9}, {3.4590640959310017`*^9, 
   3.459064104268035*^9}, {3.4590641375538816`*^9, 3.4590641717039223`*^9}, {
   3.459064287683906*^9, 3.459064294667899*^9}, {3.459064377502777*^9, 
   3.4590643833030777`*^9}, {3.459064455001605*^9, 3.459064520772793*^9}, {
   3.4590645770558453`*^9, 3.459064608143661*^9}, {3.459064792394335*^9, 
   3.4590648209222517`*^9}, {3.459064896817107*^9, 3.459064898160355*^9}, 
   3.4590650436710587`*^9, {3.459065110079995*^9, 3.4590651109907713`*^9}, 
   3.459065196147972*^9, {3.459065245865718*^9, 3.459065249101079*^9}, {
   3.459065293622341*^9, 3.459065300606536*^9}, {3.459065335060018*^9, 
   3.459065335573168*^9}, {3.4590654129035378`*^9, 3.459065435347024*^9}, {
   3.459065478203513*^9, 3.459065513169976*^9}, {3.459065613161646*^9, 
   3.459065758865271*^9}, {3.459065872973535*^9, 3.4590658766530437`*^9}, {
   3.459080773136709*^9, 3.459080839693832*^9}, {3.459080973092751*^9, 
   3.4590809860945263`*^9}, {3.4590810558579683`*^9, 
   3.4590810603940477`*^9}, {3.459081135827777*^9, 3.459081149305244*^9}, {
   3.4590812160533133`*^9, 3.4590812179155617`*^9}, {3.4590812592940598`*^9, 
   3.459081313016945*^9}, {3.459081390452327*^9, 3.459081420473083*^9}, 
   3.459081675889647*^9, 3.459081802429255*^9, 3.459082482873309*^9, {
   3.4590883141693172`*^9, 3.4590883697498713`*^9}, {3.459088418113161*^9, 
   3.459088443655828*^9}, {3.459088492969488*^9, 3.4590884998620453`*^9}, 
   3.459088540992775*^9, {3.4590956531247*^9, 3.459095662622408*^9}, 
   3.459095715953648*^9, {3.459095793854433*^9, 3.4590958043281517`*^9}, {
   3.459095895538274*^9, 3.459095896200083*^9}, {3.459096088783061*^9, 
   3.4590960919097157`*^9}, {3.4590961831254396`*^9, 
   3.4590961843347797`*^9}, {3.459096308459343*^9, 3.459096398044632*^9}, {
   3.4590964419044657`*^9, 3.459096442277628*^9}, {3.459097295594884*^9, 
   3.4590972956961803`*^9}, {3.459097351075839*^9, 3.459097351215117*^9}, {
   3.459097701709324*^9, 3.4590977140121527`*^9}, {3.459097907394706*^9, 
   3.459097937483556*^9}, {3.459098185978963*^9, 3.4590982334304447`*^9}, {
   3.45909859035751*^9, 3.459098590697198*^9}, {3.459098670523355*^9, 
   3.4590986911396437`*^9}, {3.4590987359357643`*^9, 3.45909876356684*^9}, {
   3.45909890015344*^9, 3.459098908026184*^9}, {3.459099103849389*^9, 
   3.459099170754446*^9}, {3.4590992318295317`*^9, 3.45909923426353*^9}, {
   3.459099274497007*^9, 3.459099284752338*^9}, {3.459099388316875*^9, 
   3.459099391176565*^9}, {3.459099489919869*^9, 3.459099535133745*^9}, 
   3.45910585389034*^9, {3.4591059122757597`*^9, 3.459105930204842*^9}, 
   3.459106237682456*^9, 3.459106719614666*^9, {3.4591067512236557`*^9, 
   3.459106753367876*^9}, {3.459106935013814*^9, 3.459106942513891*^9}, {
   3.459107798094914*^9, 3.459107800279705*^9}, {3.459107889903578*^9, 
   3.459107911165473*^9}, {3.459111401506665*^9, 3.459111411576166*^9}, {
   3.459111526763741*^9, 3.459111529673113*^9}, 3.459111669519383*^9, {
   3.459112169783063*^9, 3.459112172120104*^9}, {3.459112290770121*^9, 
   3.459112291970738*^9}, {3.4591137609977903`*^9, 3.459113821419215*^9}, {
   3.459113956899221*^9, 3.4591139597448883`*^9}, {3.459114016428557*^9, 
   3.4591140224585323`*^9}, {3.459114111521624*^9, 3.459114116136477*^9}, 
   3.45911419298895*^9, {3.4591143135337257`*^9, 3.4591143252443933`*^9}, {
   3.459114482820361*^9, 3.459114489193872*^9}, {3.459114533635026*^9, 
   3.459114535089205*^9}, 3.459148273466386*^9, {3.459148672243885*^9, 
   3.45914882171455*^9}, {3.4591488888441133`*^9, 3.459148892928095*^9}, {
   3.459149120693903*^9, 3.459149128652781*^9}, 3.459150255372654*^9, {
   3.459150500132682*^9, 3.459150501548173*^9}, {3.4591514408581133`*^9, 
   3.459151444612266*^9}, 3.459153295624197*^9, {3.459153349303877*^9, 
   3.459153350937923*^9}, {3.4591533868905897`*^9, 3.4591534207231693`*^9}, {
   3.4591534535937433`*^9, 3.459153464194417*^9}, {3.459153939893807*^9, 
   3.4591539857152033`*^9}, {3.459154304916407*^9, 3.459154317992552*^9}, {
   3.459156339267622*^9, 3.459156339386142*^9}, {3.45915640791648*^9, 
   3.4591564080355387`*^9}, 3.459156485533044*^9, {3.4591565449324503`*^9, 
   3.459156546122188*^9}, 3.4591567285966387`*^9, {3.459156799798972*^9, 
   3.4591568003417063`*^9}, {3.459156851051743*^9, 3.4591568783711452`*^9}, {
   3.459157051890333*^9, 3.459157068035275*^9}, {3.459157313912817*^9, 
   3.4591573562407227`*^9}, {3.459157431802285*^9, 3.459157549102421*^9}, {
   3.459157599278729*^9, 3.4591576114561996`*^9}, {3.459157650723033*^9, 
   3.459157672420616*^9}, {3.459157704754209*^9, 3.459157712514394*^9}, {
   3.4591577456140757`*^9, 3.459157752107975*^9}, {3.459157797978951*^9, 
   3.4591578029842157`*^9}, {3.4591578540115643`*^9, 3.459157869982854*^9}, {
   3.459157974825183*^9, 3.459157998802956*^9}, {3.459159174375659*^9, 
   3.459159179853153*^9}, {3.459159272710832*^9, 3.459159428716268*^9}, {
   3.459162064364534*^9, 3.459162068507305*^9}, {3.459162263777102*^9, 
   3.459162278618787*^9}, 3.4591624549045753`*^9, {3.459162580253911*^9, 
   3.459162596578731*^9}, 3.459163064241851*^9, 3.459163144100869*^9, {
   3.459163260061771*^9, 3.4591632602240143`*^9}, 3.459163552363175*^9, 
   3.459163630726693*^9, {3.4591640220169497`*^9, 3.459164025280223*^9}, 
   3.459164180557619*^9, {3.459164317352386*^9, 3.459164372940516*^9}, {
   3.4591644313304367`*^9, 3.459164440677116*^9}, {3.4591645530032263`*^9, 
   3.4591645592935343`*^9}, {3.45916468820967*^9, 3.459164700487382*^9}, {
   3.459164734415965*^9, 3.459164738297106*^9}, 3.4591647976976357`*^9, {
   3.459164848169011*^9, 3.459164925356904*^9}, {3.459165040168017*^9, 
   3.4591650422912903`*^9}, 3.4591655228287354`*^9, {3.459165653213168*^9, 
   3.459165653317534*^9}, {3.459166076152763*^9, 3.459166077814188*^9}, 
   3.4591663291280403`*^9, 3.459166401622892*^9, {3.4591664673382063`*^9, 
   3.459166469362287*^9}, {3.4591665796108932`*^9, 3.459166590616407*^9}, 
   3.459166657628936*^9, {3.459168232284243*^9, 3.459168232342719*^9}, {
   3.45916862133962*^9, 3.459168764254158*^9}, {3.459168797512286*^9, 
   3.459168800350341*^9}, {3.459168851005793*^9, 3.459168851068493*^9}, {
   3.459170143823902*^9, 3.459170180128572*^9}, {3.459171306321239*^9, 
   3.459171310683056*^9}, {3.4591748811740522`*^9, 3.459175096964314*^9}, {
   3.4591753587403193`*^9, 3.459175416320015*^9}, {3.459175949770008*^9, 
   3.4591759716152477`*^9}, {3.459176085495335*^9, 3.459176085555538*^9}, {
   3.459176123486245*^9, 3.459176138207653*^9}, {3.4591762807496853`*^9, 
   3.4591762839885397`*^9}, {3.459176371708029*^9, 3.459176373866259*^9}, 
   3.459176561734165*^9, {3.4591766145661497`*^9, 3.45917661518828*^9}, {
   3.459177107971336*^9, 3.4591771094821787`*^9}, {3.459177511484022*^9, 
   3.4591775121864777`*^9}, {3.459181810024434*^9, 3.459181895331943*^9}, {
   3.459181929882477*^9, 3.459181929954535*^9}, {3.459181969813223*^9, 
   3.459182006245582*^9}, {3.459182056270108*^9, 3.4591820595039263`*^9}, {
   3.459182109492153*^9, 3.4591821208632107`*^9}, {3.459182156885847*^9, 
   3.4591821923727007`*^9}, {3.4591832867837877`*^9, 3.459183310558353*^9}, {
   3.459183353901985*^9, 3.4591833612440987`*^9}, {3.459183407659512*^9, 
   3.459183420545425*^9}, {3.459183605289566*^9, 3.45918360771959*^9}, {
   3.459201754291605*^9, 3.45920183954812*^9}, 3.4592019418432293`*^9, {
   3.459237523867041*^9, 3.459237560683107*^9}, {3.459237622174293*^9, 
   3.459237639140114*^9}, {3.459237669921226*^9, 3.459237786259308*^9}, {
   3.459237956532453*^9, 3.459237972853622*^9}, {3.459238011316901*^9, 
   3.45923808999533*^9}, {3.459238132409554*^9, 3.459238151847932*^9}, {
   3.459238219264875*^9, 3.459238279482911*^9}, {3.459238338717906*^9, 
   3.459238343121434*^9}, {3.4592384281022873`*^9, 3.459238439076215*^9}, {
   3.4592385527960587`*^9, 3.459238597314045*^9}, {3.459238642366899*^9, 
   3.459238678533372*^9}, {3.4592387726779537`*^9, 3.459238880694195*^9}, {
   3.459245240243602*^9, 3.4592452826293163`*^9}, 3.459249876263886*^9, {
   3.459250161198616*^9, 3.459250225809064*^9}, {3.459250446677112*^9, 
   3.45925045772276*^9}, {3.4592505239938374`*^9, 3.459250527199716*^9}, {
   3.459250573295751*^9, 3.459250578472831*^9}, {3.459250705737513*^9, 
   3.459250714406931*^9}, {3.459250791631813*^9, 3.459250794895652*^9}, {
   3.459250845798525*^9, 3.4592508463495407`*^9}, 3.459251098363268*^9, {
   3.459251240317397*^9, 3.459251240669196*^9}, {3.459251406799912*^9, 
   3.4592514071693172`*^9}, {3.4592516042355633`*^9, 3.459251604900196*^9}, {
   3.459251687443926*^9, 3.459251731913862*^9}, {3.4592517672472887`*^9, 
   3.459251801890122*^9}, {3.459251862722732*^9, 3.459251876787918*^9}, {
   3.459251923839867*^9, 3.459251925539687*^9}, {3.459251991866*^9, 
   3.459252001064185*^9}, {3.459252060484435*^9, 3.4592520678004436`*^9}, {
   3.4592535858712873`*^9, 3.4592535865481443`*^9}, {3.45925368070973*^9, 
   3.4592536810010653`*^9}, {3.459253789871673*^9, 3.4592537900144157`*^9}, {
   3.459253854113371*^9, 3.459253857169929*^9}, {3.459253951434537*^9, 
   3.4592540007937717`*^9}, {3.459254037475485*^9, 3.459254048913183*^9}, {
   3.459254194629286*^9, 3.45925419476364*^9}, {3.4592542537900467`*^9, 
   3.459254253927742*^9}, {3.459254587055398*^9, 3.459254641123336*^9}, {
   3.459254705439316*^9, 3.459254727247704*^9}, {3.45925476301572*^9, 
   3.4592547710765047`*^9}, {3.4592548210212793`*^9, 
   3.4592548222665987`*^9}, {3.4592550906689053`*^9, 3.459255098420088*^9}, {
   3.459255174253223*^9, 3.459255193179761*^9}, {3.4592558491224413`*^9, 
   3.459255861986896*^9}, {3.459257321975092*^9, 3.459257342206023*^9}, {
   3.459257680762471*^9, 3.459257686705389*^9}, 3.459257780466928*^9, 
   3.459257836870084*^9, {3.459258011513547*^9, 3.4592580203848543`*^9}, 
   3.459258090500304*^9, 3.459258123286261*^9, {3.459258172275811*^9, 
   3.4592581763283567`*^9}, {3.459258261650728*^9, 3.459258275961801*^9}, {
   3.459258317534712*^9, 3.459258320448133*^9}, {3.459259317391436*^9, 
   3.459259317782123*^9}, {3.4592594701217623`*^9, 3.459259516689331*^9}, {
   3.459261019116581*^9, 3.459261048463571*^9}, {3.459262788252994*^9, 
   3.459262817772238*^9}, {3.45926317721119*^9, 3.459263180873488*^9}, 
   3.459263213162027*^9, {3.45926327656439*^9, 3.459263325498571*^9}, {
   3.459263377321536*^9, 3.459263392220525*^9}, {3.459263464113843*^9, 
   3.4592635256162148`*^9}, {3.459263619600739*^9, 3.459263830539631*^9}, {
   3.4592639238340693`*^9, 3.459264023018244*^9}, {3.459264199916244*^9, 
   3.459264200824246*^9}, {3.459264251127308*^9, 3.45926425184371*^9}, {
   3.459264309294531*^9, 3.459264342478025*^9}, {3.459264391313819*^9, 
   3.459264580601667*^9}, {3.459264631168569*^9, 3.459264664189879*^9}, {
   3.459264841368169*^9, 3.45926484491304*^9}, {3.4592649080981407`*^9, 
   3.4592649702472553`*^9}, {3.4592650709599533`*^9, 3.45926508745015*^9}, {
   3.459266819964258*^9, 3.459266824385408*^9}, {3.4592680585100193`*^9, 
   3.459268067355451*^9}, {3.459284579785984*^9, 3.4592846208504*^9}, {
   3.4592847540847054`*^9, 3.459284760317864*^9}, {3.459284807223661*^9, 
   3.4592848155035343`*^9}, {3.459284874176223*^9, 3.459284878340352*^9}, 
   3.4592849145680027`*^9, {3.459285134104995*^9, 3.4592851503535967`*^9}, {
   3.459285770077777*^9, 3.459285775293921*^9}, {3.459285807345009*^9, 
   3.4592858186442137`*^9}, {3.459285978556793*^9, 3.459285979202366*^9}, {
   3.459286252917677*^9, 3.459286284651408*^9}, {3.459286451656013*^9, 
   3.459286454205085*^9}, 3.4592865246235523`*^9, {3.459287768075276*^9, 
   3.459287772691587*^9}, {3.459287882340221*^9, 3.459287917744488*^9}, {
   3.45928802459799*^9, 3.459288062339005*^9}, {3.4592880992676363`*^9, 
   3.4592881229055967`*^9}, 3.459288365249572*^9, {3.459289096602462*^9, 
   3.459289102764484*^9}, {3.459289139194553*^9, 3.459289182777918*^9}, 
   3.4592896544759617`*^9, {3.4592905447236013`*^9, 3.459290566557576*^9}, {
   3.4592907205475473`*^9, 3.45929072455626*^9}, 3.459290954783605*^9, 
   3.4592913380026913`*^9, 3.459291635590436*^9, {3.459292290272662*^9, 
   3.459292292842358*^9}, {3.459292473342795*^9, 3.459292474525909*^9}, {
   3.459292735915309*^9, 3.459292741567108*^9}, {3.4592930128833942`*^9, 
   3.459293024178823*^9}, {3.459293098414442*^9, 3.459293123602169*^9}, {
   3.459323465713758*^9, 3.4593235093533*^9}, {3.459323576552105*^9, 
   3.45932360518941*^9}, {3.459323652334804*^9, 3.459323720327855*^9}, {
   3.4593242152255573`*^9, 3.459324216767277*^9}, {3.459324692078899*^9, 
   3.459324694823497*^9}, {3.4593247583223953`*^9, 3.459324758479487*^9}, {
   3.459324816200087*^9, 3.4593248664016523`*^9}, {3.459324902780519*^9, 
   3.459324927593799*^9}, {3.459324963030241*^9, 3.459325002801413*^9}, {
   3.4593252452589006`*^9, 3.459325272373971*^9}, {3.4593256429114857`*^9, 
   3.4593256573582573`*^9}, {3.459326464628049*^9, 3.459326598121187*^9}, 
   3.459326630398835*^9, {3.4593268319165287`*^9, 3.459326834217464*^9}, {
   3.459327466324731*^9, 3.459327476927491*^9}, 3.4593275337958517`*^9, {
   3.459327709538446*^9, 3.4593277912972183`*^9}, {3.459327856783263*^9, 
   3.45932786279219*^9}, {3.4593280139361277`*^9, 3.459328253300413*^9}, {
   3.459328326721431*^9, 3.459328344176444*^9}, {3.459328587340508*^9, 
   3.459328593679006*^9}, {3.459328849523543*^9, 3.459328863793458*^9}, {
   3.459329036817979*^9, 3.459329047874288*^9}, {3.459329697016569*^9, 
   3.4593296994214897`*^9}, {3.4593334082677383`*^9, 
   3.4593334636828327`*^9}, {3.4593335086763477`*^9, 3.459333510024227*^9}, 
   3.4593335805542183`*^9, {3.459333621526785*^9, 3.459333628516624*^9}, {
   3.459335277299211*^9, 3.4593352804072857`*^9}, {3.459359127264971*^9, 
   3.459359130775432*^9}, {3.459359308138043*^9, 3.4593593143396873`*^9}, 
   3.459359731755951*^9, {3.4593662472788887`*^9, 3.459366325520837*^9}, {
   3.4593663731849957`*^9, 3.4593664052109203`*^9}, {3.4593664416535587`*^9, 
   3.459366451437693*^9}, {3.4593665271243763`*^9, 3.459366615603799*^9}, {
   3.459366696062155*^9, 3.459366696512751*^9}, {3.4593667293086576`*^9, 
   3.459366763862714*^9}, {3.459366806523958*^9, 3.45936684018932*^9}, {
   3.4593669049847918`*^9, 3.459366914270515*^9}, {3.45936729452862*^9, 
   3.459367333757779*^9}, {3.459367464997143*^9, 3.459367491366889*^9}, {
   3.4593681668580647`*^9, 3.4593681966864443`*^9}, {3.459368306267786*^9, 
   3.459368323865282*^9}, {3.4593684197354717`*^9, 3.459368434474348*^9}, {
   3.4593684848493967`*^9, 3.459368535619866*^9}, {3.459368598166798*^9, 
   3.459368629617236*^9}, {3.4593691392636642`*^9, 3.459369198558358*^9}, {
   3.4593715313760366`*^9, 3.459371531729945*^9}, {3.4593716436270237`*^9, 
   3.4593716550686693`*^9}, {3.45937177387288*^9, 3.459371808117806*^9}, {
   3.45937183834037*^9, 3.4593718399222727`*^9}, {3.45937187586157*^9, 
   3.45937187981925*^9}, {3.459372006861321*^9, 3.459372039071398*^9}, {
   3.459372107984818*^9, 3.459372110200542*^9}, {3.4593722746893997`*^9, 
   3.459372349728507*^9}, {3.4593724112530107`*^9, 3.459372416772996*^9}, {
   3.459372467375667*^9, 3.459372470496442*^9}, {3.4593725023143787`*^9, 
   3.459372526180355*^9}, {3.4593725589557667`*^9, 3.459372619052136*^9}, {
   3.4593726587003183`*^9, 3.4593726904163313`*^9}, 3.459372729652369*^9, {
   3.459409861777791*^9, 3.459409932221641*^9}, 3.459410192543898*^9, {
   3.459410259258175*^9, 3.459410315116688*^9}, {3.459410353515946*^9, 
   3.4594103551735086`*^9}, {3.459410406103821*^9, 3.459410420412794*^9}, {
   3.459410452226721*^9, 3.459410545857093*^9}, {3.459410990355298*^9, 
   3.459411065216737*^9}, {3.459411125743595*^9, 3.459411141968053*^9}, {
   3.459411174143862*^9, 3.459411176070096*^9}, {3.4594112886667757`*^9, 
   3.4594113867489147`*^9}, {3.459411417610301*^9, 3.459411444479456*^9}, 
   3.4594114868569736`*^9, {3.459411543567709*^9, 3.45941154471437*^9}, {
   3.4594119334288054`*^9, 3.4594119514899397`*^9}, {3.4594121796249437`*^9, 
   3.45941218147935*^9}, {3.4594122621625147`*^9, 3.459412274707713*^9}, {
   3.459412441614689*^9, 3.459412473632519*^9}, {3.459412623774518*^9, 
   3.459412626945838*^9}, {3.4594127049425783`*^9, 3.4594127084908953`*^9}, {
   3.459412991000176*^9, 3.459413039613613*^9}, {3.459413636072856*^9, 
   3.459413688826213*^9}, {3.459413739398348*^9, 3.45941380429091*^9}, {
   3.4594138368036127`*^9, 3.459413935056921*^9}, {3.459413967751677*^9, 
   3.459413982360859*^9}, {3.4594144873353567`*^9, 3.45941451378502*^9}, {
   3.4594145763885736`*^9, 3.459414582208959*^9}, {3.459414774324046*^9, 
   3.459414840207899*^9}, {3.459414876572011*^9, 3.459414936293735*^9}, {
   3.459415030362218*^9, 3.459415033264998*^9}, {3.459415096281746*^9, 
   3.459415106173149*^9}, 3.459415227353998*^9, {3.459415643634365*^9, 
   3.459415694003845*^9}, {3.459415727601884*^9, 3.459415754683453*^9}, 
   3.459415815867833*^9, {3.4594159493736753`*^9, 3.45941602318787*^9}, {
   3.459416096325169*^9, 3.459416096531226*^9}, {3.45941632271024*^9, 
   3.459416324675885*^9}, {3.4594210950077457`*^9, 3.459421102253804*^9}, {
   3.459421437572824*^9, 3.459421460339765*^9}, {3.4594216391973457`*^9, 
   3.4594216515537663`*^9}, {3.459422120924362*^9, 3.4594221461313972`*^9}, {
   3.45942219435109*^9, 3.459422244175313*^9}, 3.4594231474438267`*^9, {
   3.459423213846156*^9, 3.4594232554297113`*^9}, {3.459423299276147*^9, 
   3.4594233410019417`*^9}, {3.459423481904455*^9, 3.4594235098925447`*^9}, {
   3.4594236028502007`*^9, 3.4594236083475018`*^9}, {3.4594236393796997`*^9, 
   3.459423641288576*^9}, {3.4594236852140408`*^9, 3.4594237512605124`*^9}, {
   3.4594239739727783`*^9, 3.459423977523942*^9}, {3.4594241625220633`*^9, 
   3.459424190977249*^9}, {3.459445533057616*^9, 3.4594455344723577`*^9}, {
   3.459445615332436*^9, 3.459445618559732*^9}, {3.459445663634314*^9, 
   3.459445666558981*^9}, {3.459445722373187*^9, 3.459445726118153*^9}, {
   3.459445757588621*^9, 3.459445760627236*^9}, {3.459445827126706*^9, 
   3.459445830902604*^9}, {3.459445861038846*^9, 3.459445864156726*^9}, {
   3.4594468355781183`*^9, 3.459446853551805*^9}, {3.4594987139097443`*^9, 
   3.459498808227668*^9}, {3.4594988554162083`*^9, 3.45949887990666*^9}, {
   3.4594990192162123`*^9, 3.4594990435313683`*^9}, {3.4594992462542353`*^9, 
   3.4594992508139887`*^9}, {3.459499383907645*^9, 3.4594994257211113`*^9}, 
   3.459499682421321*^9, {3.459499990133381*^9, 3.459500026214184*^9}, {
   3.4595002933772917`*^9, 3.4595002950488663`*^9}, {3.4595003599837523`*^9, 
   3.459500386176194*^9}, 3.459500725890719*^9, {3.4595038754636497`*^9, 
   3.4595038918201103`*^9}, {3.4595067649108686`*^9, 
   3.4595068921832657`*^9}, {3.459508103598661*^9, 3.459508113658516*^9}, 
   3.459520571749847*^9, {3.459523656776148*^9, 3.459523706647986*^9}, {
   3.4595548192618666`*^9, 3.459554822844225*^9}, {3.459679723963276*^9, 
   3.459679741173997*^9}, {3.459688583415147*^9, 3.459688596775482*^9}, {
   3.507924145637808*^9, 3.5079242231409073`*^9}, {3.507924427554084*^9, 
   3.5079244281941094`*^9}, {3.507924497561884*^9, 3.507924498591925*^9}, {
   3.507924530938219*^9, 3.5079245316732483`*^9}, {3.507924576185029*^9, 
   3.5079245959758205`*^9}, 3.5079246285171223`*^9, {3.5079246816992493`*^9, 
   3.5079246885495234`*^9}, {3.5079294021351366`*^9, 3.507929402961963*^9}},
 CellID->958173997],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1:eJwtlXtMU3cUx4vFGRClWWCIGboGJtEqj4XHlMipDJs5mKKjGyqr8lSHPCqQ
jQU0zgHiwCkIbOB7TihuTmWwaoLnliFhBFEB5WUdCrTQooUCLW+2cH43uX/c
3Ht/v3PO9/v9/ISRibtiLHg83j//3ys2BIZOC604rx6D3vbiYq7MGMa3KrHk
pDmiC+oOPlcYqJkv8+VziaLNJS2KRVy4ZZzLh2sXcReLH+2S3rHgjAnH9cYA
C86l1NEmv5PHDQ1ucnRO5XGz/rdNajse9+urxqPSpHm0DN9ctaZmDh9OxX6c
YjuHgshKSVnsLF4s7d4TWDuDl1KT8/uFMyjrNLd4Z06jPKrq69f6KQySrVI9
kk7hllxtV3ntJNZaXg8J/mASx+qq2wquTaCFaPtWmeMERp+2f3n6jBnz64ov
21ibsXzHN7+pMk3YdvOAroRvQpcZ7/PZJ8axeT55WdricQwuUAdH5ozhuewI
g6/tGGpOCLoNRaPo0Vu04vh7o1joub6i94YRRUdWHhBsNGLcF6JuXsMIPlce
XvtH2AjuxM4Re/0w9k3mbvQ4NowxfZ7SSbthrJebKjrDDDh/9YXO5oc3aGpq
tPuee41fTYj0PpNDOCH91M3Jewj9yvwy3VL0+KdV+KHIah1+xyuyuzU9iO97
meXLAwfRKk8pSPlxAGdCcx3b1VqUu78r2eCuxXbv811xJzRoXfT5leyufnQZ
FAykePXjrGTdMdezfehjteNe/nAvtu67cESxqxe1sXbWsr9eoe3hNUlXV73C
sLMS14MnX+IV3idBl8d60JCQ+pNfVA96pws1oeX/4mMX5Yu7p19gzLbsysw0
Nb5pjjpafPA5pu+u0z3c2436s56SJZ91YfyWnWeE2zsxyzXy1FRwB76TZlmf
uKMdYzUelTLpM7yBW3+/JnuKPv4OS1bHtWHr0nH7G9+24vqmUr81eS2YULbM
EH/1CcaVhNTtu/cY3QLWau4oHqHP7jylvPchhma5OymFTRgUxj8XEN2It/eU
WzZXNGBDyE2Vw3g9muqcTqkDHmCtdn+OuuBvTL+pkD7TqrBaYRzK8udw6GRS
xJfuNWjtLFCt1NxFmcMS1/rL1agq1ET0yCqxOHz5Y93qWxg9nlHaXK/A/QmD
H93a+QtmzfMV8/d/Rs/7SjebmhzksYs9Qw69h0WJC99DBP0P+bQeDJxbWB/Y
frCU9gcd1QNVVB9kUL3AUf1gpH7gAfUHb+1d6Be2Uf8gp3mAF80HNtC8gM0P
4mmeIKL5whOaN/jS/EFBesAB0gccSC9g+kEC6QmDpC9kkN7A9IdY8gMwf4AP
+QWYf4D5CZi/QEB+A+Y/eEp+BF/yJ0yTX4H5F2zIz9BG/oZk8jvMkf/BmvIA
rpQPYHkBlh/YRHkCM+ULDlHewEz5gznKI7B8QiTlFUYpvxBCeYYOyjewvIMr
5R8YD8Cd+ACMF1BI/ADGE2B8AWfiDTD+AOMRMD5BDPEKGL+A8QwY30BCvAPG
P2A8BMZHYLyES8RPcCKeAuMr8Im3cJ34C4zH4lHis3gd8Vo8SfwWM56LGd/F
jPdixn8xOw/E5XQ+iNl5IX47yaZ5Smgl/g+i6E56
    "], $CellContext`mirror$$ = "cardioid", $CellContext`nlines$$ = 
    100, $CellContext`pt$$ = {1.2, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "cardioid"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 100, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {1.2, 0}}, Automatic}, {
      Hold[$CellContext`ints$$], 0}}, Typeset`size$$ = {450., {223., 227.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12717$$ = 0, $CellContext`nlines$12718$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ints$$ = 0, $CellContext`mirror$$ = 
        "cardioid", $CellContext`nlines$$ = 
        100, $CellContext`pt$$ = {1.2, 0}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12717$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12718$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "cardioid"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 100, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {1.2, 0}}, Automatic, ControlType -> 
         Locator, Appearance -> None}, {$CellContext`ints$$, 0, ControlType -> 
         None}}, "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5079294876194305`*^9},
 CellID->431012052]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Rays from a point source reflect in curve (\"mirror\") and the corresponding \
catacaustic is plotted. The catacaustic is the envelope of the reflected \
lines. Click in the graphic to change the location of the light source. (Rays \
from the source are a pale, translucent yellow; reflected lines are white.)\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459006911484446*^9, 3.459006943873424*^9}, {
   3.459007019778369*^9, 3.459007020066326*^9}, {3.45900778233224*^9, 
   3.4590079001251717`*^9}, {3.4590079694637957`*^9, 3.459007992190982*^9}, {
   3.459008065150394*^9, 3.4590080660380983`*^9}, {3.459176869376377*^9, 
   3.459177005545437*^9}, {3.459177239703945*^9, 3.4591772654333563`*^9}, {
   3.459183044103731*^9, 3.459183051067485*^9}, {3.45918332533622*^9, 
   3.459183326399705*^9}, {3.4592495701487923`*^9, 3.459249584512107*^9}, {
   3.459249631740327*^9, 3.459249652842986*^9}, {3.459508019014646*^9, 
   3.459508028221216*^9}, {3.459554944173357*^9, 3.45955494420936*^9}, {
   3.459609903886736*^9, 3.4596099303087797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1:eJwtlXtMU3cUx4vFGRClWWCIGboGJtEqj4XHlMipDJs5mKKjGyqr8lSHPCqQ
jQU0zgHiwCkIbOB7TihuTmWwaoLnliFhBFEB5WUdCrTQooUCLW+2cH43uX/c
3Ht/v3PO9/v9/ISRibtiLHg83j//3ys2BIZOC604rx6D3vbiYq7MGMa3KrHk
pDmiC+oOPlcYqJkv8+VziaLNJS2KRVy4ZZzLh2sXcReLH+2S3rHgjAnH9cYA
C86l1NEmv5PHDQ1ucnRO5XGz/rdNajse9+urxqPSpHm0DN9ctaZmDh9OxX6c
YjuHgshKSVnsLF4s7d4TWDuDl1KT8/uFMyjrNLd4Z06jPKrq69f6KQySrVI9
kk7hllxtV3ntJNZaXg8J/mASx+qq2wquTaCFaPtWmeMERp+2f3n6jBnz64ov
21ibsXzHN7+pMk3YdvOAroRvQpcZ7/PZJ8axeT55WdricQwuUAdH5ozhuewI
g6/tGGpOCLoNRaPo0Vu04vh7o1joub6i94YRRUdWHhBsNGLcF6JuXsMIPlce
XvtH2AjuxM4Re/0w9k3mbvQ4NowxfZ7SSbthrJebKjrDDDh/9YXO5oc3aGpq
tPuee41fTYj0PpNDOCH91M3Jewj9yvwy3VL0+KdV+KHIah1+xyuyuzU9iO97
meXLAwfRKk8pSPlxAGdCcx3b1VqUu78r2eCuxXbv811xJzRoXfT5leyufnQZ
FAykePXjrGTdMdezfehjteNe/nAvtu67cESxqxe1sXbWsr9eoe3hNUlXV73C
sLMS14MnX+IV3idBl8d60JCQ+pNfVA96pws1oeX/4mMX5Yu7p19gzLbsysw0
Nb5pjjpafPA5pu+u0z3c2436s56SJZ91YfyWnWeE2zsxyzXy1FRwB76TZlmf
uKMdYzUelTLpM7yBW3+/JnuKPv4OS1bHtWHr0nH7G9+24vqmUr81eS2YULbM
EH/1CcaVhNTtu/cY3QLWau4oHqHP7jylvPchhma5OymFTRgUxj8XEN2It/eU
WzZXNGBDyE2Vw3g9muqcTqkDHmCtdn+OuuBvTL+pkD7TqrBaYRzK8udw6GRS
xJfuNWjtLFCt1NxFmcMS1/rL1agq1ET0yCqxOHz5Y93qWxg9nlHaXK/A/QmD
H93a+QtmzfMV8/d/Rs/7SjebmhzksYs9Qw69h0WJC99DBP0P+bQeDJxbWB/Y
frCU9gcd1QNVVB9kUL3AUf1gpH7gAfUHb+1d6Be2Uf8gp3mAF80HNtC8gM0P
4mmeIKL5whOaN/jS/EFBesAB0gccSC9g+kEC6QmDpC9kkN7A9IdY8gMwf4AP
+QWYf4D5CZi/QEB+A+Y/eEp+BF/yJ0yTX4H5F2zIz9BG/oZk8jvMkf/BmvIA
rpQPYHkBlh/YRHkCM+ULDlHewEz5gznKI7B8QiTlFUYpvxBCeYYOyjewvIMr
5R8YD8Cd+ACMF1BI/ADGE2B8AWfiDTD+AOMRMD5BDPEKGL+A8QwY30BCvAPG
P2A8BMZHYLyES8RPcCKeAuMr8Im3cJ34C4zH4lHis3gd8Vo8SfwWM56LGd/F
jPdixn8xOw/E5XQ+iNl5IX47yaZ5Smgl/g+i6E56
    "], $CellContext`mirror$$ = "cardioid", $CellContext`nlines$$ = 
    100, $CellContext`pt$$ = {1.2, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "cardioid"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 100, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {1.2, 0}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1:eJwtlXtMU3cUx4vFGRClWWCIGboGJtEqj4XHlMipDJs5mKKjGyqr8lSHPCqQ
jQU0zgHiwCkIbOB7TihuTmWwaoLnliFhBFEB5WUdCrTQooUCLW+2cH43uX/c
3Ht/v3PO9/v9/ISRibtiLHg83j//3ys2BIZOC604rx6D3vbiYq7MGMa3KrHk
pDmiC+oOPlcYqJkv8+VziaLNJS2KRVy4ZZzLh2sXcReLH+2S3rHgjAnH9cYA
C86l1NEmv5PHDQ1ucnRO5XGz/rdNajse9+urxqPSpHm0DN9ctaZmDh9OxX6c
YjuHgshKSVnsLF4s7d4TWDuDl1KT8/uFMyjrNLd4Z06jPKrq69f6KQySrVI9
kk7hllxtV3ntJNZaXg8J/mASx+qq2wquTaCFaPtWmeMERp+2f3n6jBnz64ov
21ibsXzHN7+pMk3YdvOAroRvQpcZ7/PZJ8axeT55WdricQwuUAdH5ozhuewI
g6/tGGpOCLoNRaPo0Vu04vh7o1joub6i94YRRUdWHhBsNGLcF6JuXsMIPlce
XvtH2AjuxM4Re/0w9k3mbvQ4NowxfZ7SSbthrJebKjrDDDh/9YXO5oc3aGpq
tPuee41fTYj0PpNDOCH91M3Jewj9yvwy3VL0+KdV+KHIah1+xyuyuzU9iO97
meXLAwfRKk8pSPlxAGdCcx3b1VqUu78r2eCuxXbv811xJzRoXfT5leyufnQZ
FAykePXjrGTdMdezfehjteNe/nAvtu67cESxqxe1sXbWsr9eoe3hNUlXV73C
sLMS14MnX+IV3idBl8d60JCQ+pNfVA96pws1oeX/4mMX5Yu7p19gzLbsysw0
Nb5pjjpafPA5pu+u0z3c2436s56SJZ91YfyWnWeE2zsxyzXy1FRwB76TZlmf
uKMdYzUelTLpM7yBW3+/JnuKPv4OS1bHtWHr0nH7G9+24vqmUr81eS2YULbM
EH/1CcaVhNTtu/cY3QLWau4oHqHP7jylvPchhma5OymFTRgUxj8XEN2It/eU
WzZXNGBDyE2Vw3g9muqcTqkDHmCtdn+OuuBvTL+pkD7TqrBaYRzK8udw6GRS
xJfuNWjtLFCt1NxFmcMS1/rL1agq1ET0yCqxOHz5Y93qWxg9nlHaXK/A/QmD
H93a+QtmzfMV8/d/Rs/7SjebmhzksYs9Qw69h0WJC99DBP0P+bQeDJxbWB/Y
frCU9gcd1QNVVB9kUL3AUf1gpH7gAfUHb+1d6Be2Uf8gp3mAF80HNtC8gM0P
4mmeIKL5whOaN/jS/EFBesAB0gccSC9g+kEC6QmDpC9kkN7A9IdY8gMwf4AP
+QWYf4D5CZi/QEB+A+Y/eEp+BF/yJ0yTX4H5F2zIz9BG/oZk8jvMkf/BmvIA
rpQPYHkBlh/YRHkCM+ULDlHewEz5gznKI7B8QiTlFUYpvxBCeYYOyjewvIMr
5R8YD8Cd+ACMF1BI/ADGE2B8AWfiDTD+AOMRMD5BDPEKGL+A8QwY30BCvAPG
P2A8BMZHYLyES8RPcCKeAuMr8Im3cJ34C4zH4lHis3gd8Vo8SfwWM56LGd/F
jPdixn8xOw/E5XQ+iNl5IX47yaZ5Smgl/g+i6E56
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12009$$ = 0, $CellContext`nlines$12010$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1:eJwtlXtMU3cUx4vFGRClWWCIGboGJtEqj4XHlMipDJs5mKKjGyqr8lSHPCqQ
jQU0zgHiwCkIbOB7TihuTmWwaoLnliFhBFEB5WUdCrTQooUCLW+2cH43uX/c
3Ht/v3PO9/v9/ISRibtiLHg83j//3ys2BIZOC604rx6D3vbiYq7MGMa3KrHk
pDmiC+oOPlcYqJkv8+VziaLNJS2KRVy4ZZzLh2sXcReLH+2S3rHgjAnH9cYA
C86l1NEmv5PHDQ1ucnRO5XGz/rdNajse9+urxqPSpHm0DN9ctaZmDh9OxX6c
YjuHgshKSVnsLF4s7d4TWDuDl1KT8/uFMyjrNLd4Z06jPKrq69f6KQySrVI9
kk7hllxtV3ntJNZaXg8J/mASx+qq2wquTaCFaPtWmeMERp+2f3n6jBnz64ov
21ibsXzHN7+pMk3YdvOAroRvQpcZ7/PZJ8axeT55WdricQwuUAdH5ozhuewI
g6/tGGpOCLoNRaPo0Vu04vh7o1joub6i94YRRUdWHhBsNGLcF6JuXsMIPlce
XvtH2AjuxM4Re/0w9k3mbvQ4NowxfZ7SSbthrJebKjrDDDh/9YXO5oc3aGpq
tPuee41fTYj0PpNDOCH91M3Jewj9yvwy3VL0+KdV+KHIah1+xyuyuzU9iO97
meXLAwfRKk8pSPlxAGdCcx3b1VqUu78r2eCuxXbv811xJzRoXfT5leyufnQZ
FAykePXjrGTdMdezfehjteNe/nAvtu67cESxqxe1sXbWsr9eoe3hNUlXV73C
sLMS14MnX+IV3idBl8d60JCQ+pNfVA96pws1oeX/4mMX5Yu7p19gzLbsysw0
Nb5pjjpafPA5pu+u0z3c2436s56SJZ91YfyWnWeE2zsxyzXy1FRwB76TZlmf
uKMdYzUelTLpM7yBW3+/JnuKPv4OS1bHtWHr0nH7G9+24vqmUr81eS2YULbM
EH/1CcaVhNTtu/cY3QLWau4oHqHP7jylvPchhma5OymFTRgUxj8XEN2It/eU
WzZXNGBDyE2Vw3g9muqcTqkDHmCtdn+OuuBvTL+pkD7TqrBaYRzK8udw6GRS
xJfuNWjtLFCt1NxFmcMS1/rL1agq1ET0yCqxOHz5Y93qWxg9nlHaXK/A/QmD
H93a+QtmzfMV8/d/Rs/7SjebmhzksYs9Qw69h0WJC99DBP0P+bQeDJxbWB/Y
frCU9gcd1QNVVB9kUL3AUf1gpH7gAfUHb+1d6Be2Uf8gp3mAF80HNtC8gM0P
4mmeIKL5whOaN/jS/EFBesAB0gccSC9g+kEC6QmDpC9kkN7A9IdY8gMwf4AP
+QWYf4D5CZi/QEB+A+Y/eEp+BF/yJ0yTX4H5F2zIz9BG/oZk8jvMkf/BmvIA
rpQPYHkBlh/YRHkCM+ULDlHewEz5gznKI7B8QiTlFUYpvxBCeYYOyjewvIMr
5R8YD8Cd+ACMF1BI/ADGE2B8AWfiDTD+AOMRMD5BDPEKGL+A8QwY30BCvAPG
P2A8BMZHYLyES8RPcCKeAuMr8Im3cJ34C4zH4lHis3gd8Vo8SfwWM56LGd/F
jPdixn8xOw/E5XQ+iNl5IX47yaZ5Smgl/g+i6E56
         "], $CellContext`mirror$$ = "cardioid", $CellContext`nlines$$ = 
        100, $CellContext`pt$$ = {1.2, 0}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12009$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12010$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "cardioid"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 100, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {1.2, 0}}, Automatic, ControlType -> 
         Locator, Appearance -> None}, {{$CellContext`ints$$, CompressedData["
1:eJwtlXtMU3cUx4vFGRClWWCIGboGJtEqj4XHlMipDJs5mKKjGyqr8lSHPCqQ
jQU0zgHiwCkIbOB7TihuTmWwaoLnliFhBFEB5WUdCrTQooUCLW+2cH43uX/c
3Ht/v3PO9/v9/ISRibtiLHg83j//3ys2BIZOC604rx6D3vbiYq7MGMa3KrHk
pDmiC+oOPlcYqJkv8+VziaLNJS2KRVy4ZZzLh2sXcReLH+2S3rHgjAnH9cYA
C86l1NEmv5PHDQ1ucnRO5XGz/rdNajse9+urxqPSpHm0DN9ctaZmDh9OxX6c
YjuHgshKSVnsLF4s7d4TWDuDl1KT8/uFMyjrNLd4Z06jPKrq69f6KQySrVI9
kk7hllxtV3ntJNZaXg8J/mASx+qq2wquTaCFaPtWmeMERp+2f3n6jBnz64ov
21ibsXzHN7+pMk3YdvOAroRvQpcZ7/PZJ8axeT55WdricQwuUAdH5ozhuewI
g6/tGGpOCLoNRaPo0Vu04vh7o1joub6i94YRRUdWHhBsNGLcF6JuXsMIPlce
XvtH2AjuxM4Re/0w9k3mbvQ4NowxfZ7SSbthrJebKjrDDDh/9YXO5oc3aGpq
tPuee41fTYj0PpNDOCH91M3Jewj9yvwy3VL0+KdV+KHIah1+xyuyuzU9iO97
meXLAwfRKk8pSPlxAGdCcx3b1VqUu78r2eCuxXbv811xJzRoXfT5leyufnQZ
FAykePXjrGTdMdezfehjteNe/nAvtu67cESxqxe1sXbWsr9eoe3hNUlXV73C
sLMS14MnX+IV3idBl8d60JCQ+pNfVA96pws1oeX/4mMX5Yu7p19gzLbsysw0
Nb5pjjpafPA5pu+u0z3c2436s56SJZ91YfyWnWeE2zsxyzXy1FRwB76TZlmf
uKMdYzUelTLpM7yBW3+/JnuKPv4OS1bHtWHr0nH7G9+24vqmUr81eS2YULbM
EH/1CcaVhNTtu/cY3QLWau4oHqHP7jylvPchhma5OymFTRgUxj8XEN2It/eU
WzZXNGBDyE2Vw3g9muqcTqkDHmCtdn+OuuBvTL+pkD7TqrBaYRzK8udw6GRS
xJfuNWjtLFCt1NxFmcMS1/rL1agq1ET0yCqxOHz5Y93qWxg9nlHaXK/A/QmD
H93a+QtmzfMV8/d/Rs/7SjebmhzksYs9Qw69h0WJC99DBP0P+bQeDJxbWB/Y
frCU9gcd1QNVVB9kUL3AUf1gpH7gAfUHb+1d6Be2Uf8gp3mAF80HNtC8gM0P
4mmeIKL5whOaN/jS/EFBesAB0gccSC9g+kEC6QmDpC9kkN7A9IdY8gMwf4AP
+QWYf4D5CZi/QEB+A+Y/eEp+BF/yJ0yTX4H5F2zIz9BG/oZk8jvMkf/BmvIA
rpQPYHkBlh/YRHkCM+ULDlHewEz5gznKI7B8QiTlFUYpvxBCeYYOyjewvIMr
5R8YD8Cd+ACMF1BI/ADGE2B8AWfiDTD+AOMRMD5BDPEKGL+A8QwY30BCvAPG
P2A8BMZHYLyES8RPcCKeAuMr8Im3cJ34C4zH4lHis3gd8Vo8SfwWM56LGd/F
jPdixn8xOw/E5XQ+iNl5IX47yaZ5Smgl/g+i6E56
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->454650124]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1:eJwNlmk01G0chscMMxSpbEnZpRCVoiS/vxKVpbK1UbbSRgpvUomIilJKWqRI
ZIksWdPzFElokX1fx27MxjC2t0/3Ode573Puj5eSywXrkwIkEuk4mUTKLdzy
rkNCBItIeW5cwRPGHIfazWEtwpgy/UFH47Mwltd1z16IF8bepStOUEOFcfgD
30HDs8IYXr9ammAljH8/VH+3WVcYt++Vv8eREcYfS7alts/ScAVt8SSrm4Y9
VEwu6Xyn4erWxZrR6TQsnXBcTzmKhhWUr+bUX6bhW+FHKjMcaZgSr5WWvouG
1+WP3Pu1joa/dvdlSSylYf94e8erk1Ts7bO0XbCdisOKZUMyS6l4qffxNP9U
Ktbe55x18iEVK2Swpy/4UXHt6dGxpyeo2Nmfxe80peKZto2PTLSp+N3QxvXl
UlScujJ6l9ucELYaG7GVpwvhjLSQXk61EHYaMvLtyxXCciHOj8Zj/+XspUrJ
W0KYOyORauMhhCOGW8vS7IRwrZv+h1VGQtj/xh7BpDVC2DCn4piZuBCOOTxq
Q5oSxB+emUX86RLEiqW5Sfk/BHFT+3azj9mCWCFgRuLHC0Fck7v8IztEEAct
i6jb6CmID7zdKx96SBATPBaME4J4rrV98LyGIGaq0CrnJQTxXomp6MQ5Cg59
Wkw6PkDBWO8X0qih4HvPxO8uKqZggx+5MnOJFGw9aaBMjqRg27qjbrJXKDj+
6uyzna4UHFilGXjdkoJ1dovV/9Cn4JgjtYfUlSk4TiW3IlqUgjfd6RyU5JHx
zxJf/8RuMt6iFECYVJNxnm/HPCePjA+fsfbPiSfjRA9Xv5sRZMxudkJOl8n4
mu1haSsXMj4dsGT3Pksy9u3kSdhtJeMxsU0WnipkXC9+PT96CRkbsjcrVk0L
YLnH5geX0AXw9/id0if+COD0z2rbS4oF8O+WkIi1yQI4Jsuz8XWUAKZ4nRtS
CxDAf29cfpB/RgDX+M4/t7MTwLuVGhoXCAGcWLRNOk9LAFfofFPzWyGAGeFe
DbsFBXD9lfApeSYJe3UUOFDaSDjq7nAt+zsJbyc76ozlkDD90COC/YqEP6y0
aRaIIOE6u9dVcn4kbPq6cAjcSFhpuyTV8wAJZ+w4zHlrSMKNPx1CBtaScLWr
asQmKRL+JNPcHipAwstZD59VtC6g23Vlh6NzF1CztPNr73sLqBgyZVxPLaBk
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
L+PE
    "], $CellContext`mirror$$ = "ellipse", $CellContext`nlines$$ = 
    1000, $CellContext`pt$$ = {2.175, 1.448}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "ellipse"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 1000, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {2.175, 1.448}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1:eJwNlmk01G0chscMMxSpbEnZpRCVoiS/vxKVpbK1UbbSRgpvUomIilJKWqRI
ZIksWdPzFElokX1fx27MxjC2t0/3Ode573Puj5eSywXrkwIkEuk4mUTKLdzy
rkNCBItIeW5cwRPGHIfazWEtwpgy/UFH47Mwltd1z16IF8bepStOUEOFcfgD
30HDs8IYXr9ammAljH8/VH+3WVcYt++Vv8eREcYfS7alts/ScAVt8SSrm4Y9
VEwu6Xyn4erWxZrR6TQsnXBcTzmKhhWUr+bUX6bhW+FHKjMcaZgSr5WWvouG
1+WP3Pu1joa/dvdlSSylYf94e8erk1Ts7bO0XbCdisOKZUMyS6l4qffxNP9U
Ktbe55x18iEVK2Swpy/4UXHt6dGxpyeo2Nmfxe80peKZto2PTLSp+N3QxvXl
UlScujJ6l9ucELYaG7GVpwvhjLSQXk61EHYaMvLtyxXCciHOj8Zj/+XspUrJ
W0KYOyORauMhhCOGW8vS7IRwrZv+h1VGQtj/xh7BpDVC2DCn4piZuBCOOTxq
Q5oSxB+emUX86RLEiqW5Sfk/BHFT+3azj9mCWCFgRuLHC0Fck7v8IztEEAct
i6jb6CmID7zdKx96SBATPBaME4J4rrV98LyGIGaq0CrnJQTxXomp6MQ5Cg59
Wkw6PkDBWO8X0qih4HvPxO8uKqZggx+5MnOJFGw9aaBMjqRg27qjbrJXKDj+
6uyzna4UHFilGXjdkoJ1dovV/9Cn4JgjtYfUlSk4TiW3IlqUgjfd6RyU5JHx
zxJf/8RuMt6iFECYVJNxnm/HPCePjA+fsfbPiSfjRA9Xv5sRZMxudkJOl8n4
mu1haSsXMj4dsGT3Pksy9u3kSdhtJeMxsU0WnipkXC9+PT96CRkbsjcrVk0L
YLnH5geX0AXw9/id0if+COD0z2rbS4oF8O+WkIi1yQI4Jsuz8XWUAKZ4nRtS
CxDAf29cfpB/RgDX+M4/t7MTwLuVGhoXCAGcWLRNOk9LAFfofFPzWyGAGeFe
DbsFBXD9lfApeSYJe3UUOFDaSDjq7nAt+zsJbyc76ozlkDD90COC/YqEP6y0
aRaIIOE6u9dVcn4kbPq6cAjcSFhpuyTV8wAJZ+w4zHlrSMKNPx1CBtaScLWr
asQmKRL+JNPcHipAwstZD59VtC6g23Vlh6NzF1CztPNr73sLqBgyZVxPLaBk
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
L+PE
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12070$$ = 0, $CellContext`nlines$12071$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1:eJwNlmk01G0chscMMxSpbEnZpRCVoiS/vxKVpbK1UbbSRgpvUomIilJKWqRI
ZIksWdPzFElokX1fx27MxjC2t0/3Ode573Puj5eSywXrkwIkEuk4mUTKLdzy
rkNCBItIeW5cwRPGHIfazWEtwpgy/UFH47Mwltd1z16IF8bepStOUEOFcfgD
30HDs8IYXr9ammAljH8/VH+3WVcYt++Vv8eREcYfS7alts/ScAVt8SSrm4Y9
VEwu6Xyn4erWxZrR6TQsnXBcTzmKhhWUr+bUX6bhW+FHKjMcaZgSr5WWvouG
1+WP3Pu1joa/dvdlSSylYf94e8erk1Ts7bO0XbCdisOKZUMyS6l4qffxNP9U
Ktbe55x18iEVK2Swpy/4UXHt6dGxpyeo2Nmfxe80peKZto2PTLSp+N3QxvXl
UlScujJ6l9ucELYaG7GVpwvhjLSQXk61EHYaMvLtyxXCciHOj8Zj/+XspUrJ
W0KYOyORauMhhCOGW8vS7IRwrZv+h1VGQtj/xh7BpDVC2DCn4piZuBCOOTxq
Q5oSxB+emUX86RLEiqW5Sfk/BHFT+3azj9mCWCFgRuLHC0Fck7v8IztEEAct
i6jb6CmID7zdKx96SBATPBaME4J4rrV98LyGIGaq0CrnJQTxXomp6MQ5Cg59
Wkw6PkDBWO8X0qih4HvPxO8uKqZggx+5MnOJFGw9aaBMjqRg27qjbrJXKDj+
6uyzna4UHFilGXjdkoJ1dovV/9Cn4JgjtYfUlSk4TiW3IlqUgjfd6RyU5JHx
zxJf/8RuMt6iFECYVJNxnm/HPCePjA+fsfbPiSfjRA9Xv5sRZMxudkJOl8n4
mu1haSsXMj4dsGT3Pksy9u3kSdhtJeMxsU0WnipkXC9+PT96CRkbsjcrVk0L
YLnH5geX0AXw9/id0if+COD0z2rbS4oF8O+WkIi1yQI4Jsuz8XWUAKZ4nRtS
CxDAf29cfpB/RgDX+M4/t7MTwLuVGhoXCAGcWLRNOk9LAFfofFPzWyGAGeFe
DbsFBXD9lfApeSYJe3UUOFDaSDjq7nAt+zsJbyc76ozlkDD90COC/YqEP6y0
aRaIIOE6u9dVcn4kbPq6cAjcSFhpuyTV8wAJZ+w4zHlrSMKNPx1CBtaScLWr
asQmKRL+JNPcHipAwstZD59VtC6g23Vlh6NzF1CztPNr73sLqBgyZVxPLaBk
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
L+PE
         "], $CellContext`mirror$$ = "ellipse", $CellContext`nlines$$ = 
        1000, $CellContext`pt$$ = {2.175, 1.448}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12070$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12071$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "ellipse"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 1000, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {2.175, 1.448}}, Automatic, 
         ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ints$$, CompressedData["
1:eJwNlmk01G0chscMMxSpbEnZpRCVoiS/vxKVpbK1UbbSRgpvUomIilJKWqRI
ZIksWdPzFElokX1fx27MxjC2t0/3Ode573Puj5eSywXrkwIkEuk4mUTKLdzy
rkNCBItIeW5cwRPGHIfazWEtwpgy/UFH47Mwltd1z16IF8bepStOUEOFcfgD
30HDs8IYXr9ammAljH8/VH+3WVcYt++Vv8eREcYfS7alts/ScAVt8SSrm4Y9
VEwu6Xyn4erWxZrR6TQsnXBcTzmKhhWUr+bUX6bhW+FHKjMcaZgSr5WWvouG
1+WP3Pu1joa/dvdlSSylYf94e8erk1Ts7bO0XbCdisOKZUMyS6l4qffxNP9U
Ktbe55x18iEVK2Swpy/4UXHt6dGxpyeo2Nmfxe80peKZto2PTLSp+N3QxvXl
UlScujJ6l9ucELYaG7GVpwvhjLSQXk61EHYaMvLtyxXCciHOj8Zj/+XspUrJ
W0KYOyORauMhhCOGW8vS7IRwrZv+h1VGQtj/xh7BpDVC2DCn4piZuBCOOTxq
Q5oSxB+emUX86RLEiqW5Sfk/BHFT+3azj9mCWCFgRuLHC0Fck7v8IztEEAct
i6jb6CmID7zdKx96SBATPBaME4J4rrV98LyGIGaq0CrnJQTxXomp6MQ5Cg59
Wkw6PkDBWO8X0qih4HvPxO8uKqZggx+5MnOJFGw9aaBMjqRg27qjbrJXKDj+
6uyzna4UHFilGXjdkoJ1dovV/9Cn4JgjtYfUlSk4TiW3IlqUgjfd6RyU5JHx
zxJf/8RuMt6iFECYVJNxnm/HPCePjA+fsfbPiSfjRA9Xv5sRZMxudkJOl8n4
mu1haSsXMj4dsGT3Pksy9u3kSdhtJeMxsU0WnipkXC9+PT96CRkbsjcrVk0L
YLnH5geX0AXw9/id0if+COD0z2rbS4oF8O+WkIi1yQI4Jsuz8XWUAKZ4nRtS
CxDAf29cfpB/RgDX+M4/t7MTwLuVGhoXCAGcWLRNOk9LAFfofFPzWyGAGeFe
DbsFBXD9lfApeSYJe3UUOFDaSDjq7nAt+zsJbyc76ozlkDD90COC/YqEP6y0
aRaIIOE6u9dVcn4kbPq6cAjcSFhpuyTV8wAJZ+w4zHlrSMKNPx1CBtaScLWr
asQmKRL+JNPcHipAwstZD59VtC6g23Vlh6NzF1CztPNr73sLqBgyZVxPLaBk
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
L+PE
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->370097166],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1:eJwtlQ1MU1cUx1+/aJ0CxiiTiENkAoqALnVDsu3crcQ4DEamWCmOr8rGpshE
J8bO8RHDZkTQGWVKHWrkQ5dly5aYuWDO3RCFxDCmhiAKIvKxMphSAcEK7l3O
bdI0r+/de8/5n///94Iycj7M1CiK0qh+50fEbvIEzeCRw72JFx6auOtgrTX+
nImbmu1JY2kmfiR2YXLlIhPfprRuXdtl5H0ppSnDlUY+95s1aadTjXywbCrd
EmjkRwov2wc7vXilfWfmie+9eHJMyCfvpnjxGlNnVv9CL57VcuKzox0Gbjwe
v2P1GQMvSTDs7N5q4HWzruYcDjDwiIY9u8z39TzRsXx3R4WeH4vq2VOcrOdL
uyv2Ri3Q8+TjG/e1tev4ZsvM/YWndfwd95+OZTYdZ2f3H7jtr+O58W/kf3lX
y4cmXAVLTml5Q9W5ouYtWu6dkHQwb76W3/bMLl7UpuGB1Y1fN5VruGFDwaFc
q4aXTLx1eMGrGn7l/OOSa60K/25dTWn2SYUvH0k56rdZ4flOv29xnsKXHnKG
/n3pJT5qmxkevOwlvhnmiPzi4hSG5w2svBE2hY0NSav8aydxztym6O2hk+iT
Ef321eoXiD/VgG/IC4yZ9LOkV3kwK654za+vezC7fPQDw4XnGNmzLd4a/Bxv
rLiz4eL5CQw9YFHnMYH2pl/UOYxj9rzFqv7jaEs/pur+DP1/VDIsgc+wbjxH
1XkMY2IfqPqO4amy9aquo3ivXeg5itqQCFXHEZy9y6nqN4K6OqHbU+zycqh6
PcXqhAFVJzducQp93DjWJ3QZxqKV0aoew+hxCB2eoP266P8J5gXNUvt+jK9c
Fv3+hwVxos8h7OgU/Q1i4G7R17+41pip9jOAtgrRhwsTo0T9/+D79aLufvSz
inr78N6AqLMXS74S9fXgijmirkdYXyXq6cZ1q0UdD7H+pji/C9O4OLcTg/rF
efexxVuc046fmsX+bei2iX1bcUeh2O8OttaIfW6huVmsb0Fvl1h3E8+sEs83
YkCReO4alk3f5+ia/v83rJ6+/hkvTf+eRUV+fqBrqKL7IJ+HUloPcj9w0v7g
Q+eBPB9kPbCd6gNZL8j64S/qB4KpP/iI+gXZP8SRHtBA+kAU6QWlpB/cJT1B
6gvvkd5gJf1BzgPkfOA1mhfI+UE+zRNm0HxhH80b5PxB+gGkP0D6BaR/QPoJ
HpC/QEt+A1/yH0g/gvQnnCS/gvQvXCE/QwD5GzaR3yGX/A+plAcIp3zAH5QX
MFN+4GPKE3xO+QIz5Q2uU/5A5hFkPkHmFSIovxBDeYZeyjeEUd5B5p9JHrBy
4gOTvGCSH0zyhC0mvrBbxBvmS/xhTcQj5iY+sb3EK2YhfjEL8YxtJL4xG/GO
hRH/mOQhSyA+skjiJfud+MkkT5me+Mokb1kt8ZdlEI+Z5DOTvGZDxG8mec4k
31kq8Z5J/jMfeh8w+X5g8n3B/gfaK+5E
    "], $CellContext`mirror$$ = "cardioid", $CellContext`nlines$$ = 
    100, $CellContext`pt$$ = {0., 0.}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "cardioid"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 100, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {0., 0.}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1:eJwtlQ1MU1cUx1+/aJ0CxiiTiENkAoqALnVDsu3crcQ4DEamWCmOr8rGpshE
J8bO8RHDZkTQGWVKHWrkQ5dly5aYuWDO3RCFxDCmhiAKIvKxMphSAcEK7l3O
bdI0r+/de8/5n///94Iycj7M1CiK0qh+50fEbvIEzeCRw72JFx6auOtgrTX+
nImbmu1JY2kmfiR2YXLlIhPfprRuXdtl5H0ppSnDlUY+95s1aadTjXywbCrd
EmjkRwov2wc7vXilfWfmie+9eHJMyCfvpnjxGlNnVv9CL57VcuKzox0Gbjwe
v2P1GQMvSTDs7N5q4HWzruYcDjDwiIY9u8z39TzRsXx3R4WeH4vq2VOcrOdL
uyv2Ri3Q8+TjG/e1tev4ZsvM/YWndfwd95+OZTYdZ2f3H7jtr+O58W/kf3lX
y4cmXAVLTml5Q9W5ouYtWu6dkHQwb76W3/bMLl7UpuGB1Y1fN5VruGFDwaFc
q4aXTLx1eMGrGn7l/OOSa60K/25dTWn2SYUvH0k56rdZ4flOv29xnsKXHnKG
/n3pJT5qmxkevOwlvhnmiPzi4hSG5w2svBE2hY0NSav8aydxztym6O2hk+iT
Ef321eoXiD/VgG/IC4yZ9LOkV3kwK654za+vezC7fPQDw4XnGNmzLd4a/Bxv
rLiz4eL5CQw9YFHnMYH2pl/UOYxj9rzFqv7jaEs/pur+DP1/VDIsgc+wbjxH
1XkMY2IfqPqO4amy9aquo3ivXeg5itqQCFXHEZy9y6nqN4K6OqHbU+zycqh6
PcXqhAFVJzducQp93DjWJ3QZxqKV0aoew+hxCB2eoP266P8J5gXNUvt+jK9c
Fv3+hwVxos8h7OgU/Q1i4G7R17+41pip9jOAtgrRhwsTo0T9/+D79aLufvSz
inr78N6AqLMXS74S9fXgijmirkdYXyXq6cZ1q0UdD7H+pji/C9O4OLcTg/rF
efexxVuc046fmsX+bei2iX1bcUeh2O8OttaIfW6huVmsb0Fvl1h3E8+sEs83
YkCReO4alk3f5+ia/v83rJ6+/hkvTf+eRUV+fqBrqKL7IJ+HUloPcj9w0v7g
Q+eBPB9kPbCd6gNZL8j64S/qB4KpP/iI+gXZP8SRHtBA+kAU6QWlpB/cJT1B
6gvvkd5gJf1BzgPkfOA1mhfI+UE+zRNm0HxhH80b5PxB+gGkP0D6BaR/QPoJ
HpC/QEt+A1/yH0g/gvQnnCS/gvQvXCE/QwD5GzaR3yGX/A+plAcIp3zAH5QX
MFN+4GPKE3xO+QIz5Q2uU/5A5hFkPkHmFSIovxBDeYZeyjeEUd5B5p9JHrBy
4gOTvGCSH0zyhC0mvrBbxBvmS/xhTcQj5iY+sb3EK2YhfjEL8YxtJL4xG/GO
hRH/mOQhSyA+skjiJfud+MkkT5me+Mokb1kt8ZdlEI+Z5DOTvGZDxG8mec4k
31kq8Z5J/jMfeh8w+X5g8n3B/gfaK+5E
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12131$$ = 0, $CellContext`nlines$12132$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1:eJwtlQ1MU1cUx1+/aJ0CxiiTiENkAoqALnVDsu3crcQ4DEamWCmOr8rGpshE
J8bO8RHDZkTQGWVKHWrkQ5dly5aYuWDO3RCFxDCmhiAKIvKxMphSAcEK7l3O
bdI0r+/de8/5n///94Iycj7M1CiK0qh+50fEbvIEzeCRw72JFx6auOtgrTX+
nImbmu1JY2kmfiR2YXLlIhPfprRuXdtl5H0ppSnDlUY+95s1aadTjXywbCrd
EmjkRwov2wc7vXilfWfmie+9eHJMyCfvpnjxGlNnVv9CL57VcuKzox0Gbjwe
v2P1GQMvSTDs7N5q4HWzruYcDjDwiIY9u8z39TzRsXx3R4WeH4vq2VOcrOdL
uyv2Ri3Q8+TjG/e1tev4ZsvM/YWndfwd95+OZTYdZ2f3H7jtr+O58W/kf3lX
y4cmXAVLTml5Q9W5ouYtWu6dkHQwb76W3/bMLl7UpuGB1Y1fN5VruGFDwaFc
q4aXTLx1eMGrGn7l/OOSa60K/25dTWn2SYUvH0k56rdZ4flOv29xnsKXHnKG
/n3pJT5qmxkevOwlvhnmiPzi4hSG5w2svBE2hY0NSav8aydxztym6O2hk+iT
Ef321eoXiD/VgG/IC4yZ9LOkV3kwK654za+vezC7fPQDw4XnGNmzLd4a/Bxv
rLiz4eL5CQw9YFHnMYH2pl/UOYxj9rzFqv7jaEs/pur+DP1/VDIsgc+wbjxH
1XkMY2IfqPqO4amy9aquo3ivXeg5itqQCFXHEZy9y6nqN4K6OqHbU+zycqh6
PcXqhAFVJzducQp93DjWJ3QZxqKV0aoew+hxCB2eoP266P8J5gXNUvt+jK9c
Fv3+hwVxos8h7OgU/Q1i4G7R17+41pip9jOAtgrRhwsTo0T9/+D79aLufvSz
inr78N6AqLMXS74S9fXgijmirkdYXyXq6cZ1q0UdD7H+pji/C9O4OLcTg/rF
efexxVuc046fmsX+bei2iX1bcUeh2O8OttaIfW6huVmsb0Fvl1h3E8+sEs83
YkCReO4alk3f5+ia/v83rJ6+/hkvTf+eRUV+fqBrqKL7IJ+HUloPcj9w0v7g
Q+eBPB9kPbCd6gNZL8j64S/qB4KpP/iI+gXZP8SRHtBA+kAU6QWlpB/cJT1B
6gvvkd5gJf1BzgPkfOA1mhfI+UE+zRNm0HxhH80b5PxB+gGkP0D6BaR/QPoJ
HpC/QEt+A1/yH0g/gvQnnCS/gvQvXCE/QwD5GzaR3yGX/A+plAcIp3zAH5QX
MFN+4GPKE3xO+QIz5Q2uU/5A5hFkPkHmFSIovxBDeYZeyjeEUd5B5p9JHrBy
4gOTvGCSH0zyhC0mvrBbxBvmS/xhTcQj5iY+sb3EK2YhfjEL8YxtJL4xG/GO
hRH/mOQhSyA+skjiJfud+MkkT5me+Mokb1kt8ZdlEI+Z5DOTvGZDxG8mec4k
31kq8Z5J/jMfeh8w+X5g8n3B/gfaK+5E
         "], $CellContext`mirror$$ = "cardioid", $CellContext`nlines$$ = 
        100, $CellContext`pt$$ = {0., 0.}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12131$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12132$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "cardioid"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 100, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {0., 0.}}, Automatic, ControlType -> 
         Locator, Appearance -> None}, {{$CellContext`ints$$, CompressedData["
1:eJwtlQ1MU1cUx1+/aJ0CxiiTiENkAoqALnVDsu3crcQ4DEamWCmOr8rGpshE
J8bO8RHDZkTQGWVKHWrkQ5dly5aYuWDO3RCFxDCmhiAKIvKxMphSAcEK7l3O
bdI0r+/de8/5n///94Iycj7M1CiK0qh+50fEbvIEzeCRw72JFx6auOtgrTX+
nImbmu1JY2kmfiR2YXLlIhPfprRuXdtl5H0ppSnDlUY+95s1aadTjXywbCrd
EmjkRwov2wc7vXilfWfmie+9eHJMyCfvpnjxGlNnVv9CL57VcuKzox0Gbjwe
v2P1GQMvSTDs7N5q4HWzruYcDjDwiIY9u8z39TzRsXx3R4WeH4vq2VOcrOdL
uyv2Ri3Q8+TjG/e1tev4ZsvM/YWndfwd95+OZTYdZ2f3H7jtr+O58W/kf3lX
y4cmXAVLTml5Q9W5ouYtWu6dkHQwb76W3/bMLl7UpuGB1Y1fN5VruGFDwaFc
q4aXTLx1eMGrGn7l/OOSa60K/25dTWn2SYUvH0k56rdZ4flOv29xnsKXHnKG
/n3pJT5qmxkevOwlvhnmiPzi4hSG5w2svBE2hY0NSav8aydxztym6O2hk+iT
Ef321eoXiD/VgG/IC4yZ9LOkV3kwK654za+vezC7fPQDw4XnGNmzLd4a/Bxv
rLiz4eL5CQw9YFHnMYH2pl/UOYxj9rzFqv7jaEs/pur+DP1/VDIsgc+wbjxH
1XkMY2IfqPqO4amy9aquo3ivXeg5itqQCFXHEZy9y6nqN4K6OqHbU+zycqh6
PcXqhAFVJzducQp93DjWJ3QZxqKV0aoew+hxCB2eoP266P8J5gXNUvt+jK9c
Fv3+hwVxos8h7OgU/Q1i4G7R17+41pip9jOAtgrRhwsTo0T9/+D79aLufvSz
inr78N6AqLMXS74S9fXgijmirkdYXyXq6cZ1q0UdD7H+pji/C9O4OLcTg/rF
efexxVuc046fmsX+bei2iX1bcUeh2O8OttaIfW6huVmsb0Fvl1h3E8+sEs83
YkCReO4alk3f5+ia/v83rJ6+/hkvTf+eRUV+fqBrqKL7IJ+HUloPcj9w0v7g
Q+eBPB9kPbCd6gNZL8j64S/qB4KpP/iI+gXZP8SRHtBA+kAU6QWlpB/cJT1B
6gvvkd5gJf1BzgPkfOA1mhfI+UE+zRNm0HxhH80b5PxB+gGkP0D6BaR/QPoJ
HpC/QEt+A1/yH0g/gvQnnCS/gvQvXCE/QwD5GzaR3yGX/A+plAcIp3zAH5QX
MFN+4GPKE3xO+QIz5Q2uU/5A5hFkPkHmFSIovxBDeYZeyjeEUd5B5p9JHrBy
4gOTvGCSH0zyhC0mvrBbxBvmS/xhTcQj5iY+sb3EK2YhfjEL8YxtJL4xG/GO
hRH/mOQhSyA+skjiJfud+MkkT5me+Mokb1kt8ZdlEI+Z5DOTvGZDxG8mec4k
31kq8Z5J/jMfeh8w+X5g8n3B/gfaK+5E
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[
        Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->87380646],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1:eJwNlWc8ln0bx3ON8zxR9p0migaFSNG6j79oEykJRZQtIqkQJVI0VVbc8UhJ
UomQcf5lVPYqe1725rJHHq++b76f3+84XhyfY525o54Fz5IlSwIZS5bkZ+t/
VF7Hiz0Zc75GK3lxo9ja4lvCvLg6kj4Xw8uLw/TShH7y8OKTonFZ3dMU1lKa
BHKUwilX8+2leyl8feP0mn1tFFYZ3bj5VB2FObkhFtYVFCbvaMTfKKDwx3ff
K/y+U3hPud7HwG8UbhcqEg9LpHAHCm+NiKOwwMrs1oj/UdhJ9nt/aBiF8+Li
/jwNpPC8NPOKrz+FLdsKnrt4U/h/6k4Cpm4UtsYlnzWdKezWvFZ3g+1iTj43
bYk5hWsT1Og/hhQ+Qkkpvj1B4WdmUjVORyhsyOzz26lOYXP1C/zjaot97i8U
PmyjcF3+hwyTzRTu0hj04pWi8KWlMeofxCl8L2ddwRFBCnulxrU0ERQ2CnU6
Zv+XxGsT/EpHxkkc86J8m+PAIj1mlNrbSZyXb/lct4HE1us2rkiqJPH4RLu7
QCGJR9QaPUy/k/iRa/6fN2kkvquSp9H+icQOboYe4rEk/nRPSxW9IvHjdxGy
JkEkdhNwIJwekrj/XZ/ndR8Sj43t3u/iTmLeR6bzF5xJHBQhbXzIhsTMvnmm
xHkSnwuYiOg6TeIuIf+iaG0SV0sFbNPTJLGxHsN6dDeJA1WXCvgokdjZIfkb
sZnEv59XMdwkSKw12XqtUYzERaVFb7fxkziCU7zmCg+JS7VVz72eJDCxT70v
Z4DALKtKzXIOgdUGj3IKawms7rh3z5dSAv9tV8q4m0fgct6LZQfSCZxb6dAw
9InA218tAZ83BL785I4uI5zAErHY3OYpgYOm3HHqXQJrGPJ+GHInMKe95sIy
JwL33JgRF7Yk8MK5YO60EYHD+M3Ef+gQeExkLPSa5qL/R96PbxeBH36/0uwp
T+AAt96gynUE/rbz5XNy+aJ/wffzSj4CP9MMS6H+sjGfWOT5yhE23ounT13v
YOOwWR25iRo2LmwUNz9WxMb8uaNWrvSid73t8dVENlZuPiZ2KIaNX/tni/YE
s3Gn7aNHhv5s7Ptq8kKQBxt/KpHTiXBgY4/nRRy782x8zHCF/8IJNk6TvuWm
r8HGxOuUVFsVNlZ4JSywdwMba5YLM/P/YWM5ccEaFsHGDb/TPMbGWfhLou7d
Jx0s/GmTukxVFQsb32gV+ZbDwj6DDQF7E1n4zYmy7fqRLLzV14k1/5CF5VQc
lLe6s7Du+OCyOisWppcbNMydZGG04+K7+8DCH6zkl7nIsbDmwTDOBzEW/qEV
PrzxLxN/DfK3Lepk4qRcSbN7JUxsc1WBi5KZOJVv07/VYUws672ta4MXE3NT
bvAtmDEx8HftkdVgYkZbPGG8nonfVX5p3b7AwD/tvV9sq2XgOzu49UEfGXjJ
f26Ox28zsJ54sONDLQb+EJc6xBBg4FYjPtXZTB489UzGl2cvD246k5tuuH8J
/vldbPDphQU6o42T943/L11x3KJJ9c1f+ocBEO588/SEx2eZRJ95Wvtf05In
inO0Zhnr1q3QOfqOtFWzheAsPSR7N8rabpbutHNYs7Nwlha9WJPevXSGnnQI
bXh0foY+6J5jH/p1hn7NWXnt6dppWvnQQupru2maO8h+apQ+Tctvq3M8OzpJ
1zfnSN7YM0XnBq2di/Sdogumu8pHy6bo9dnhoRprJumFhRN6teaT9KHVRpcU
4ybpvO3Gsj3kBJ0pqft5n9YEXfluCqinE/Tn46fDDf9M0Gf6hPH89BjtslAZ
IrpvnE7OvSJ54dY43exbmjaTM07fD9FuLxzk0sKXWOn3lMZoR85754MuY7TW
43RL0ZQxekHe4nVi2yj9XLdrgLWRS6eG3r2/0oZL/zieuZsnnktXdj/66FM+
QkfcDC59vHyUZgeObF1qPEpb6R8rEXo1Ss87RSvMzA/TaQI5L88cGKHDMvpV
ygNGaK9Th04bxA7RQdEHNdqkhull3XITg3bDtLTnroNPkofpSrU+FZ3sAdoz
ePnkhPUgHb2Le3Ceb4jmut7I1g7to0U/vS94YdxPJ9Vfdf4uMkALRthNf2zt
ofUrs7gSP3vpnLE9Cz5Pu+i1NXwF2bXd9Jbk8xJ271ppr4LeGp2XLXR7sWqp
1ctm+txbLfHHGk10VtqP/4KWN9JNGhoBBWQDHbluvipQsJ6eVn3ImNxcRxfI
T3h66dbSqhvkBKLv1NAC9jW/XHA17TfwY9qZXU0n6jjNWJ34Q0fpvI7Xj/5N
7+n5ecZqpor++lgloUu/imaNBrvuSq6kq649X1MhXkkfXJF7ZcfNCnrdrjvn
R9vLabOY8NWRx8vpt65fW+rTyujDd4XaDm4so4lCiXxqUykN5jUZjowSuuWK
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
i8U00ODnRV/7eb6Ji/KizdwnagOreNH/AVnAKgY=
    "], $CellContext`mirror$$ = "deltoid", $CellContext`nlines$$ = 
    1000, $CellContext`pt$$ = {1.92, 0.205}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "deltoid"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 1000, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {1.92, 0.205}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1:eJwNlWc8ln0bx3ON8zxR9p0migaFSNG6j79oEykJRZQtIqkQJVI0VVbc8UhJ
UomQcf5lVPYqe1725rJHHq++b76f3+84XhyfY525o54Fz5IlSwIZS5bkZ+t/
VF7Hiz0Zc75GK3lxo9ja4lvCvLg6kj4Xw8uLw/TShH7y8OKTonFZ3dMU1lKa
BHKUwilX8+2leyl8feP0mn1tFFYZ3bj5VB2FObkhFtYVFCbvaMTfKKDwx3ff
K/y+U3hPud7HwG8UbhcqEg9LpHAHCm+NiKOwwMrs1oj/UdhJ9nt/aBiF8+Li
/jwNpPC8NPOKrz+FLdsKnrt4U/h/6k4Cpm4UtsYlnzWdKezWvFZ3g+1iTj43
bYk5hWsT1Og/hhQ+Qkkpvj1B4WdmUjVORyhsyOzz26lOYXP1C/zjaot97i8U
PmyjcF3+hwyTzRTu0hj04pWi8KWlMeofxCl8L2ddwRFBCnulxrU0ERQ2CnU6
Zv+XxGsT/EpHxkkc86J8m+PAIj1mlNrbSZyXb/lct4HE1us2rkiqJPH4RLu7
QCGJR9QaPUy/k/iRa/6fN2kkvquSp9H+icQOboYe4rEk/nRPSxW9IvHjdxGy
JkEkdhNwIJwekrj/XZ/ndR8Sj43t3u/iTmLeR6bzF5xJHBQhbXzIhsTMvnmm
xHkSnwuYiOg6TeIuIf+iaG0SV0sFbNPTJLGxHsN6dDeJA1WXCvgokdjZIfkb
sZnEv59XMdwkSKw12XqtUYzERaVFb7fxkziCU7zmCg+JS7VVz72eJDCxT70v
Z4DALKtKzXIOgdUGj3IKawms7rh3z5dSAv9tV8q4m0fgct6LZQfSCZxb6dAw
9InA218tAZ83BL785I4uI5zAErHY3OYpgYOm3HHqXQJrGPJ+GHInMKe95sIy
JwL33JgRF7Yk8MK5YO60EYHD+M3Ef+gQeExkLPSa5qL/R96PbxeBH36/0uwp
T+AAt96gynUE/rbz5XNy+aJ/wffzSj4CP9MMS6H+sjGfWOT5yhE23ounT13v
YOOwWR25iRo2LmwUNz9WxMb8uaNWrvSid73t8dVENlZuPiZ2KIaNX/tni/YE
s3Gn7aNHhv5s7Ptq8kKQBxt/KpHTiXBgY4/nRRy782x8zHCF/8IJNk6TvuWm
r8HGxOuUVFsVNlZ4JSywdwMba5YLM/P/YWM5ccEaFsHGDb/TPMbGWfhLou7d
Jx0s/GmTukxVFQsb32gV+ZbDwj6DDQF7E1n4zYmy7fqRLLzV14k1/5CF5VQc
lLe6s7Du+OCyOisWppcbNMydZGG04+K7+8DCH6zkl7nIsbDmwTDOBzEW/qEV
PrzxLxN/DfK3Lepk4qRcSbN7JUxsc1WBi5KZOJVv07/VYUws672ta4MXE3NT
bvAtmDEx8HftkdVgYkZbPGG8nonfVX5p3b7AwD/tvV9sq2XgOzu49UEfGXjJ
f26Ox28zsJ54sONDLQb+EJc6xBBg4FYjPtXZTB489UzGl2cvD246k5tuuH8J
/vldbPDphQU6o42T943/L11x3KJJ9c1f+ocBEO588/SEx2eZRJ95Wvtf05In
inO0Zhnr1q3QOfqOtFWzheAsPSR7N8rabpbutHNYs7Nwlha9WJPevXSGnnQI
bXh0foY+6J5jH/p1hn7NWXnt6dppWvnQQupru2maO8h+apQ+Tctvq3M8OzpJ
1zfnSN7YM0XnBq2di/Sdogumu8pHy6bo9dnhoRprJumFhRN6teaT9KHVRpcU
4ybpvO3Gsj3kBJ0pqft5n9YEXfluCqinE/Tn46fDDf9M0Gf6hPH89BjtslAZ
IrpvnE7OvSJ54dY43exbmjaTM07fD9FuLxzk0sKXWOn3lMZoR85754MuY7TW
43RL0ZQxekHe4nVi2yj9XLdrgLWRS6eG3r2/0oZL/zieuZsnnktXdj/66FM+
QkfcDC59vHyUZgeObF1qPEpb6R8rEXo1Ss87RSvMzA/TaQI5L88cGKHDMvpV
ygNGaK9Th04bxA7RQdEHNdqkhull3XITg3bDtLTnroNPkofpSrU+FZ3sAdoz
ePnkhPUgHb2Le3Ceb4jmut7I1g7to0U/vS94YdxPJ9Vfdf4uMkALRthNf2zt
ofUrs7gSP3vpnLE9Cz5Pu+i1NXwF2bXd9Jbk8xJ271ppr4LeGp2XLXR7sWqp
1ctm+txbLfHHGk10VtqP/4KWN9JNGhoBBWQDHbluvipQsJ6eVn3ImNxcRxfI
T3h66dbSqhvkBKLv1NAC9jW/XHA17TfwY9qZXU0n6jjNWJ34Q0fpvI7Xj/5N
7+n5ecZqpor++lgloUu/imaNBrvuSq6kq649X1MhXkkfXJF7ZcfNCnrdrjvn
R9vLabOY8NWRx8vpt65fW+rTyujDd4XaDm4so4lCiXxqUykN5jUZjowSuuWK
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
i8U00ODnRV/7eb6Ji/KizdwnagOreNH/AVnAKgY=
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12192$$ = 0, $CellContext`nlines$12193$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1:eJwNlWc8ln0bx3ON8zxR9p0migaFSNG6j79oEykJRZQtIqkQJVI0VVbc8UhJ
UomQcf5lVPYqe1725rJHHq++b76f3+84XhyfY525o54Fz5IlSwIZS5bkZ+t/
VF7Hiz0Zc75GK3lxo9ja4lvCvLg6kj4Xw8uLw/TShH7y8OKTonFZ3dMU1lKa
BHKUwilX8+2leyl8feP0mn1tFFYZ3bj5VB2FObkhFtYVFCbvaMTfKKDwx3ff
K/y+U3hPud7HwG8UbhcqEg9LpHAHCm+NiKOwwMrs1oj/UdhJ9nt/aBiF8+Li
/jwNpPC8NPOKrz+FLdsKnrt4U/h/6k4Cpm4UtsYlnzWdKezWvFZ3g+1iTj43
bYk5hWsT1Og/hhQ+Qkkpvj1B4WdmUjVORyhsyOzz26lOYXP1C/zjaot97i8U
PmyjcF3+hwyTzRTu0hj04pWi8KWlMeofxCl8L2ddwRFBCnulxrU0ERQ2CnU6
Zv+XxGsT/EpHxkkc86J8m+PAIj1mlNrbSZyXb/lct4HE1us2rkiqJPH4RLu7
QCGJR9QaPUy/k/iRa/6fN2kkvquSp9H+icQOboYe4rEk/nRPSxW9IvHjdxGy
JkEkdhNwIJwekrj/XZ/ndR8Sj43t3u/iTmLeR6bzF5xJHBQhbXzIhsTMvnmm
xHkSnwuYiOg6TeIuIf+iaG0SV0sFbNPTJLGxHsN6dDeJA1WXCvgokdjZIfkb
sZnEv59XMdwkSKw12XqtUYzERaVFb7fxkziCU7zmCg+JS7VVz72eJDCxT70v
Z4DALKtKzXIOgdUGj3IKawms7rh3z5dSAv9tV8q4m0fgct6LZQfSCZxb6dAw
9InA218tAZ83BL785I4uI5zAErHY3OYpgYOm3HHqXQJrGPJ+GHInMKe95sIy
JwL33JgRF7Yk8MK5YO60EYHD+M3Ef+gQeExkLPSa5qL/R96PbxeBH36/0uwp
T+AAt96gynUE/rbz5XNy+aJ/wffzSj4CP9MMS6H+sjGfWOT5yhE23ounT13v
YOOwWR25iRo2LmwUNz9WxMb8uaNWrvSid73t8dVENlZuPiZ2KIaNX/tni/YE
s3Gn7aNHhv5s7Ptq8kKQBxt/KpHTiXBgY4/nRRy782x8zHCF/8IJNk6TvuWm
r8HGxOuUVFsVNlZ4JSywdwMba5YLM/P/YWM5ccEaFsHGDb/TPMbGWfhLou7d
Jx0s/GmTukxVFQsb32gV+ZbDwj6DDQF7E1n4zYmy7fqRLLzV14k1/5CF5VQc
lLe6s7Du+OCyOisWppcbNMydZGG04+K7+8DCH6zkl7nIsbDmwTDOBzEW/qEV
PrzxLxN/DfK3Lepk4qRcSbN7JUxsc1WBi5KZOJVv07/VYUws672ta4MXE3NT
bvAtmDEx8HftkdVgYkZbPGG8nonfVX5p3b7AwD/tvV9sq2XgOzu49UEfGXjJ
f26Ox28zsJ54sONDLQb+EJc6xBBg4FYjPtXZTB489UzGl2cvD246k5tuuH8J
/vldbPDphQU6o42T943/L11x3KJJ9c1f+ocBEO588/SEx2eZRJ95Wvtf05In
inO0Zhnr1q3QOfqOtFWzheAsPSR7N8rabpbutHNYs7Nwlha9WJPevXSGnnQI
bXh0foY+6J5jH/p1hn7NWXnt6dppWvnQQupru2maO8h+apQ+Tctvq3M8OzpJ
1zfnSN7YM0XnBq2di/Sdogumu8pHy6bo9dnhoRprJumFhRN6teaT9KHVRpcU
4ybpvO3Gsj3kBJ0pqft5n9YEXfluCqinE/Tn46fDDf9M0Gf6hPH89BjtslAZ
IrpvnE7OvSJ54dY43exbmjaTM07fD9FuLxzk0sKXWOn3lMZoR85754MuY7TW
43RL0ZQxekHe4nVi2yj9XLdrgLWRS6eG3r2/0oZL/zieuZsnnktXdj/66FM+
QkfcDC59vHyUZgeObF1qPEpb6R8rEXo1Ss87RSvMzA/TaQI5L88cGKHDMvpV
ygNGaK9Th04bxA7RQdEHNdqkhull3XITg3bDtLTnroNPkofpSrU+FZ3sAdoz
ePnkhPUgHb2Le3Ceb4jmut7I1g7to0U/vS94YdxPJ9Vfdf4uMkALRthNf2zt
ofUrs7gSP3vpnLE9Cz5Pu+i1NXwF2bXd9Jbk8xJ271ppr4LeGp2XLXR7sWqp
1ctm+txbLfHHGk10VtqP/4KWN9JNGhoBBWQDHbluvipQsJ6eVn3ImNxcRxfI
T3h66dbSqhvkBKLv1NAC9jW/XHA17TfwY9qZXU0n6jjNWJ34Q0fpvI7Xj/5N
7+n5ecZqpor++lgloUu/imaNBrvuSq6kq649X1MhXkkfXJF7ZcfNCnrdrjvn
R9vLabOY8NWRx8vpt65fW+rTyujDd4XaDm4so4lCiXxqUykN5jUZjowSuuWK
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
i8U00ODnRV/7eb6Ji/KizdwnagOreNH/AVnAKgY=
         "], $CellContext`mirror$$ = "deltoid", $CellContext`nlines$$ = 
        1000, $CellContext`pt$$ = {1.92, 0.205}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12192$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12193$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "deltoid"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 1000, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {1.92, 0.205}}, Automatic, 
         ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ints$$, CompressedData["
1:eJwNlWc8ln0bx3ON8zxR9p0migaFSNG6j79oEykJRZQtIqkQJVI0VVbc8UhJ
UomQcf5lVPYqe1725rJHHq++b76f3+84XhyfY525o54Fz5IlSwIZS5bkZ+t/
VF7Hiz0Zc75GK3lxo9ja4lvCvLg6kj4Xw8uLw/TShH7y8OKTonFZ3dMU1lKa
BHKUwilX8+2leyl8feP0mn1tFFYZ3bj5VB2FObkhFtYVFCbvaMTfKKDwx3ff
K/y+U3hPud7HwG8UbhcqEg9LpHAHCm+NiKOwwMrs1oj/UdhJ9nt/aBiF8+Li
/jwNpPC8NPOKrz+FLdsKnrt4U/h/6k4Cpm4UtsYlnzWdKezWvFZ3g+1iTj43
bYk5hWsT1Og/hhQ+Qkkpvj1B4WdmUjVORyhsyOzz26lOYXP1C/zjaot97i8U
PmyjcF3+hwyTzRTu0hj04pWi8KWlMeofxCl8L2ddwRFBCnulxrU0ERQ2CnU6
Zv+XxGsT/EpHxkkc86J8m+PAIj1mlNrbSZyXb/lct4HE1us2rkiqJPH4RLu7
QCGJR9QaPUy/k/iRa/6fN2kkvquSp9H+icQOboYe4rEk/nRPSxW9IvHjdxGy
JkEkdhNwIJwekrj/XZ/ndR8Sj43t3u/iTmLeR6bzF5xJHBQhbXzIhsTMvnmm
xHkSnwuYiOg6TeIuIf+iaG0SV0sFbNPTJLGxHsN6dDeJA1WXCvgokdjZIfkb
sZnEv59XMdwkSKw12XqtUYzERaVFb7fxkziCU7zmCg+JS7VVz72eJDCxT70v
Z4DALKtKzXIOgdUGj3IKawms7rh3z5dSAv9tV8q4m0fgct6LZQfSCZxb6dAw
9InA218tAZ83BL785I4uI5zAErHY3OYpgYOm3HHqXQJrGPJ+GHInMKe95sIy
JwL33JgRF7Yk8MK5YO60EYHD+M3Ef+gQeExkLPSa5qL/R96PbxeBH36/0uwp
T+AAt96gynUE/rbz5XNy+aJ/wffzSj4CP9MMS6H+sjGfWOT5yhE23ounT13v
YOOwWR25iRo2LmwUNz9WxMb8uaNWrvSid73t8dVENlZuPiZ2KIaNX/tni/YE
s3Gn7aNHhv5s7Ptq8kKQBxt/KpHTiXBgY4/nRRy782x8zHCF/8IJNk6TvuWm
r8HGxOuUVFsVNlZ4JSywdwMba5YLM/P/YWM5ccEaFsHGDb/TPMbGWfhLou7d
Jx0s/GmTukxVFQsb32gV+ZbDwj6DDQF7E1n4zYmy7fqRLLzV14k1/5CF5VQc
lLe6s7Du+OCyOisWppcbNMydZGG04+K7+8DCH6zkl7nIsbDmwTDOBzEW/qEV
PrzxLxN/DfK3Lepk4qRcSbN7JUxsc1WBi5KZOJVv07/VYUws672ta4MXE3NT
bvAtmDEx8HftkdVgYkZbPGG8nonfVX5p3b7AwD/tvV9sq2XgOzu49UEfGXjJ
f26Ox28zsJ54sONDLQb+EJc6xBBg4FYjPtXZTB489UzGl2cvD246k5tuuH8J
/vldbPDphQU6o42T943/L11x3KJJ9c1f+ocBEO588/SEx2eZRJ95Wvtf05In
inO0Zhnr1q3QOfqOtFWzheAsPSR7N8rabpbutHNYs7Nwlha9WJPevXSGnnQI
bXh0foY+6J5jH/p1hn7NWXnt6dppWvnQQupru2maO8h+apQ+Tctvq3M8OzpJ
1zfnSN7YM0XnBq2di/Sdogumu8pHy6bo9dnhoRprJumFhRN6teaT9KHVRpcU
4ybpvO3Gsj3kBJ0pqft5n9YEXfluCqinE/Tn46fDDf9M0Gf6hPH89BjtslAZ
IrpvnE7OvSJ54dY43exbmjaTM07fD9FuLxzk0sKXWOn3lMZoR85754MuY7TW
43RL0ZQxekHe4nVi2yj9XLdrgLWRS6eG3r2/0oZL/zieuZsnnktXdj/66FM+
QkfcDC59vHyUZgeObF1qPEpb6R8rEXo1Ss87RSvMzA/TaQI5L88cGKHDMvpV
ygNGaK9Th04bxA7RQdEHNdqkhull3XITg3bDtLTnroNPkofpSrU+FZ3sAdoz
ePnkhPUgHb2Le3Ceb4jmut7I1g7to0U/vS94YdxPJ9Vfdf4uMkALRthNf2zt
ofUrs7gSP3vpnLE9Cz5Pu+i1NXwF2bXd9Jbk8xJ271ppr4LeGp2XLXR7sWqp
1ctm+txbLfHHGk10VtqP/4KWN9JNGhoBBWQDHbluvipQsJ6eVn3ImNxcRxfI
T3h66dbSqhvkBKLv1NAC9jW/XHA17TfwY9qZXU0n6jjNWJ34Q0fpvI7Xj/5N
7+n5ecZqpor++lgloUu/imaNBrvuSq6kq649X1MhXkkfXJF7ZcfNCnrdrjvn
R9vLabOY8NWRx8vpt65fW+rTyujDd4XaDm4so4lCiXxqUykN5jUZjowSuuWK
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
i8U00ODnRV/7eb6Ji/KizdwnagOreNH/AVnAKgY=
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->757067156],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1: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
    "], $CellContext`mirror$$ = "sine", $CellContext`nlines$$ = 
    500, $CellContext`pt$$ = {1.5707963267948966`, 0.98758}, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "sine"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 500, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {1.5707963267948966`, 0.98758}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1: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
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12253$$ = 0, $CellContext`nlines$12254$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1: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
         "], $CellContext`mirror$$ = "sine", $CellContext`nlines$$ = 
        500, $CellContext`pt$$ = {1.5707963267948966`, 0.98758}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12253$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12254$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "sine"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 500, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {1.5707963267948966`, 0.98758}}, 
         Automatic, ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ints$$, CompressedData["
1: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
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1666979],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1: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
ypb/CbtiI5gWzJ/wf5HEbs8=
    "], $CellContext`mirror$$ = "cissoid", $CellContext`nlines$$ = 
    500, $CellContext`pt$$ = {0.5615, -1.072}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "cissoid"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 500, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {0.5615, -1.072}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1: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
ypb/CbtiI5gWzJ/wf5HEbs8=
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12314$$ = 0, $CellContext`nlines$12315$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1: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
ypb/CbtiI5gWzJ/wf5HEbs8=
         "], $CellContext`mirror$$ = "cissoid", $CellContext`nlines$$ = 
        500, $CellContext`pt$$ = {0.5615, -1.072}}, "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12314$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12315$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "cissoid"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 500, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {0.5615, -1.072}}, Automatic, 
         ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ints$$, CompressedData["
1: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
ypb/CbtiI5gWzJ/wf5HEbs8=
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->375542462],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ints$$ = CompressedData["
1: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
    "], $CellContext`mirror$$ = "node", $CellContext`nlines$$ = 
    100, $CellContext`pt$$ = {-2.6666666666666665`, 0.}, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {
    "\"circle \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "circle"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {
         Cos[17. (Pi/200)], -Sin[17. (Pi/200)]}), 
     "\"ellipse \[Rule] embryonic\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {2.175, 1.448}), 
     "\"ellipse \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "ellipse"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.5, 0.63}), 
     "\"parabola \[Rule] parabolic fog\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.225, 0.}), 
     "\"parabola \[Rule] node\"" :> ($CellContext`mirror$$ = 
       "parabola"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {0.25, -20.}), 
     "\"polynomial \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 1000; $CellContext`pt$$ = {1.33, 0.}), 
     "\"polynomial \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "poly"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.271, -0.068}), 
     "\"sine \[Rule] no. 1\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {-1.135, -0.54}), 
     "\"sine \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "sine"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {Pi/2., 0.98758}), 
     "\"cardioid \[Rule] nephroid\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., 0.}),
      "\"cardioid \[Rule] no. 2\"" :> ($CellContext`mirror$$ = 
       "cardioid"; $CellContext`nlines$$ = 
       200; $CellContext`pt$$ = {0.0708, -0.933}), 
     "\"deltoid \[Rule] deltoid comet\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {1.92, 0.205}), 
     "\"deltoid \[Rule] psuedo-astroid\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       1000; $CellContext`pt$$ = {15., 0.}), 
     "\"deltoid \[Rule] supersonic\"" :> ($CellContext`mirror$$ = 
       "deltoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {-1.935, 0.}), 
     "\"cissoid \[Rule] cardioid\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 100; $CellContext`pt$$ = {0., -4.}),
      "\"cissoid \[Rule] mountain range\"" :> ($CellContext`mirror$$ = 
       "cissoid"; $CellContext`nlines$$ = 
       500; $CellContext`pt$$ = {0.5615, -1.072}), 
     "\"spiral \[Rule] spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 200; $CellContext`pt$$ = {0., 0.}), 
     "\"spiral \[Rule] cuspy spiral\"" :> ($CellContext`mirror$$ = 
       "spiral"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {0.21, -0.54}), 
     "\"node \[Rule] cusp\"" :> ($CellContext`mirror$$ = 
       "node"; $CellContext`nlines$$ = 
       100; $CellContext`pt$$ = {(-8)/3., 0.})}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mirror$$], "node"}, {
      "circle", "ellipse", "parabola", "poly", "sine", "cardioid", "deltoid", 
       "cissoid", "spiral", "node"}}, {{
       Hold[$CellContext`nlines$$], 100, "rays"}, {
      10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
       1000 -> 2000, 2000 -> 4000}}, {{
       Hold[$CellContext`pt$$], {-2.6666666666666665`, 0.}}, Automatic}, {{
       Hold[$CellContext`ints$$], CompressedData["
1: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
       "]}, 0}}, Typeset`size$$ = {450., {223., 227.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mirror$12375$$ = 0, $CellContext`nlines$12376$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ints$$ = CompressedData["
1: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
         "], $CellContext`mirror$$ = "node", $CellContext`nlines$$ = 
        100, $CellContext`pt$$ = {-2.6666666666666665`, 0.}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`mirror$$, $CellContext`mirror$12375$$, 0], 
        Hold[$CellContext`nlines$$, $CellContext`nlines$12376$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`mirrorPlot$, \
$CellContext`angleData$, $CellContext`tdom$}, $CellContext`data$ = 
         ReplaceAll[$CellContext`mirror$$, $CellContext`$causticDB]; \
$CellContext`tdom$ = ReplaceAll["MirrorPlotDomain", $CellContext`data$]; 
        With[{$CellContext`px$ = 
           ReplaceAll["Xt", $CellContext`data$], $CellContext`py$ = 
           ReplaceAll["Yt", $CellContext`data$], $CellContext`t1$ = 
           Part[$CellContext`tdom$, 1], $CellContext`t2$ = 
           Part[$CellContext`tdom$, 2], $CellContext`r$ = 
           Part[$CellContext`pt$$, 1] + 1. 10^(-11), $CellContext`s$ = 
           Part[$CellContext`pt$$, 2], $CellContext`nlines$ = 
           ControlActive[10, $CellContext`nlines$$], $CellContext`plotRange$ = 
           ReplaceAll["PlotRange", $CellContext`data$]}, 
          
          With[{$CellContext`sol$ = {$CellContext`x -> ($CellContext`r$ \
(-$CellContext`s$ + $CellContext`py$[$CellContext`t]) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 + \
($CellContext`r$^2 - 
                  2 $CellContext`s$^2 - $CellContext`r$ \
$CellContext`px$[$CellContext`t] + 
                  4 $CellContext`s$ $CellContext`py$[$CellContext`t] - 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[1][$CellContext`px$][$CellContext`t]^2 
                 Derivative[1][$CellContext`py$][$CellContext`t] - 
                Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$^2 - 
                   3 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                   2 $CellContext`px$[$CellContext`t]^2) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((3 $CellContext`r$ - 
                    4 $CellContext`px$[$CellContext`t]) ($CellContext`s$ - \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`px$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t])), $CellContext`y -> \
(($CellContext`s$^2 - 3 $CellContext`s$ $CellContext`py$[$CellContext`t] + 
                  2 $CellContext`py$[$CellContext`t]^2) 
                 Derivative[
                   1][$CellContext`px$][$CellContext`t]^3 - ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) (3 $CellContext`s$ - 
                 4 $CellContext`py$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
                Derivative[
                  1][$CellContext`py$][$CellContext`t] ($CellContext`s$ \
($CellContext`r$ - $CellContext`px$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[2][$CellContext`px$][$CellContext`t]) + 
                Derivative[
                  1][$CellContext`px$][$CellContext`t] ((
                    2 $CellContext`r$^2 - $CellContext`s$^2 - 
                    4 $CellContext`r$ $CellContext`px$[$CellContext`t] + 
                    2 $CellContext`px$[$CellContext`t]^2 + $CellContext`s$ \
$CellContext`py$[$CellContext`t]) 
                   Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                  2 $CellContext`py$[$CellContext`t] ($CellContext`r$^2 + \
$CellContext`s$^2 - 
                    2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                    2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                   Derivative[
                    2][$CellContext`py$][$CellContext`t]))/((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                Derivative[
                  1][$CellContext`px$][$CellContext`t]^3 + ($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                Derivative[1][$CellContext`px$][$CellContext`t]^2 
                Derivative[1][$CellContext`py$][$CellContext`t] + 
               Derivative[
                 1][$CellContext`py$][$CellContext`t] (($CellContext`r$ - \
$CellContext`px$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 - 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                  2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                  2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                 Derivative[2][$CellContext`px$][$CellContext`t]) + 
               Derivative[
                 1][$CellContext`px$][$CellContext`t] ((-$CellContext`s$ + \
$CellContext`py$[$CellContext`t]) 
                  Derivative[1][$CellContext`py$][$CellContext`t]^2 + 
                 2 ($CellContext`r$^2 + $CellContext`s$^2 - 
                   2 $CellContext`r$ $CellContext`px$[$CellContext`t] + \
$CellContext`px$[$CellContext`t]^2 - 
                   2 $CellContext`s$ $CellContext`py$[$CellContext`t] + \
$CellContext`py$[$CellContext`t]^2) 
                  Derivative[
                   2][$CellContext`py$][$CellContext`t]))}}, \
{$CellContext`mirrorPlot$, {$CellContext`angleData$}} = Reap[
              ParametricPlot[
               Evaluate[{
                 $CellContext`px$[$CellContext`t], 
                 $CellContext`py$[$CellContext`t]}], {$CellContext`t, \
$CellContext`t1$, $CellContext`t2$}, PlotStyle -> {Thick, 
                 ColorData[1][2]}, PlotPoints -> 
               ControlActive[Automatic, 100], EvaluationMonitor :> 
               Sow[{$CellContext`t, 
                  
                  ArcTan[$CellContext`px$[$CellContext`t] - $CellContext`r$, \
$CellContext`py$[$CellContext`t] - $CellContext`s$]}]]]; \
$CellContext`angleData$ = Sort[$CellContext`angleData$]; $CellContext`ints$$ = 
            If[$CellContext`nlines$ >= 50, 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Part[#, 1, 2]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] - 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    Table[
                    ReplaceAll[$CellContext`t, 
                    Quiet[
                    With[{$CellContext`\[Theta]$ = $CellContext`\[Theta]}, 
                    FindRoot[
                    Cos[$CellContext`\[Theta]$] \
($CellContext`py$[$CellContext`t] - $CellContext`s$) == 
                    Sin[$CellContext`\[Theta]$] \
($CellContext`px$[$CellContext`t] - $CellContext`r$), {$CellContext`t, \
$CellContext`\[Tau]1$ + (($CellContext`\[Theta]$ - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), $CellContext`t1$, \
$CellContext`t2$}]]]], {$CellContext`\[Theta], $CellContext`\[Theta]0$, \
$CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]], 
              Flatten[
               MapThread[
                Function[{$CellContext`x$, $CellContext`y$}, 
                 (
                 With[{$CellContext`\[Tau]1$ = 
                   Part[#, 1, 1], $CellContext`\[Tau]2$ = 
                   Part[#, 2, 1], $CellContext`\[Theta]1$ = Mod[
                    Part[#, 1, 2], 2 Pi, Part[#, 1, 2] + Pi]}, 
                  With[{$CellContext`\[Theta]2$ = Mod[
                    Part[#, 2, 2], 2 Pi, Part[#, 1, 2] + 
                    Pi], $CellContext`\[Theta]0$ = 
                    Ceiling[$CellContext`\[Theta]1$, 
                    Pi/$CellContext`nlines$]}, 
                   If[$CellContext`\[Theta]0$ < $CellContext`\[Theta]2$, 
                    
                    Table[$CellContext`\[Tau]1$ + (($CellContext`\[Theta] - \
$CellContext`\[Theta]1$)/($CellContext`\[Theta]2$ - $CellContext`\[Theta]1$)) \
($CellContext`\[Tau]2$ - $CellContext`\[Tau]1$), {$CellContext`\[Theta], \
$CellContext`\[Theta]0$, $CellContext`\[Theta]2$, Pi/$CellContext`nlines$}], 
                    
                    If[$CellContext`\[Theta]0$ == $CellContext`\[Theta]2$, \
{$CellContext`\[Tau]2$}, {}]]]]& )[
                  If[Mod[
                    Part[$CellContext`x$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi] < Mod[
                    Part[$CellContext`y$, 2], 2 Pi, Part[$CellContext`x$, 2] + 
                    Pi], {$CellContext`x$, $CellContext`y$}, \
{$CellContext`y$, $CellContext`x$}]]], {
                 Most[$CellContext`angleData$], 
                 Rest[$CellContext`angleData$]}]]]; Show[
             Graphics[{
               Opacity[4./(20 + 0.13 $CellContext`nlines$)], 
               ControlActive[Yellow, 
                Darker[Yellow, 0.3]], 
               Line[
                Table[
                 ({$CellContext`pt$$ - 25 #, $CellContext`pt$$ + 25 #}& )[{
                   Cos[$CellContext`\[Theta]], 
                   Sin[$CellContext`\[Theta]]}], {$CellContext`\[Theta], 0, 
                  Pi - Pi/$CellContext`nlines$, Pi/$CellContext`nlines$}]], 
               Opacity[0.2], White, 
               Line[
                Table[
                 
                 With[{$CellContext`x0$ = $CellContext`px$[$CellContext`tt], \
$CellContext`y0$ = $CellContext`py$[$CellContext`tt], $CellContext`dx0$ = 
                   Derivative[
                    1][$CellContext`px$][$CellContext`tt], $CellContext`dy0$ = 
                   Derivative[1][$CellContext`py$][$CellContext`tt]}, 
                  
                  With[{$CellContext`\[CapitalDelta]x$ = -$CellContext`r$ + \
$CellContext`x0$, $CellContext`\[CapitalDelta]y$ = -$CellContext`s$ + \
$CellContext`y0$, $CellContext`dx2$ = $CellContext`dx0$^2, $CellContext`dy2$ = \
$CellContext`dy0$^2}, 
                   Quiet[
                    Check[
                    ({{$CellContext`x0$, $CellContext`y0$} - (10 + 
                    Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #, {$CellContext`x0$, \
$CellContext`y0$} + (10 + Abs[$CellContext`x0$] + 
                    Abs[$CellContext`y0$]) #}& )[{($CellContext`dy2$ \
$CellContext`\[CapitalDelta]x$ - $CellContext`dx2$ $CellContext`\
\[CapitalDelta]x$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]y$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)], \
($CellContext`dx2$ $CellContext`\[CapitalDelta]y$ - $CellContext`dy2$ \
$CellContext`\[CapitalDelta]y$ - 
                    2 $CellContext`dx0$ $CellContext`dy0$ $CellContext`\
\[CapitalDelta]x$)/
                    Sqrt[($CellContext`dx2$ + $CellContext`dy2$)^2 \
($CellContext`\[CapitalDelta]x$^2 + $CellContext`\[CapitalDelta]y$^2)]}], \
{}]]]], {$CellContext`tt, $CellContext`ints$$}]], Yellow, 
               Opacity[1], 
               Tooltip[
                Disk[$CellContext`pt$$, (-0.005) Apply[Subtract, 
                   
                   Part[$CellContext`plotRange$, 
                    1]]], $CellContext`pt$$]}], $CellContext`mirrorPlot$, 
             (ControlActive[
              ParametricPlot[
               Evaluate[
                
                ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$]], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, PlotPoints -> 24, MaxRecursion -> 1, 
               PerformanceGoal -> "Speed"], 
              ParametricPlot[
               
               ReplaceAll[{$CellContext`x, $CellContext`y}, \
$CellContext`sol$], {$CellContext`t, 
                Part[#, 1], 
                Part[#, 2]}, PlotStyle -> {White, 
                 Thickness[Medium]}, RegionFunction -> 
               Function[{$CellContext`x$, $CellContext`y$, $CellContext`t$}, 
                 And[
                 Part[$CellContext`plotRange$, 1, 1] <= $CellContext`x$ <= 
                  Part[$CellContext`plotRange$, 1, 2], 
                  Part[$CellContext`plotRange$, 2, 1] <= $CellContext`y$ <= 
                  Part[$CellContext`plotRange$, 2, 2]]]]]& )[
              ReplaceAll["CausticDomain", $CellContext`data$]], 
             ImageSize -> {450, 450}, PlotRange -> $CellContext`plotRange$, 
             PlotRangePadding -> (Scaled[0.02]; 0), Axes -> False, Background -> 
             Black]]]], 
      "Specifications" :> {{{$CellContext`mirror$$, "node"}, {
         "circle", "ellipse", "parabola", "poly", "sine", "cardioid", 
          "deltoid", "cissoid", "spiral", "node"}, ControlType -> 
         SetterBar}, {{$CellContext`nlines$$, 100, "rays"}, {
         10 -> 20, 20 -> 40, 50 -> 100, 100 -> 200, 200 -> 400, 500 -> 1000, 
          1000 -> 2000, 2000 -> 4000}, ControlType -> 
         SetterBar}, {{$CellContext`pt$$, {-2.6666666666666665`, 0.}}, 
         Automatic, ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ints$$, CompressedData["
1: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
          "]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`mirror$$, $CellContext`nlines$$, \
$CellContext`pt$$}, AutorunSequencing -> {1}, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{505., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`$causticDB = 
       Map[Reverse, {{
           "Xt" -> (Cos[#]& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.4, 3.2}, {-2.3, 2.3}}} -> 
          "circle", {
           "Xt" -> (0.5 + 1.2 Cos[#]& ), "Yt" -> (0.8 Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, "PlotRange" -> {{-1, 3}, {-2, 2}}} -> 
          "ellipse", {
           "Xt" -> (#^2& ), "Yt" -> (#& ), 
            "MirrorPlotDomain" -> {-2.85, 2.85}, 
            "CausticDomain" -> {-3.5, 3.5}, 
            "PlotRange" -> {{-1.8, 3.8}, {-2.8, 2.8}}} -> 
          "parabola", {
           "Xt" -> (#& ), "Yt" -> (#^5 - #^3& ), 
            "MirrorPlotDomain" -> {-0.8, 1.5}, "CausticDomain" -> {-2, 2}, 
            "PlotRange" -> {{-0.8, 1.5}, {-0.75, 1.55}}} -> 
          "poly", {
           "Xt" -> (#& ), "Yt" -> (Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi - 0.25, Pi + 0.25}, 
            "CausticDomain" -> {-5, 5}, 
            "PlotRange" -> {{-3.2, 3.2}, {-3.2, 3.2}}} -> 
          "sine", {
           "Xt" -> ((1 + Cos[#]) Cos[#]& ), "Yt" -> ((1 + Cos[#]) Sin[#]& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-1.5, 3.5}, {-2.5, 2.5}}} -> 
          "cardioid", {
           "Xt" -> (Cos[#] + Cos[2 #]/2& ), "Yt" -> (Sin[#] - Sin[2 #]/2& ), 
            "MirrorPlotDomain" -> {-Pi, Pi - 1.*^-6}, 
            "CausticDomain" -> {-Pi, Pi}, 
            "PlotRange" -> {{-2.75, 4.75}, {-3.75, 3.75}}} -> 
          "deltoid", {
           "Xt" -> (Tan[#]^3/(1 + Tan[#]^2)& ), 
            "Yt" -> (-(Tan[#]^2/(1 + Tan[#]^2))& ), 
            "MirrorPlotDomain" -> {-1.57, 1.57}, 
            "CausticDomain" -> {-1.5702, 1.5702}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "cissoid", {
           "Xt" -> ((-E^(0.25 #)) Cos[#]& ), "Yt" -> ((-E^(0.25 #)) Sin[#]& ),
             "MirrorPlotDomain" -> {-15, 12.75}, 
            "CausticDomain" -> {-15, 12.5}, 
            "PlotRange" -> {{-4., 4.}, {-4.5, 3.5}}} -> 
          "spiral", {
           "Xt" -> (#^2 - 3& ), "Yt" -> (# ((#^2 - 3)/3)& ), 
            "MirrorPlotDomain" -> {-5.5, 5.5}, "CausticDomain" -> {-3.2, 3.2},
             "PlotRange" -> {{-4.5, 3.5}, {-4, 4}}} -> "node"}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->359612150]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
The whole line on both sides of the mirror is drawn, not just the reflected \
ray. Thus the whole mathematical caustic and not just the part corresponding \
to a physical mirror is made.\
\>", "DetailNotes",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4592496600431767`*^9, 3.4592496946818047`*^9}, {
   3.459249856831946*^9, 3.459249856999774*^9}, {3.459507917894621*^9, 
   3.459507929839727*^9}, {3.459520669140195*^9, 3.459520720860045*^9}, 
   3.459554944227362*^9},
 CellID->50498726],

Cell["\<\
For some mirrors a large number of rays leads to a very slow response and the \
picture is not always \"prettier\" than a smaller number; for others, a large \
number of rays makes a pretty picture. Even a moderate number of rays may \
take a couple of seconds to render. \
\>", "DetailNotes",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459507933500489*^9, 3.459507992564217*^9}, {
   3.459519238319776*^9, 3.459519243259376*^9}, {3.459520057523292*^9, 
   3.459520110017479*^9}, {3.459520142310192*^9, 3.459520163470059*^9}, {
   3.459520223000121*^9, 3.45952023351095*^9}, {3.4595549442323627`*^9, 
   3.459554944237363*^9}, {3.4596099687621512`*^9, 3.459609985184131*^9}},
 CellID->476047317],

Cell["\<\
The yellow rays fade as the number of rays increases. This is so they do not \
obscure the caustic when their number is large.\
\>", "DetailNotes",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459520391762699*^9, 3.4595204730410423`*^9}, 
   3.4595549442413635`*^9},
 CellID->2137483273],

Cell[TextData[{
 "The curve called \"node\" is a Tschirnhausen cubic, which can also be seen \
on the corresponding ",
 StyleBox["MathWorld",
  FontSlant->"Italic"],
 " page (see Related Links)."
}], "DetailNotes",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4595208733747997`*^9, 3.45952098133292*^9}, {
   3.459554944247364*^9, 3.4595549560105405`*^9}, {3.459610015293699*^9, 
   3.459610019012473*^9}, {3.4596825520172997`*^9, 3.459682577616486*^9}},
 CellID->1574922295],

Cell[TextData[{
 "Envelopes: If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     RowBox[{"x", ",", "y", ",", "t"}], ")"}], "=", "0"}], TraditionalForm]], 
  "InlineMath"],
 " is a family of curves depending on a parameter ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath"],
 ", then the envelope of the family is the solution to the system ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "F"}], " ", "=", " ", "0"}]}], 
   TraditionalForm]], "InlineMath"],
 ". In a catacaustic, the family consists of the reflected lines, and the \
parameter ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath"],
 " is the parameter of the parametrization of the mirror curve. In this case \
the system is linear in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath"],
 " and has a closed-form solution.",
 " "
}], "DetailNotes",
 CellChangeTimes->{
  3.35696210375764*^9, {3.45952276172895*^9, 3.4595229899172773`*^9}, {
   3.459523084960616*^9, 3.459523110807186*^9}, {3.459523170060116*^9, 
   3.459523200234064*^9}, {3.4595549442563653`*^9, 3.459554944440384*^9}},
 CellID->390110090]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.4595549651744566`*^9, 
  3.459609797917308*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.459609793073527*^9},
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.459419122080057*^9},
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["caustic", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459007002111635*^9, 3.459007005139572*^9}, 
   3.4595234247141848`*^9},
 CellID->1349524600],

Cell["catacaustic", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459007005849864*^9, 3.459007009226087*^9}, 
   3.4595234261827087`*^9},
 CellID->1885156233]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Caustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Caustic.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Caustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459007094933282*^9, 3.4590071048835897`*^9}},
 CellID->1994563840],

Cell[TextData[ButtonBox["Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Catacaustic.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Catacaustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4590071302091017`*^9, 3.459007140612761*^9}},
 CellID->414729210],

Cell[TextData[ButtonBox["Circle Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/CircleCatacaustic.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/CircleCatacaustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459007190613813*^9, 3.459007204383626*^9}, {
   3.4591774156779737`*^9, 3.459177415679504*^9}},
 CellID->1769397955],

Cell[TextData[ButtonBox["Ellipse Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/EllipseCatacaustic.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/EllipseCatacaustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459177435887472*^9, 3.459177446742342*^9}},
 CellID->1021288480],

Cell[TextData[ButtonBox["Cardioid Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/CardioidCatacaustic.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/CardioidCatacaustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459177350050811*^9, 3.4591773624150143`*^9}},
 CellID->1849190175],

Cell[TextData[ButtonBox["Cissoid of Diocles Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/CissoidofDioclesCatacaustic.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/CissoidofDioclesCatacaustic.html"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459239961126011*^9, 3.459240001906746*^9}},
 CellID->1582330807],

Cell[TextData[ButtonBox["Parabola Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/ParabolaCatacaustic.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/ParabolaCatacaustic.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4593389882753887`*^9, 3.459339002192892*^9}},
 CellID->976971267],

Cell[TextData[ButtonBox["Logarithmic Spiral Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/LogarithmicSpiralCatacaustic.html"], 
   None},
 ButtonNote->
  "http://mathworld.wolfram.com/LogarithmicSpiralCatacaustic.html"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459434350390808*^9, 3.459434361840454*^9}},
 CellID->1408897196],

Cell[TextData[ButtonBox["Tschirnhausen Cubic Catacaustic",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/TschirnhausenCubicCatacaustic.html"], 
   None},
 ButtonNote->
  "http://mathworld.wolfram.com/TschirnhausenCubicCatacaustic.html"]], \
"RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459499470493754*^9, 3.459499495168436*^9}},
 CellID->1161151191],

Cell[TextData[ButtonBox["Envelope",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Envelope.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Envelope.html"]], "RelatedLinks",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459521054303878*^9, 3.4595210613216457`*^9}},
 CellID->1983062790]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Michael Rogers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Michael+Rogers"]\
, None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Michael+Rogers"],
 " (Oxford College of Emory University)"
}], "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.459007144326459*^9, 3.4590071546213284`*^9}, {
   3.4595976775453324`*^9, 3.4595976775453324`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{909, 891},
WindowMargins->{{41, Automatic}, {Automatic, 2}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[418573, 7795, 402, 10, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[418978, 7807, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[419659, 7825, 402, 12, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[420064, 7839, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[420704, 7856, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[421551, 7879, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[421923, 7890, 1464, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[423390, 7923, 970, 22, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 429483, 8105},
 {"RotateAndZoomIn3D", 429594, 8108},
 {"DragLocators", 429705, 8111},
 {"CreateAndDeleteLocators", 429822, 8114},
 {"SliderZoom", 429937, 8117},
 {"GamepadControls", 430044, 8120},
 {"AutomaticAnimation", 430158, 8123},
 {"BookmarkAnimation", 430276, 8126}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 255, 4, 74, "DemoTitle"],
Cell[825, 28, 33, 0, 266, "InitializationSection"],
Cell[CellGroupData[{
Cell[883, 32, 29, 0, 188, "ManipulateSection"],
Cell[CellGroupData[{
Cell[937, 36, 90341, 1855, 2767, "Input",
 CellID->958173997],
Cell[91281, 1893, 25926, 482, 581, "Output",
 CellID->431012052]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117253, 2381, 36, 0, 166, "ManipulateCaptionSection"],
Cell[117292, 2383, 1079, 16, 52, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118408, 2404, 28, 0, 168, "ThumbnailSection"],
Cell[118439, 2406, 30862, 564, 581, "Output",
 CellID->454650124]
}, Open  ]],
Cell[CellGroupData[{
Cell[149338, 2975, 28, 0, 138, "SnapshotsSection"],
Cell[149369, 2977, 50007, 880, 581, "Output",
 CellID->370097166],
Cell[199379, 3859, 30350, 557, 581, "Output",
 CellID->87380646],
Cell[229732, 4418, 52118, 913, 581, "Output",
 CellID->757067156],
Cell[281853, 5333, 55116, 961, 581, "Output",
 CellID->1666979],
Cell[336972, 6296, 45455, 804, 581, "Output",
 CellID->375542462],
Cell[382430, 7102, 32686, 593, 581, "Output",
 CellID->359612150]
}, Open  ]],
Cell[CellGroupData[{
Cell[415153, 7700, 26, 0, 332, "DetailsSection"],
Cell[415182, 7702, 502, 10, 37, "DetailNotes",
 CellID->50498726],
Cell[415687, 7714, 708, 12, 52, "DetailNotes",
 CellID->476047317],
Cell[416398, 7728, 298, 7, 37, "DetailNotes",
 CellID->2137483273],
Cell[416699, 7737, 476, 11, 37, "DetailNotes",
 CellID->1574922295],
Cell[417178, 7750, 1318, 38, 70, "DetailNotes",
 CellID->390110090]
}, Open  ]],
Cell[CellGroupData[{
Cell[418533, 7793, 37, 0, 120, "ControlSuggestionsSection"],
Cell[418573, 7795, 402, 10, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[418978, 7807, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[419659, 7825, 402, 12, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[420064, 7839, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[420704, 7856, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[421551, 7879, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[421923, 7890, 1464, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[423390, 7923, 970, 22, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424397, 7950, 30, 0, 152, "SearchTermsSection"],
Cell[424430, 7952, 169, 4, 22, "SearchTerms",
 CellID->1349524600],
Cell[424602, 7958, 173, 4, 22, "SearchTerms",
 CellID->1885156233]
}, Open  ]],
Cell[CellGroupData[{
Cell[424812, 7967, 31, 0, 138, "RelatedLinksSection"],
Cell[424846, 7969, 323, 7, 22, "RelatedLinks",
 CellID->1994563840],
Cell[425172, 7978, 334, 7, 22, "RelatedLinks",
 CellID->414729210],
Cell[425509, 7987, 407, 9, 22, "RelatedLinks",
 CellID->1769397955],
Cell[425919, 7998, 358, 8, 22, "RelatedLinks",
 CellID->1021288480],
Cell[426280, 8008, 363, 8, 22, "RelatedLinks",
 CellID->1849190175],
Cell[426646, 8018, 389, 9, 22, "RelatedLinks",
 CellID->1582330807],
Cell[427038, 8029, 362, 8, 22, "RelatedLinks",
 CellID->976971267],
Cell[427403, 8039, 395, 10, 22, "RelatedLinks",
 CellID->1408897196],
Cell[427801, 8051, 398, 10, 22, "RelatedLinks",
 CellID->1161151191],
Cell[428202, 8063, 326, 7, 22, "RelatedLinks",
 CellID->1983062790]
}, Open  ]],
Cell[CellGroupData[{
Cell[428565, 8075, 25, 0, 136, "AuthorSection"],
Cell[428593, 8077, 487, 13, 22, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
